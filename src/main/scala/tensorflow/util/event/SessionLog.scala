// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.util.event

import tensorflow.util.event

/** Protocol buffer used for logging session state.
  *
  * @param checkpointPath
  *   This checkpoint_path contains both the path and filename.
  */
@SerialVersionUID(0L)
final case class SessionLog(
                             status: SessionLog.SessionStatus = event.SessionLog.SessionStatus.STATUS_UNSPECIFIED,
                             checkpointPath: _root_.scala.Predef.String = "",
                             msg: _root_.scala.Predef.String = "",
                             unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SessionLog] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = status.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = checkpointPath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = msg
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = status.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = checkpointPath
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = msg
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withStatus(__v: SessionLog.SessionStatus): SessionLog = copy(status = __v)
    def withCheckpointPath(__v: _root_.scala.Predef.String): SessionLog = copy(checkpointPath = __v)
    def withMsg(__v: _root_.scala.Predef.String): SessionLog = copy(msg = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = status.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = checkpointPath
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = msg
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PString(checkpointPath)
        case 3 => _root_.scalapb.descriptors.PString(msg)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: SessionLog.type = event.SessionLog
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.SessionLog])
}

object SessionLog extends scalapb.GeneratedMessageCompanion[SessionLog] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[SessionLog] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): SessionLog = {
    var __status: SessionLog.SessionStatus = event.SessionLog.SessionStatus.STATUS_UNSPECIFIED
    var __checkpointPath: _root_.scala.Predef.String = ""
    var __msg: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __status = event.SessionLog.SessionStatus.fromValue(_input__.readEnum())
        case 18 =>
          __checkpointPath = _input__.readStringRequireUtf8()
        case 26 =>
          __msg = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    SessionLog(
        status = __status,
        checkpointPath = __checkpointPath,
        msg = __msg,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[SessionLog] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      SessionLog(
        status = event.SessionLog.SessionStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(event.SessionLog.SessionStatus.STATUS_UNSPECIFIED.scalaValueDescriptor).number),
        checkpointPath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        msg = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.util.event.EventProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.util.event.EventProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => event.SessionLog.SessionStatus
    }
  }
  lazy val defaultInstance = SessionLog(
    status = event.SessionLog.SessionStatus.STATUS_UNSPECIFIED,
    checkpointPath = "",
    msg = ""
  )
  sealed abstract class SessionStatus(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = SessionLog.SessionStatus
    type RecognizedType = SessionLog.SessionStatus.Recognized
    def isStatusUnspecified: _root_.scala.Boolean = false
    def isStart: _root_.scala.Boolean = false
    def isStop: _root_.scala.Boolean = false
    def isCheckpoint: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[SessionStatus] = event.SessionLog.SessionStatus
    final def asRecognized: _root_.scala.Option[SessionLog.SessionStatus.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[SessionLog.SessionStatus.Recognized])
  }
  
  object SessionStatus extends _root_.scalapb.GeneratedEnumCompanion[SessionStatus] {
    sealed trait Recognized extends SessionStatus
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[SessionStatus] = this
    
    @SerialVersionUID(0L)
    case object STATUS_UNSPECIFIED extends SessionStatus(0) with SessionStatus.Recognized {
      val index = 0
      val name = "STATUS_UNSPECIFIED"
      override def isStatusUnspecified: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object START extends SessionStatus(1) with SessionStatus.Recognized {
      val index = 1
      val name = "START"
      override def isStart: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object STOP extends SessionStatus(2) with SessionStatus.Recognized {
      val index = 2
      val name = "STOP"
      override def isStop: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHECKPOINT extends SessionStatus(3) with SessionStatus.Recognized {
      val index = 3
      val name = "CHECKPOINT"
      override def isCheckpoint: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends SessionStatus(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(STATUS_UNSPECIFIED, START, STOP, CHECKPOINT)
    def fromValue(__value: _root_.scala.Int): SessionStatus = __value match {
      case 0 => STATUS_UNSPECIFIED
      case 1 => START
      case 2 => STOP
      case 3 => CHECKPOINT
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = event.SessionLog.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = event.SessionLog.scalaDescriptor.enums(0)
  }
  implicit class SessionLogLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, SessionLog]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, SessionLog](_l) {
    def status: _root_.scalapb.lenses.Lens[UpperPB, SessionLog.SessionStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def checkpointPath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.checkpointPath)((c_, f_) => c_.copy(checkpointPath = f_))
    def msg: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.msg)((c_, f_) => c_.copy(msg = f_))
  }
  final val STATUS_FIELD_NUMBER = 1
  final val CHECKPOINT_PATH_FIELD_NUMBER = 2
  final val MSG_FIELD_NUMBER = 3
  def of(
          status: SessionLog.SessionStatus,
          checkpointPath: _root_.scala.Predef.String,
          msg: _root_.scala.Predef.String
  ): SessionLog = SessionLog(
    status,
    checkpointPath,
    msg
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.SessionLog])
}
