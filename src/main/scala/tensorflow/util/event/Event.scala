// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.util.event

import tensorflow.framework.summary
import tensorflow.framework.summary.Summary
import tensorflow.util.event

/** Protocol buffer representing an event that happened during
  * the execution of a Brain model.
  *
  * @param wallTime
  *   Timestamp of the event.
  * @param step
  *   Global step of the event.
  * @param sourceMetadata
  *   Information of the source that writes the events, this is only logged in
  *   the very first event along with the `file_version` field.
  */
@SerialVersionUID(0L)
final case class Event(
                        wallTime: _root_.scala.Double = 0.0,
                        step: _root_.scala.Long = 0L,
                        what: Event.What = event.Event.What.Empty,
                        sourceMetadata: _root_.scala.Option[SourceMetadata] = _root_.scala.None,
                        unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Event] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = wallTime
        if (__value != 0.0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(1, __value)
        }
      };
      
      {
        val __value = step
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      if (what.fileVersion.isDefined) {
        val __value = what.fileVersion.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (what.graphDef.isDefined) {
        val __value = what.graphDef.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
      };
      if (what.summary.isDefined) {
        val __value = what.summary.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (what.logMessage.isDefined) {
        val __value = what.logMessage.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (what.sessionLog.isDefined) {
        val __value = what.sessionLog.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (what.taggedRunMetadata.isDefined) {
        val __value = what.taggedRunMetadata.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (what.metaGraphDef.isDefined) {
        val __value = what.metaGraphDef.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(9, __value)
      };
      if (sourceMetadata.isDefined) {
        val __value = sourceMetadata.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = wallTime
        if (__v != 0.0) {
          _output__.writeDouble(1, __v)
        }
      };
      {
        val __v = step
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      what.fileVersion.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      what.graphDef.foreach { __v =>
        val __m = __v
        _output__.writeBytes(4, __m)
      };
      what.summary.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      what.logMessage.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      what.sessionLog.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      what.taggedRunMetadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      what.metaGraphDef.foreach { __v =>
        val __m = __v
        _output__.writeBytes(9, __m)
      };
      sourceMetadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withWallTime(__v: _root_.scala.Double): Event = copy(wallTime = __v)
    def withStep(__v: _root_.scala.Long): Event = copy(step = __v)
    def getFileVersion: _root_.scala.Predef.String = what.fileVersion.getOrElse("")
    def withFileVersion(__v: _root_.scala.Predef.String): Event = copy(what = event.Event.What.FileVersion(__v))
    def getGraphDef: _root_.com.google.protobuf.ByteString = what.graphDef.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withGraphDef(__v: _root_.com.google.protobuf.ByteString): Event = copy(what = event.Event.What.GraphDef(__v))
    def getSummary: Summary = what.summary.getOrElse(summary.Summary.defaultInstance)
    def withSummary(__v: Summary): Event = copy(what = event.Event.What.Summary(__v))
    def getLogMessage: LogMessage = what.logMessage.getOrElse(event.LogMessage.defaultInstance)
    def withLogMessage(__v: LogMessage): Event = copy(what = event.Event.What.LogMessage(__v))
    def getSessionLog: SessionLog = what.sessionLog.getOrElse(event.SessionLog.defaultInstance)
    def withSessionLog(__v: SessionLog): Event = copy(what = event.Event.What.SessionLog(__v))
    def getTaggedRunMetadata: TaggedRunMetadata = what.taggedRunMetadata.getOrElse(event.TaggedRunMetadata.defaultInstance)
    def withTaggedRunMetadata(__v: TaggedRunMetadata): Event = copy(what = event.Event.What.TaggedRunMetadata(__v))
    def getMetaGraphDef: _root_.com.google.protobuf.ByteString = what.metaGraphDef.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withMetaGraphDef(__v: _root_.com.google.protobuf.ByteString): Event = copy(what = event.Event.What.MetaGraphDef(__v))
    def getSourceMetadata: SourceMetadata = sourceMetadata.getOrElse(event.SourceMetadata.defaultInstance)
    def clearSourceMetadata: Event = copy(sourceMetadata = _root_.scala.None)
    def withSourceMetadata(__v: SourceMetadata): Event = copy(sourceMetadata = Option(__v))
    def clearWhat: Event = copy(what = event.Event.What.Empty)
    def withWhat(__v: Event.What): Event = copy(what = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = wallTime
          if (__t != 0.0) __t else null
        }
        case 2 => {
          val __t = step
          if (__t != 0L) __t else null
        }
        case 3 => what.fileVersion.orNull
        case 4 => what.graphDef.orNull
        case 5 => what.summary.orNull
        case 6 => what.logMessage.orNull
        case 7 => what.sessionLog.orNull
        case 8 => what.taggedRunMetadata.orNull
        case 9 => what.metaGraphDef.orNull
        case 10 => sourceMetadata.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PDouble(wallTime)
        case 2 => _root_.scalapb.descriptors.PLong(step)
        case 3 => what.fileVersion.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => what.graphDef.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => what.summary.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => what.logMessage.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => what.sessionLog.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => what.taggedRunMetadata.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => what.metaGraphDef.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => sourceMetadata.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: Event.type = event.Event
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.Event])
}

object Event extends scalapb.GeneratedMessageCompanion[Event] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[Event] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): Event = {
    var __wallTime: _root_.scala.Double = 0.0
    var __step: _root_.scala.Long = 0L
    var __sourceMetadata: _root_.scala.Option[SourceMetadata] = _root_.scala.None
    var __what: Event.What = event.Event.What.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 9 =>
          __wallTime = _input__.readDouble()
        case 16 =>
          __step = _input__.readInt64()
        case 26 =>
          __what = event.Event.What.FileVersion(_input__.readStringRequireUtf8())
        case 34 =>
          __what = event.Event.What.GraphDef(_input__.readBytes())
        case 42 =>
          __what = event.Event.What.Summary(__what.summary.fold(_root_.scalapb.LiteParser.readMessage[Summary](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __what = event.Event.What.LogMessage(__what.logMessage.fold(_root_.scalapb.LiteParser.readMessage[LogMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __what = event.Event.What.SessionLog(__what.sessionLog.fold(_root_.scalapb.LiteParser.readMessage[SessionLog](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __what = event.Event.What.TaggedRunMetadata(__what.taggedRunMetadata.fold(_root_.scalapb.LiteParser.readMessage[TaggedRunMetadata](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __what = event.Event.What.MetaGraphDef(_input__.readBytes())
        case 82 =>
          __sourceMetadata = _root_.scala.Option(__sourceMetadata.fold(_root_.scalapb.LiteParser.readMessage[SourceMetadata](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    Event(
        wallTime = __wallTime,
        step = __step,
        sourceMetadata = __sourceMetadata,
        what = __what,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[Event] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      Event(
        wallTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Double]).getOrElse(0.0),
        step = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sourceMetadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[SourceMetadata]]),
        what = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(event.Event.What.FileVersion(_))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(event.Event.What.GraphDef(_)))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[Summary]]).map(event.Event.What.Summary(_)))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[LogMessage]]).map(event.Event.What.LogMessage(_)))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[SessionLog]]).map(event.Event.What.SessionLog(_)))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[TaggedRunMetadata]]).map(event.Event.What.TaggedRunMetadata(_)))
            .orElse[Event.What](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(event.Event.What.MetaGraphDef(_)))
            .getOrElse(event.Event.What.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.util.event.EventProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.util.event.EventProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = Summary
      case 6 => __out = event.LogMessage
      case 7 => __out = event.SessionLog
      case 8 => __out = event.TaggedRunMetadata
      case 10 => __out = event.SourceMetadata
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = Event(
    wallTime = 0.0,
    step = 0L,
    sourceMetadata = _root_.scala.None,
    what = event.Event.What.Empty
  )
  sealed abstract class What extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isFileVersion: _root_.scala.Boolean = false
    def isGraphDef: _root_.scala.Boolean = false
    def isSummary: _root_.scala.Boolean = false
    def isLogMessage: _root_.scala.Boolean = false
    def isSessionLog: _root_.scala.Boolean = false
    def isTaggedRunMetadata: _root_.scala.Boolean = false
    def isMetaGraphDef: _root_.scala.Boolean = false
    def fileVersion: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def graphDef: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    def summary: _root_.scala.Option[Summary] = _root_.scala.None
    def logMessage: _root_.scala.Option[LogMessage] = _root_.scala.None
    def sessionLog: _root_.scala.Option[SessionLog] = _root_.scala.None
    def taggedRunMetadata: _root_.scala.Option[TaggedRunMetadata] = _root_.scala.None
    def metaGraphDef: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
  }
  object What {
    @SerialVersionUID(0L)
    case object Empty extends Event.What {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class FileVersion(value: _root_.scala.Predef.String) extends Event.What {
      type ValueType = _root_.scala.Predef.String
      override def isFileVersion: _root_.scala.Boolean = true
      override def fileVersion: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class GraphDef(value: _root_.com.google.protobuf.ByteString) extends Event.What {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isGraphDef: _root_.scala.Boolean = true
      override def graphDef: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class Summary(value: summary.Summary) extends Event.What {
      type ValueType = summary.Summary
      override def isSummary: _root_.scala.Boolean = true
      override def summary: _root_.scala.Option[summary.Summary] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L) @scala.deprecated(message="Marked as deprecated in proto file", "")
    final case class LogMessage(value: event.LogMessage) extends Event.What {
      type ValueType = event.LogMessage
      override def isLogMessage: _root_.scala.Boolean = true
      override def logMessage: _root_.scala.Option[event.LogMessage] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class SessionLog(value: event.SessionLog) extends Event.What {
      type ValueType = event.SessionLog
      override def isSessionLog: _root_.scala.Boolean = true
      override def sessionLog: _root_.scala.Option[event.SessionLog] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class TaggedRunMetadata(value: event.TaggedRunMetadata) extends Event.What {
      type ValueType = event.TaggedRunMetadata
      override def isTaggedRunMetadata: _root_.scala.Boolean = true
      override def taggedRunMetadata: _root_.scala.Option[event.TaggedRunMetadata] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class MetaGraphDef(value: _root_.com.google.protobuf.ByteString) extends Event.What {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isMetaGraphDef: _root_.scala.Boolean = true
      override def metaGraphDef: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 9
    }
  }
  implicit class EventLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, Event]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, Event](_l) {
    def wallTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.wallTime)((c_, f_) => c_.copy(wallTime = f_))
    def step: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.step)((c_, f_) => c_.copy(step = f_))
    def fileVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getFileVersion)((c_, f_) => c_.copy(what = event.Event.What.FileVersion(f_)))
    def graphDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getGraphDef)((c_, f_) => c_.copy(what = event.Event.What.GraphDef(f_)))
    def summary: _root_.scalapb.lenses.Lens[UpperPB, Summary] = field(_.getSummary)((c_, f_) => c_.copy(what = event.Event.What.Summary(f_)))
    def logMessage: _root_.scalapb.lenses.Lens[UpperPB, LogMessage] = field(_.getLogMessage)((c_, f_) => c_.copy(what = event.Event.What.LogMessage(f_)))
    def sessionLog: _root_.scalapb.lenses.Lens[UpperPB, SessionLog] = field(_.getSessionLog)((c_, f_) => c_.copy(what = event.Event.What.SessionLog(f_)))
    def taggedRunMetadata: _root_.scalapb.lenses.Lens[UpperPB, TaggedRunMetadata] = field(_.getTaggedRunMetadata)((c_, f_) => c_.copy(what = event.Event.What.TaggedRunMetadata(f_)))
    def metaGraphDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getMetaGraphDef)((c_, f_) => c_.copy(what = event.Event.What.MetaGraphDef(f_)))
    def sourceMetadata: _root_.scalapb.lenses.Lens[UpperPB, SourceMetadata] = field(_.getSourceMetadata)((c_, f_) => c_.copy(sourceMetadata = _root_.scala.Option(f_)))
    def optionalSourceMetadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[SourceMetadata]] = field(_.sourceMetadata)((c_, f_) => c_.copy(sourceMetadata = f_))
    def what: _root_.scalapb.lenses.Lens[UpperPB, Event.What] = field(_.what)((c_, f_) => c_.copy(what = f_))
  }
  final val WALL_TIME_FIELD_NUMBER = 1
  final val STEP_FIELD_NUMBER = 2
  final val FILE_VERSION_FIELD_NUMBER = 3
  final val GRAPH_DEF_FIELD_NUMBER = 4
  final val SUMMARY_FIELD_NUMBER = 5
  final val LOG_MESSAGE_FIELD_NUMBER = 6
  final val SESSION_LOG_FIELD_NUMBER = 7
  final val TAGGED_RUN_METADATA_FIELD_NUMBER = 8
  final val META_GRAPH_DEF_FIELD_NUMBER = 9
  final val SOURCE_METADATA_FIELD_NUMBER = 10
  def of(
          wallTime: _root_.scala.Double,
          step: _root_.scala.Long,
          what: Event.What,
          sourceMetadata: _root_.scala.Option[SourceMetadata]
  ): Event = Event(
    wallTime,
    step,
    what,
    sourceMetadata
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.Event])
}
