// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.debug

import tensorflow.framework.debug

/** Options for initializing DebuggerState in TensorFlow Debugger (tfdbg).
  *
  * @param debugTensorWatchOpts
  *   Debugging options
  * @param globalStep
  *   Caller-specified global step count.
  *   Note that this is distinct from the session run count and the executor
  *   step count.
  * @param resetDiskByteUsage
  *   Whether the total disk usage of tfdbg is to be reset to zero
  *   in this Session.run call. This is used by wrappers and hooks
  *   such as the local CLI ones to indicate that the dumped tensors
  *   are cleaned up from the disk after each Session.run.
  */
@SerialVersionUID(0L)
final case class DebugOptions(
                               debugTensorWatchOpts: _root_.scala.Seq[DebugTensorWatch] = _root_.scala.Seq.empty,
                               globalStep: _root_.scala.Long = 0L,
                               resetDiskByteUsage: _root_.scala.Boolean = false,
                               unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DebugOptions] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      debugTensorWatchOpts.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = globalStep
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(10, __value)
        }
      };
      
      {
        val __value = resetDiskByteUsage
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(11, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      debugTensorWatchOpts.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = globalStep
        if (__v != 0L) {
          _output__.writeInt64(10, __v)
        }
      };
      {
        val __v = resetDiskByteUsage
        if (__v != false) {
          _output__.writeBool(11, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearDebugTensorWatchOpts = copy(debugTensorWatchOpts = _root_.scala.Seq.empty)
    def addDebugTensorWatchOpts(__vs: DebugTensorWatch *): DebugOptions = addAllDebugTensorWatchOpts(__vs)
    def addAllDebugTensorWatchOpts(__vs: Iterable[DebugTensorWatch]): DebugOptions = copy(debugTensorWatchOpts = debugTensorWatchOpts ++ __vs)
    def withDebugTensorWatchOpts(__v: _root_.scala.Seq[DebugTensorWatch]): DebugOptions = copy(debugTensorWatchOpts = __v)
    def withGlobalStep(__v: _root_.scala.Long): DebugOptions = copy(globalStep = __v)
    def withResetDiskByteUsage(__v: _root_.scala.Boolean): DebugOptions = copy(resetDiskByteUsage = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 4 => debugTensorWatchOpts
        case 10 => {
          val __t = globalStep
          if (__t != 0L) __t else null
        }
        case 11 => {
          val __t = resetDiskByteUsage
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 4 => _root_.scalapb.descriptors.PRepeated(debugTensorWatchOpts.iterator.map(_.toPMessage).toVector)
        case 10 => _root_.scalapb.descriptors.PLong(globalStep)
        case 11 => _root_.scalapb.descriptors.PBoolean(resetDiskByteUsage)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: DebugOptions.type = debug.DebugOptions
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.DebugOptions])
}

object DebugOptions extends scalapb.GeneratedMessageCompanion[DebugOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[DebugOptions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): DebugOptions = {
    val __debugTensorWatchOpts: _root_.scala.collection.immutable.VectorBuilder[DebugTensorWatch] = new _root_.scala.collection.immutable.VectorBuilder[DebugTensorWatch]
    var __globalStep: _root_.scala.Long = 0L
    var __resetDiskByteUsage: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 34 =>
          __debugTensorWatchOpts += _root_.scalapb.LiteParser.readMessage[DebugTensorWatch](_input__)
        case 80 =>
          __globalStep = _input__.readInt64()
        case 88 =>
          __resetDiskByteUsage = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    DebugOptions(
        debugTensorWatchOpts = __debugTensorWatchOpts.result(),
        globalStep = __globalStep,
        resetDiskByteUsage = __resetDiskByteUsage,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[DebugOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      DebugOptions(
        debugTensorWatchOpts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[DebugTensorWatch]]).getOrElse(_root_.scala.Seq.empty),
        globalStep = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        resetDiskByteUsage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.debug.DebugProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.debug.DebugProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = debug.DebugTensorWatch
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = DebugOptions(
    debugTensorWatchOpts = _root_.scala.Seq.empty,
    globalStep = 0L,
    resetDiskByteUsage = false
  )
  implicit class DebugOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, DebugOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, DebugOptions](_l) {
    def debugTensorWatchOpts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[DebugTensorWatch]] = field(_.debugTensorWatchOpts)((c_, f_) => c_.copy(debugTensorWatchOpts = f_))
    def globalStep: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.globalStep)((c_, f_) => c_.copy(globalStep = f_))
    def resetDiskByteUsage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.resetDiskByteUsage)((c_, f_) => c_.copy(resetDiskByteUsage = f_))
  }
  final val DEBUG_TENSOR_WATCH_OPTS_FIELD_NUMBER = 4
  final val GLOBAL_STEP_FIELD_NUMBER = 10
  final val RESET_DISK_BYTE_USAGE_FIELD_NUMBER = 11
  def of(
          debugTensorWatchOpts: _root_.scala.Seq[DebugTensorWatch],
          globalStep: _root_.scala.Long,
          resetDiskByteUsage: _root_.scala.Boolean
  ): DebugOptions = DebugOptions(
    debugTensorWatchOpts,
    globalStep,
    resetDiskByteUsage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.DebugOptions])
}
