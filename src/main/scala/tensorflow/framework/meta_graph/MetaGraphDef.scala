// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.meta_graph

import tensorflow.framework.graph.GraphDef
import tensorflow.framework.op_def.OpList
import tensorflow.framework.{graph, meta_graph, op_def}
import tensorflow.util.saver
import tensorflow.util.saver.SaverDef

/** Protocol buffer containing the following which are necessary to restart
  * training, run inference. It can be used to serialize/de-serialize memory
  * objects necessary for running computation in a graph when crossing the
  * process boundary. It can be used for long term storage of graphs,
  * cross-language execution of graphs, etc.
  *   MetaInfoDef
  *   GraphDef
  *   SaverDef
  *   CollectionDef
  *   TensorInfo
  *   SignatureDef
  *
  * @param graphDef
  *   GraphDef.
  * @param saverDef
  *   SaverDef.
  * @param collectionDef
  *   collection_def: Map from collection name to collections.
  *   See CollectionDef section for details.
  * @param signatureDef
  *   signature_def: Map from user supplied key for a signature to a single
  *   SignatureDef.
  * @param assetFileDef
  *   Asset file def to be used with the defined graph.
  * @param objectGraphDef
  *   Extra information about the structure of functions and stateful objects.
  */
@SerialVersionUID(0L)
final case class MetaGraphDef(
                               metaInfoDef: _root_.scala.Option[MetaGraphDef.MetaInfoDef] = _root_.scala.None,
                               graphDef: _root_.scala.Option[GraphDef] = _root_.scala.None,
                               saverDef: _root_.scala.Option[SaverDef] = _root_.scala.None,
                               collectionDef: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, CollectionDef] = _root_.scala.collection.immutable.Map.empty,
                               signatureDef: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, SignatureDef] = _root_.scala.collection.immutable.Map.empty,
                               assetFileDef: _root_.scala.Seq[AssetFileDef] = _root_.scala.Seq.empty,
                               objectGraphDef: _root_.scala.Option[tensorboard.saved_object_graph.SavedObjectGraph] = _root_.scala.None,
                               unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MetaGraphDef] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (metaInfoDef.isDefined) {
        val __value = metaInfoDef.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (graphDef.isDefined) {
        val __value = graphDef.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (saverDef.isDefined) {
        val __value = saverDef.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      collectionDef.foreach { __item =>
        val __value = meta_graph.MetaGraphDef._typemapper_collectionDef.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      signatureDef.foreach { __item =>
        val __value = meta_graph.MetaGraphDef._typemapper_signatureDef.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      assetFileDef.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (objectGraphDef.isDefined) {
        val __value = objectGraphDef.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      metaInfoDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      graphDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      saverDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      collectionDef.foreach { __v =>
        val __m = meta_graph.MetaGraphDef._typemapper_collectionDef.toBase(__v)
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      signatureDef.foreach { __v =>
        val __m = meta_graph.MetaGraphDef._typemapper_signatureDef.toBase(__v)
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      assetFileDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      objectGraphDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getMetaInfoDef: MetaGraphDef.MetaInfoDef = metaInfoDef.getOrElse(meta_graph.MetaGraphDef.MetaInfoDef.defaultInstance)
    def clearMetaInfoDef: MetaGraphDef = copy(metaInfoDef = _root_.scala.None)
    def withMetaInfoDef(__v: MetaGraphDef.MetaInfoDef): MetaGraphDef = copy(metaInfoDef = Option(__v))
    def getGraphDef: GraphDef = graphDef.getOrElse(graph.GraphDef.defaultInstance)
    def clearGraphDef: MetaGraphDef = copy(graphDef = _root_.scala.None)
    def withGraphDef(__v: GraphDef): MetaGraphDef = copy(graphDef = Option(__v))
    def getSaverDef: SaverDef = saverDef.getOrElse(saver.SaverDef.defaultInstance)
    def clearSaverDef: MetaGraphDef = copy(saverDef = _root_.scala.None)
    def withSaverDef(__v: SaverDef): MetaGraphDef = copy(saverDef = Option(__v))
    def clearCollectionDef = copy(collectionDef = _root_.scala.collection.immutable.Map.empty)
    def addCollectionDef(__vs: (_root_.scala.Predef.String, CollectionDef) *): MetaGraphDef = addAllCollectionDef(__vs)
    def addAllCollectionDef(__vs: Iterable[(_root_.scala.Predef.String, CollectionDef)]): MetaGraphDef = copy(collectionDef = collectionDef ++ __vs)
    def withCollectionDef(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, CollectionDef]): MetaGraphDef = copy(collectionDef = __v)
    def clearSignatureDef = copy(signatureDef = _root_.scala.collection.immutable.Map.empty)
    def addSignatureDef(__vs: (_root_.scala.Predef.String, SignatureDef) *): MetaGraphDef = addAllSignatureDef(__vs)
    def addAllSignatureDef(__vs: Iterable[(_root_.scala.Predef.String, SignatureDef)]): MetaGraphDef = copy(signatureDef = signatureDef ++ __vs)
    def withSignatureDef(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, SignatureDef]): MetaGraphDef = copy(signatureDef = __v)
    def clearAssetFileDef = copy(assetFileDef = _root_.scala.Seq.empty)
    def addAssetFileDef(__vs: AssetFileDef *): MetaGraphDef = addAllAssetFileDef(__vs)
    def addAllAssetFileDef(__vs: Iterable[AssetFileDef]): MetaGraphDef = copy(assetFileDef = assetFileDef ++ __vs)
    def withAssetFileDef(__v: _root_.scala.Seq[AssetFileDef]): MetaGraphDef = copy(assetFileDef = __v)
    def getObjectGraphDef: tensorboard.saved_object_graph.SavedObjectGraph = objectGraphDef.getOrElse(tensorboard.saved_object_graph.SavedObjectGraph.defaultInstance)
    def clearObjectGraphDef: MetaGraphDef = copy(objectGraphDef = _root_.scala.None)
    def withObjectGraphDef(__v: tensorboard.saved_object_graph.SavedObjectGraph): MetaGraphDef = copy(objectGraphDef = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => metaInfoDef.orNull
        case 2 => graphDef.orNull
        case 3 => saverDef.orNull
        case 4 => collectionDef.iterator.map(meta_graph.MetaGraphDef._typemapper_collectionDef.toBase(_)).toSeq
        case 5 => signatureDef.iterator.map(meta_graph.MetaGraphDef._typemapper_signatureDef.toBase(_)).toSeq
        case 6 => assetFileDef
        case 7 => objectGraphDef.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => metaInfoDef.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => graphDef.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => saverDef.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PRepeated(collectionDef.iterator.map(meta_graph.MetaGraphDef._typemapper_collectionDef.toBase(_).toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(signatureDef.iterator.map(meta_graph.MetaGraphDef._typemapper_signatureDef.toBase(_).toPMessage).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(assetFileDef.iterator.map(_.toPMessage).toVector)
        case 7 => objectGraphDef.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: MetaGraphDef.type = meta_graph.MetaGraphDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.MetaGraphDef])
}

object MetaGraphDef extends scalapb.GeneratedMessageCompanion[MetaGraphDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[MetaGraphDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): MetaGraphDef = {
    var __metaInfoDef: _root_.scala.Option[MetaGraphDef.MetaInfoDef] = _root_.scala.None
    var __graphDef: _root_.scala.Option[GraphDef] = _root_.scala.None
    var __saverDef: _root_.scala.Option[SaverDef] = _root_.scala.None
    val __collectionDef: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, CollectionDef), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, CollectionDef]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, CollectionDef]
    val __signatureDef: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, SignatureDef), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, SignatureDef]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, SignatureDef]
    val __assetFileDef: _root_.scala.collection.immutable.VectorBuilder[AssetFileDef] = new _root_.scala.collection.immutable.VectorBuilder[AssetFileDef]
    var __objectGraphDef: _root_.scala.Option[tensorboard.saved_object_graph.SavedObjectGraph] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __metaInfoDef = _root_.scala.Option(__metaInfoDef.fold(_root_.scalapb.LiteParser.readMessage[MetaGraphDef.MetaInfoDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __graphDef = _root_.scala.Option(__graphDef.fold(_root_.scalapb.LiteParser.readMessage[GraphDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __saverDef = _root_.scala.Option(__saverDef.fold(_root_.scalapb.LiteParser.readMessage[SaverDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __collectionDef += meta_graph.MetaGraphDef._typemapper_collectionDef.toCustom(_root_.scalapb.LiteParser.readMessage[MetaGraphDef.CollectionDefEntry](_input__))
        case 42 =>
          __signatureDef += meta_graph.MetaGraphDef._typemapper_signatureDef.toCustom(_root_.scalapb.LiteParser.readMessage[MetaGraphDef.SignatureDefEntry](_input__))
        case 50 =>
          __assetFileDef += _root_.scalapb.LiteParser.readMessage[AssetFileDef](_input__)
        case 58 =>
          __objectGraphDef = _root_.scala.Option(__objectGraphDef.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.saved_object_graph.SavedObjectGraph](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    MetaGraphDef(
        metaInfoDef = __metaInfoDef,
        graphDef = __graphDef,
        saverDef = __saverDef,
        collectionDef = __collectionDef.result(),
        signatureDef = __signatureDef.result(),
        assetFileDef = __assetFileDef.result(),
        objectGraphDef = __objectGraphDef,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[MetaGraphDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      MetaGraphDef(
        metaInfoDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[MetaGraphDef.MetaInfoDef]]),
        graphDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[GraphDef]]),
        saverDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[SaverDef]]),
        collectionDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[MetaGraphDef.CollectionDefEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(meta_graph.MetaGraphDef._typemapper_collectionDef.toCustom(_)).toMap,
        signatureDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[MetaGraphDef.SignatureDefEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(meta_graph.MetaGraphDef._typemapper_signatureDef.toCustom(_)).toMap,
        assetFileDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[AssetFileDef]]).getOrElse(_root_.scala.Seq.empty),
        objectGraphDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[tensorboard.saved_object_graph.SavedObjectGraph]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.meta_graph.MetaGraphProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.meta_graph.MetaGraphProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = meta_graph.MetaGraphDef.MetaInfoDef
      case 2 => __out = graph.GraphDef
      case 3 => __out = saver.SaverDef
      case 4 => __out = meta_graph.MetaGraphDef.CollectionDefEntry
      case 5 => __out = meta_graph.MetaGraphDef.SignatureDefEntry
      case 6 => __out = meta_graph.AssetFileDef
      case 7 => __out = tensorboard.saved_object_graph.SavedObjectGraph
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      meta_graph.MetaGraphDef.MetaInfoDef,
      meta_graph.MetaGraphDef.CollectionDefEntry,
      meta_graph.MetaGraphDef.SignatureDefEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = MetaGraphDef(
    metaInfoDef = _root_.scala.None,
    graphDef = _root_.scala.None,
    saverDef = _root_.scala.None,
    collectionDef = _root_.scala.collection.immutable.Map.empty,
    signatureDef = _root_.scala.collection.immutable.Map.empty,
    assetFileDef = _root_.scala.Seq.empty,
    objectGraphDef = _root_.scala.None
  )
  /** Meta information regarding the graph to be exported.  To be used by users
    * of this protocol buffer to encode information regarding their meta graph.
    *
    * @param metaGraphVersion
    *   User specified Version string. Can be the name of the model and revision,
    *   steps this model has been trained to, etc.
    * @param strippedOpList
    *   A copy of the OpDefs used by the producer of this graph_def.
    *   Descriptions and Ops not used in graph_def are stripped out.
    * @param anyInfo
    *   A serialized protobuf. Can be the time this meta graph is created, or
    *   modified, or name of the model.
    * @param tags
    *   User supplied tag(s) on the meta_graph and included graph_def.
    *  
    *   MetaGraphDefs should be tagged with their capabilities or use-cases.
    *   Examples: "train", "serve", "gpu", "tpu", etc.
    *   These tags enable loaders to access the MetaGraph(s) appropriate for a
    *   specific use-case or runtime environment.
    * @param tensorflowVersion
    *   The __version__ string of the tensorflow build used to write this graph.
    *   This will be populated by the framework, which will overwrite any user
    *   supplied value.
    * @param tensorflowGitVersion
    *   The __git_version__ string of the tensorflow build used to write this
    *   graph. This will be populated by the framework, which will overwrite any
    *   user supplied value.
    * @param strippedDefaultAttrs
    *   A flag to denote whether default-valued attrs have been stripped from
    *   the nodes in this graph_def.
    * @param functionAliases
    *   FunctionDef name to aliases mapping.
    */
  @SerialVersionUID(0L)
  final case class MetaInfoDef(
                                metaGraphVersion: _root_.scala.Predef.String = "",
                                strippedOpList: _root_.scala.Option[OpList] = _root_.scala.None,
                                anyInfo: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
                                tags: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
                                tensorflowVersion: _root_.scala.Predef.String = "",
                                tensorflowGitVersion: _root_.scala.Predef.String = "",
                                strippedDefaultAttrs: _root_.scala.Boolean = false,
                                functionAliases: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
                                unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MetaInfoDef] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = metaGraphVersion
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (strippedOpList.isDefined) {
          val __value = strippedOpList.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        if (anyInfo.isDefined) {
          val __value = anyInfo.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        tags.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
        
        {
          val __value = tensorflowVersion
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
          }
        };
        
        {
          val __value = tensorflowGitVersion
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
          }
        };
        
        {
          val __value = strippedDefaultAttrs
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
          }
        };
        functionAliases.foreach { __item =>
          val __value = meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toBase(__item)
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = metaGraphVersion
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        strippedOpList.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        anyInfo.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        tags.foreach { __v =>
          val __m = __v
          _output__.writeString(4, __m)
        };
        {
          val __v = tensorflowVersion
          if (!__v.isEmpty) {
            _output__.writeString(5, __v)
          }
        };
        {
          val __v = tensorflowGitVersion
          if (!__v.isEmpty) {
            _output__.writeString(6, __v)
          }
        };
        {
          val __v = strippedDefaultAttrs
          if (__v != false) {
            _output__.writeBool(7, __v)
          }
        };
        functionAliases.foreach { __v =>
          val __m = meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toBase(__v)
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withMetaGraphVersion(__v: _root_.scala.Predef.String): MetaInfoDef = copy(metaGraphVersion = __v)
      def getStrippedOpList: OpList = strippedOpList.getOrElse(OpList.defaultInstance)
      def clearStrippedOpList: MetaInfoDef = copy(strippedOpList = _root_.scala.None)
      def withStrippedOpList(__v: OpList): MetaInfoDef = copy(strippedOpList = Option(__v))
      def getAnyInfo: com.google.protobuf.any.Any = anyInfo.getOrElse(com.google.protobuf.any.Any.defaultInstance)
      def clearAnyInfo: MetaInfoDef = copy(anyInfo = _root_.scala.None)
      def withAnyInfo(__v: com.google.protobuf.any.Any): MetaInfoDef = copy(anyInfo = Option(__v))
      def clearTags = copy(tags = _root_.scala.Seq.empty)
      def addTags(__vs: _root_.scala.Predef.String *): MetaInfoDef = addAllTags(__vs)
      def addAllTags(__vs: Iterable[_root_.scala.Predef.String]): MetaInfoDef = copy(tags = tags ++ __vs)
      def withTags(__v: _root_.scala.Seq[_root_.scala.Predef.String]): MetaInfoDef = copy(tags = __v)
      def withTensorflowVersion(__v: _root_.scala.Predef.String): MetaInfoDef = copy(tensorflowVersion = __v)
      def withTensorflowGitVersion(__v: _root_.scala.Predef.String): MetaInfoDef = copy(tensorflowGitVersion = __v)
      def withStrippedDefaultAttrs(__v: _root_.scala.Boolean): MetaInfoDef = copy(strippedDefaultAttrs = __v)
      def clearFunctionAliases = copy(functionAliases = _root_.scala.collection.immutable.Map.empty)
      def addFunctionAliases(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): MetaInfoDef = addAllFunctionAliases(__vs)
      def addAllFunctionAliases(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): MetaInfoDef = copy(functionAliases = functionAliases ++ __vs)
      def withFunctionAliases(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): MetaInfoDef = copy(functionAliases = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = metaGraphVersion
            if (__t != "") __t else null
          }
          case 2 => strippedOpList.orNull
          case 3 => anyInfo.orNull
          case 4 => tags
          case 5 => {
            val __t = tensorflowVersion
            if (__t != "") __t else null
          }
          case 6 => {
            val __t = tensorflowGitVersion
            if (__t != "") __t else null
          }
          case 7 => {
            val __t = strippedDefaultAttrs
            if (__t != false) __t else null
          }
          case 8 => functionAliases.iterator.map(meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toBase(_)).toSeq
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(metaGraphVersion)
          case 2 => strippedOpList.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 3 => anyInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PRepeated(tags.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
          case 5 => _root_.scalapb.descriptors.PString(tensorflowVersion)
          case 6 => _root_.scalapb.descriptors.PString(tensorflowGitVersion)
          case 7 => _root_.scalapb.descriptors.PBoolean(strippedDefaultAttrs)
          case 8 => _root_.scalapb.descriptors.PRepeated(functionAliases.iterator.map(meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toBase(_).toPMessage).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: MetaGraphDef.MetaInfoDef.type = meta_graph.MetaGraphDef.MetaInfoDef
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.MetaGraphDef.MetaInfoDef])
  }
  
  object MetaInfoDef extends scalapb.GeneratedMessageCompanion[MetaGraphDef.MetaInfoDef] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[MetaGraphDef.MetaInfoDef] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): MetaGraphDef.MetaInfoDef = {
      var __metaGraphVersion: _root_.scala.Predef.String = ""
      var __strippedOpList: _root_.scala.Option[OpList] = _root_.scala.None
      var __anyInfo: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
      val __tags: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
      var __tensorflowVersion: _root_.scala.Predef.String = ""
      var __tensorflowGitVersion: _root_.scala.Predef.String = ""
      var __strippedDefaultAttrs: _root_.scala.Boolean = false
      val __functionAliases: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __metaGraphVersion = _input__.readStringRequireUtf8()
          case 18 =>
            __strippedOpList = _root_.scala.Option(__strippedOpList.fold(_root_.scalapb.LiteParser.readMessage[OpList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 26 =>
            __anyInfo = _root_.scala.Option(__anyInfo.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __tags += _input__.readStringRequireUtf8()
          case 42 =>
            __tensorflowVersion = _input__.readStringRequireUtf8()
          case 50 =>
            __tensorflowGitVersion = _input__.readStringRequireUtf8()
          case 56 =>
            __strippedDefaultAttrs = _input__.readBool()
          case 66 =>
            __functionAliases += meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toCustom(_root_.scalapb.LiteParser.readMessage[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry](_input__))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      meta_graph.MetaGraphDef.MetaInfoDef(
          metaGraphVersion = __metaGraphVersion,
          strippedOpList = __strippedOpList,
          anyInfo = __anyInfo,
          tags = __tags.result(),
          tensorflowVersion = __tensorflowVersion,
          tensorflowGitVersion = __tensorflowGitVersion,
          strippedDefaultAttrs = __strippedDefaultAttrs,
          functionAliases = __functionAliases.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[MetaGraphDef.MetaInfoDef] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        meta_graph.MetaGraphDef.MetaInfoDef(
          metaGraphVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          strippedOpList = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[OpList]]),
          anyInfo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
          tags = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
          tensorflowVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          tensorflowGitVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          strippedDefaultAttrs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
          functionAliases = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(meta_graph.MetaGraphDef.MetaInfoDef._typemapper_functionAliases.toCustom(_)).toMap
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = meta_graph.MetaGraphDef.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = meta_graph.MetaGraphDef.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = op_def.OpList
        case 3 => __out = com.google.protobuf.any.Any
        case 8 => __out = meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
      Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
        meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry
      )
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = meta_graph.MetaGraphDef.MetaInfoDef(
      metaGraphVersion = "",
      strippedOpList = _root_.scala.None,
      anyInfo = _root_.scala.None,
      tags = _root_.scala.Seq.empty,
      tensorflowVersion = "",
      tensorflowGitVersion = "",
      strippedDefaultAttrs = false,
      functionAliases = _root_.scala.collection.immutable.Map.empty
    )
    @SerialVersionUID(0L)
    final case class FunctionAliasesEntry(
        key: _root_.scala.Predef.String = "",
        value: _root_.scala.Predef.String = "",
        unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
        ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FunctionAliasesEntry] {
        @transient
        private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
        private[this] def __computeSerializedSize(): _root_.scala.Int = {
          var __size = 0
          
          {
            val __value = key
            if (!__value.isEmpty) {
              __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
            }
          };
          
          {
            val __value = value
            if (!__value.isEmpty) {
              __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
            }
          };
          __size += unknownFields.serializedSize
          __size
        }
        override def serializedSize: _root_.scala.Int = {
          var __size = __serializedSizeMemoized
          if (__size == 0) {
            __size = __computeSerializedSize() + 1
            __serializedSizeMemoized = __size
          }
          __size - 1
          
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
          {
            val __v = key
            if (!__v.isEmpty) {
              _output__.writeString(1, __v)
            }
          };
          {
            val __v = value
            if (!__v.isEmpty) {
              _output__.writeString(2, __v)
            }
          };
          unknownFields.writeTo(_output__)
        }
        def withKey(__v: _root_.scala.Predef.String): FunctionAliasesEntry = copy(key = __v)
        def withValue(__v: _root_.scala.Predef.String): FunctionAliasesEntry = copy(value = __v)
        def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
        def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
        def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => {
              val __t = key
              if (__t != "") __t else null
            }
            case 2 => {
              val __t = value
              if (__t != "") __t else null
            }
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PString(key)
            case 2 => _root_.scalapb.descriptors.PString(value)
          }
        }
        def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
        def companion: MetaGraphDef.MetaInfoDef.FunctionAliasesEntry.type = meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry
        // @@protoc_insertion_point(GeneratedMessage[tensorboard.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry])
    }
    
    object FunctionAliasesEntry extends scalapb.GeneratedMessageCompanion[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry] {
      implicit def messageCompanion: scalapb.GeneratedMessageCompanion[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry] = this
      def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): MetaGraphDef.MetaInfoDef.FunctionAliasesEntry = {
        var __key: _root_.scala.Predef.String = ""
        var __value: _root_.scala.Predef.String = ""
        var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __key = _input__.readStringRequireUtf8()
            case 18 =>
              __value = _input__.readStringRequireUtf8()
            case tag =>
              if (_unknownFields__ == null) {
                _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
              }
              _unknownFields__.parseField(tag, _input__)
          }
        }
        meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry(
            key = __key,
            value = __value,
            unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
          meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry(
            key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
            value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = meta_graph.MetaGraphDef.MetaInfoDef.javaDescriptor.getNestedTypes().get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = meta_graph.MetaGraphDef.MetaInfoDef.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
      lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
      def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
      lazy val defaultInstance = meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry(
        key = "",
        value = ""
      )
      implicit class FunctionAliasesEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef.MetaInfoDef.FunctionAliasesEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, MetaGraphDef.MetaInfoDef.FunctionAliasesEntry](_l) {
        def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
        def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val KEY_FIELD_NUMBER = 1
      final val VALUE_FIELD_NUMBER = 2
      @transient
      implicit val keyValueMapper: _root_.scalapb.TypeMapper[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
        _root_.scalapb.TypeMapper[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry(__p._1, __p._2))
      def of(
        key: _root_.scala.Predef.String,
        value: _root_.scala.Predef.String
      ): MetaGraphDef.MetaInfoDef.FunctionAliasesEntry = meta_graph.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry(
        key,
        value
      )
      // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MetaGraphDef.MetaInfoDef.FunctionAliasesEntry])
    }
    
    implicit class MetaInfoDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef.MetaInfoDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, MetaGraphDef.MetaInfoDef](_l) {
      def metaGraphVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.metaGraphVersion)((c_, f_) => c_.copy(metaGraphVersion = f_))
      def strippedOpList: _root_.scalapb.lenses.Lens[UpperPB, OpList] = field(_.getStrippedOpList)((c_, f_) => c_.copy(strippedOpList = _root_.scala.Option(f_)))
      def optionalStrippedOpList: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[OpList]] = field(_.strippedOpList)((c_, f_) => c_.copy(strippedOpList = f_))
      def anyInfo: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getAnyInfo)((c_, f_) => c_.copy(anyInfo = _root_.scala.Option(f_)))
      def optionalAnyInfo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.anyInfo)((c_, f_) => c_.copy(anyInfo = f_))
      def tags: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.tags)((c_, f_) => c_.copy(tags = f_))
      def tensorflowVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tensorflowVersion)((c_, f_) => c_.copy(tensorflowVersion = f_))
      def tensorflowGitVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tensorflowGitVersion)((c_, f_) => c_.copy(tensorflowGitVersion = f_))
      def strippedDefaultAttrs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.strippedDefaultAttrs)((c_, f_) => c_.copy(strippedDefaultAttrs = f_))
      def functionAliases: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.functionAliases)((c_, f_) => c_.copy(functionAliases = f_))
    }
    final val META_GRAPH_VERSION_FIELD_NUMBER = 1
    final val STRIPPED_OP_LIST_FIELD_NUMBER = 2
    final val ANY_INFO_FIELD_NUMBER = 3
    final val TAGS_FIELD_NUMBER = 4
    final val TENSORFLOW_VERSION_FIELD_NUMBER = 5
    final val TENSORFLOW_GIT_VERSION_FIELD_NUMBER = 6
    final val STRIPPED_DEFAULT_ATTRS_FIELD_NUMBER = 7
    final val FUNCTION_ALIASES_FIELD_NUMBER = 8
    @transient
    private[meta_graph] val _typemapper_functionAliases: _root_.scalapb.TypeMapper[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[MetaGraphDef.MetaInfoDef.FunctionAliasesEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
    def of(
            metaGraphVersion: _root_.scala.Predef.String,
            strippedOpList: _root_.scala.Option[OpList],
            anyInfo: _root_.scala.Option[com.google.protobuf.any.Any],
            tags: _root_.scala.Seq[_root_.scala.Predef.String],
            tensorflowVersion: _root_.scala.Predef.String,
            tensorflowGitVersion: _root_.scala.Predef.String,
            strippedDefaultAttrs: _root_.scala.Boolean,
            functionAliases: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
    ): MetaGraphDef.MetaInfoDef = meta_graph.MetaGraphDef.MetaInfoDef(
      metaGraphVersion,
      strippedOpList,
      anyInfo,
      tags,
      tensorflowVersion,
      tensorflowGitVersion,
      strippedDefaultAttrs,
      functionAliases
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MetaGraphDef.MetaInfoDef])
  }
  
  @SerialVersionUID(0L)
  final case class CollectionDefEntry(
                                       key: _root_.scala.Predef.String = "",
                                       value: _root_.scala.Option[CollectionDef] = _root_.scala.None,
                                       unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CollectionDefEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): CollectionDefEntry = copy(key = __v)
      def getValue: CollectionDef = value.getOrElse(meta_graph.CollectionDef.defaultInstance)
      def clearValue: CollectionDefEntry = copy(value = _root_.scala.None)
      def withValue(__v: CollectionDef): CollectionDefEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: MetaGraphDef.CollectionDefEntry.type = meta_graph.MetaGraphDef.CollectionDefEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.MetaGraphDef.CollectionDefEntry])
  }
  
  object CollectionDefEntry extends scalapb.GeneratedMessageCompanion[MetaGraphDef.CollectionDefEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[MetaGraphDef.CollectionDefEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): MetaGraphDef.CollectionDefEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[CollectionDef] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[CollectionDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      meta_graph.MetaGraphDef.CollectionDefEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[MetaGraphDef.CollectionDefEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        meta_graph.MetaGraphDef.CollectionDefEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[CollectionDef]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = meta_graph.MetaGraphDef.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = meta_graph.MetaGraphDef.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = meta_graph.CollectionDef
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = meta_graph.MetaGraphDef.CollectionDefEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class CollectionDefEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef.CollectionDefEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, MetaGraphDef.CollectionDefEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, CollectionDef] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[CollectionDef]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[MetaGraphDef.CollectionDefEntry, (_root_.scala.Predef.String, CollectionDef)] =
      _root_.scalapb.TypeMapper[MetaGraphDef.CollectionDefEntry, (_root_.scala.Predef.String, CollectionDef)](__m => (__m.key, __m.getValue))(__p => meta_graph.MetaGraphDef.CollectionDefEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[CollectionDef]
    ): MetaGraphDef.CollectionDefEntry = meta_graph.MetaGraphDef.CollectionDefEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MetaGraphDef.CollectionDefEntry])
  }
  
  @SerialVersionUID(0L)
  final case class SignatureDefEntry(
                                      key: _root_.scala.Predef.String = "",
                                      value: _root_.scala.Option[SignatureDef] = _root_.scala.None,
                                      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SignatureDefEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): SignatureDefEntry = copy(key = __v)
      def getValue: SignatureDef = value.getOrElse(meta_graph.SignatureDef.defaultInstance)
      def clearValue: SignatureDefEntry = copy(value = _root_.scala.None)
      def withValue(__v: SignatureDef): SignatureDefEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: MetaGraphDef.SignatureDefEntry.type = meta_graph.MetaGraphDef.SignatureDefEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.MetaGraphDef.SignatureDefEntry])
  }
  
  object SignatureDefEntry extends scalapb.GeneratedMessageCompanion[MetaGraphDef.SignatureDefEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[MetaGraphDef.SignatureDefEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): MetaGraphDef.SignatureDefEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[SignatureDef] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[SignatureDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      meta_graph.MetaGraphDef.SignatureDefEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[MetaGraphDef.SignatureDefEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        meta_graph.MetaGraphDef.SignatureDefEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[SignatureDef]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = meta_graph.MetaGraphDef.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = meta_graph.MetaGraphDef.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = meta_graph.SignatureDef
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = meta_graph.MetaGraphDef.SignatureDefEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class SignatureDefEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef.SignatureDefEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, MetaGraphDef.SignatureDefEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, SignatureDef] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[SignatureDef]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[MetaGraphDef.SignatureDefEntry, (_root_.scala.Predef.String, SignatureDef)] =
      _root_.scalapb.TypeMapper[MetaGraphDef.SignatureDefEntry, (_root_.scala.Predef.String, SignatureDef)](__m => (__m.key, __m.getValue))(__p => meta_graph.MetaGraphDef.SignatureDefEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[SignatureDef]
    ): MetaGraphDef.SignatureDefEntry = meta_graph.MetaGraphDef.SignatureDefEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MetaGraphDef.SignatureDefEntry])
  }
  
  implicit class MetaGraphDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, MetaGraphDef](_l) {
    def metaInfoDef: _root_.scalapb.lenses.Lens[UpperPB, MetaGraphDef.MetaInfoDef] = field(_.getMetaInfoDef)((c_, f_) => c_.copy(metaInfoDef = _root_.scala.Option(f_)))
    def optionalMetaInfoDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[MetaGraphDef.MetaInfoDef]] = field(_.metaInfoDef)((c_, f_) => c_.copy(metaInfoDef = f_))
    def graphDef: _root_.scalapb.lenses.Lens[UpperPB, GraphDef] = field(_.getGraphDef)((c_, f_) => c_.copy(graphDef = _root_.scala.Option(f_)))
    def optionalGraphDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[GraphDef]] = field(_.graphDef)((c_, f_) => c_.copy(graphDef = f_))
    def saverDef: _root_.scalapb.lenses.Lens[UpperPB, SaverDef] = field(_.getSaverDef)((c_, f_) => c_.copy(saverDef = _root_.scala.Option(f_)))
    def optionalSaverDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[SaverDef]] = field(_.saverDef)((c_, f_) => c_.copy(saverDef = f_))
    def collectionDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, CollectionDef]] = field(_.collectionDef)((c_, f_) => c_.copy(collectionDef = f_))
    def signatureDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, SignatureDef]] = field(_.signatureDef)((c_, f_) => c_.copy(signatureDef = f_))
    def assetFileDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[AssetFileDef]] = field(_.assetFileDef)((c_, f_) => c_.copy(assetFileDef = f_))
    def objectGraphDef: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.saved_object_graph.SavedObjectGraph] = field(_.getObjectGraphDef)((c_, f_) => c_.copy(objectGraphDef = _root_.scala.Option(f_)))
    def optionalObjectGraphDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tensorboard.saved_object_graph.SavedObjectGraph]] = field(_.objectGraphDef)((c_, f_) => c_.copy(objectGraphDef = f_))
  }
  final val META_INFO_DEF_FIELD_NUMBER = 1
  final val GRAPH_DEF_FIELD_NUMBER = 2
  final val SAVER_DEF_FIELD_NUMBER = 3
  final val COLLECTION_DEF_FIELD_NUMBER = 4
  final val SIGNATURE_DEF_FIELD_NUMBER = 5
  final val ASSET_FILE_DEF_FIELD_NUMBER = 6
  final val OBJECT_GRAPH_DEF_FIELD_NUMBER = 7
  @transient
  private[meta_graph] val _typemapper_collectionDef: _root_.scalapb.TypeMapper[MetaGraphDef.CollectionDefEntry, (_root_.scala.Predef.String, CollectionDef)] = implicitly[_root_.scalapb.TypeMapper[MetaGraphDef.CollectionDefEntry, (_root_.scala.Predef.String, CollectionDef)]]
  @transient
  private[meta_graph] val _typemapper_signatureDef: _root_.scalapb.TypeMapper[MetaGraphDef.SignatureDefEntry, (_root_.scala.Predef.String, SignatureDef)] = implicitly[_root_.scalapb.TypeMapper[MetaGraphDef.SignatureDefEntry, (_root_.scala.Predef.String, SignatureDef)]]
  def of(
          metaInfoDef: _root_.scala.Option[MetaGraphDef.MetaInfoDef],
          graphDef: _root_.scala.Option[GraphDef],
          saverDef: _root_.scala.Option[SaverDef],
          collectionDef: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, CollectionDef],
          signatureDef: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, SignatureDef],
          assetFileDef: _root_.scala.Seq[AssetFileDef],
          objectGraphDef: _root_.scala.Option[tensorboard.saved_object_graph.SavedObjectGraph]
  ): MetaGraphDef = MetaGraphDef(
    metaInfoDef,
    graphDef,
    saverDef,
    collectionDef,
    signatureDef,
    assetFileDef,
    objectGraphDef
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MetaGraphDef])
}
