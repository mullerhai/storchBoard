// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.attr_value

import tensorflow.framework.tensor.TensorProto
import tensorflow.framework.tensor_shape.TensorShapeProto
import tensorflow.framework.types.DataType
import tensorflow.framework.{attr_value, tensor, tensor_shape, types}

/** Protocol buffer representing the value for an attr used to configure an Op.
  * Comment indicates the corresponding attr type.  Only the field matching the
  * attr type may be filled.
  */
@SerialVersionUID(0L)
final case class AttrValue(
                            value: AttrValue.Value = attr_value.AttrValue.Value.Empty,
                            unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AttrValue] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (value.s.isDefined) {
        val __value = value.s.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
      };
      if (value.i.isDefined) {
        val __value = value.i.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
      };
      if (value.f.isDefined) {
        val __value = value.f.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeFloatSize(4, __value)
      };
      if (value.b.isDefined) {
        val __value = value.b.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
      };
      if (value.`type`.isDefined) {
        val __value = value.`type`.get.value
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
      };
      if (value.shape.isDefined) {
        val __value = value.shape.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (value.tensor.isDefined) {
        val __value = value.tensor.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (value.list.isDefined) {
        val __value = value.list.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (value.func.isDefined) {
        val __value = value.func.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (value.placeholder.isDefined) {
        val __value = value.placeholder.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      value.list.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      value.s.foreach { __v =>
        val __m = __v
        _output__.writeBytes(2, __m)
      };
      value.i.foreach { __v =>
        val __m = __v
        _output__.writeInt64(3, __m)
      };
      value.f.foreach { __v =>
        val __m = __v
        _output__.writeFloat(4, __m)
      };
      value.b.foreach { __v =>
        val __m = __v
        _output__.writeBool(5, __m)
      };
      value.`type`.foreach { __v =>
        val __m = __v.value
        _output__.writeEnum(6, __m)
      };
      value.shape.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      value.tensor.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      value.placeholder.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      value.func.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getS: _root_.com.google.protobuf.ByteString = value.s.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withS(__v: _root_.com.google.protobuf.ByteString): AttrValue = copy(value = attr_value.AttrValue.Value.S(__v))
    def getI: _root_.scala.Long = value.i.getOrElse(0L)
    def withI(__v: _root_.scala.Long): AttrValue = copy(value = attr_value.AttrValue.Value.I(__v))
    def getF: _root_.scala.Float = value.f.getOrElse(0.0f)
    def withF(__v: _root_.scala.Float): AttrValue = copy(value = attr_value.AttrValue.Value.F(__v))
    def getB: _root_.scala.Boolean = value.b.getOrElse(false)
    def withB(__v: _root_.scala.Boolean): AttrValue = copy(value = attr_value.AttrValue.Value.B(__v))
    def getType: DataType = value.`type`.getOrElse(DataType.DT_INVALID)
    def withType(__v: DataType): AttrValue = copy(value = attr_value.AttrValue.Value.Type(__v))
    def getShape: TensorShapeProto = value.shape.getOrElse(tensor_shape.TensorShapeProto.defaultInstance)
    def withShape(__v: TensorShapeProto): AttrValue = copy(value = attr_value.AttrValue.Value.Shape(__v))
    def getTensor: TensorProto = value.tensor.getOrElse(tensor.TensorProto.defaultInstance)
    def withTensor(__v: TensorProto): AttrValue = copy(value = attr_value.AttrValue.Value.Tensor(__v))
    def getList: AttrValue.ListValue = value.list.getOrElse(attr_value.AttrValue.ListValue.defaultInstance)
    def withList(__v: AttrValue.ListValue): AttrValue = copy(value = attr_value.AttrValue.Value.List(__v))
    def getFunc: NameAttrList = value.func.getOrElse(attr_value.NameAttrList.defaultInstance)
    def withFunc(__v: NameAttrList): AttrValue = copy(value = attr_value.AttrValue.Value.Func(__v))
    def getPlaceholder: _root_.scala.Predef.String = value.placeholder.getOrElse("")
    def withPlaceholder(__v: _root_.scala.Predef.String): AttrValue = copy(value = attr_value.AttrValue.Value.Placeholder(__v))
    def clearValue: AttrValue = copy(value = attr_value.AttrValue.Value.Empty)
    def withValue(__v: AttrValue.Value): AttrValue = copy(value = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 2 => value.s.orNull
        case 3 => value.i.orNull
        case 4 => value.f.orNull
        case 5 => value.b.orNull
        case 6 => value.`type`.map(_.javaValueDescriptor).orNull
        case 7 => value.shape.orNull
        case 8 => value.tensor.orNull
        case 1 => value.list.orNull
        case 10 => value.func.orNull
        case 9 => value.placeholder.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 2 => value.s.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => value.i.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => value.f.map(_root_.scalapb.descriptors.PFloat(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => value.b.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => value.`type`.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => value.shape.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => value.tensor.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 1 => value.list.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => value.func.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => value.placeholder.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: AttrValue.type = attr_value.AttrValue
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.AttrValue])
}

object AttrValue extends scalapb.GeneratedMessageCompanion[AttrValue] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[AttrValue] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): AttrValue = {
    var __value: AttrValue.Value = attr_value.AttrValue.Value.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 18 =>
          __value = attr_value.AttrValue.Value.S(_input__.readBytes())
        case 24 =>
          __value = attr_value.AttrValue.Value.I(_input__.readInt64())
        case 37 =>
          __value = attr_value.AttrValue.Value.F(_input__.readFloat())
        case 40 =>
          __value = attr_value.AttrValue.Value.B(_input__.readBool())
        case 48 =>
          __value = attr_value.AttrValue.Value.Type(types.DataType.fromValue(_input__.readEnum()))
        case 58 =>
          __value = attr_value.AttrValue.Value.Shape(__value.shape.fold(_root_.scalapb.LiteParser.readMessage[TensorShapeProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __value = attr_value.AttrValue.Value.Tensor(__value.tensor.fold(_root_.scalapb.LiteParser.readMessage[TensorProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 10 =>
          __value = attr_value.AttrValue.Value.List(__value.list.fold(_root_.scalapb.LiteParser.readMessage[AttrValue.ListValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __value = attr_value.AttrValue.Value.Func(__value.func.fold(_root_.scalapb.LiteParser.readMessage[NameAttrList](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __value = attr_value.AttrValue.Value.Placeholder(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    AttrValue(
        value = __value,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[AttrValue] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      AttrValue(
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(attr_value.AttrValue.Value.S(_))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(attr_value.AttrValue.Value.I(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Float]]).map(attr_value.AttrValue.Value.F(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(attr_value.AttrValue.Value.B(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => attr_value.AttrValue.Value.Type(types.DataType.fromValue(__e.number))))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[TensorShapeProto]]).map(attr_value.AttrValue.Value.Shape(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[TensorProto]]).map(attr_value.AttrValue.Value.Tensor(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[AttrValue.ListValue]]).map(attr_value.AttrValue.Value.List(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[NameAttrList]]).map(attr_value.AttrValue.Value.Func(_)))
            .orElse[AttrValue.Value](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(attr_value.AttrValue.Value.Placeholder(_)))
            .getOrElse(attr_value.AttrValue.Value.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.attr_value.AttrValueProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.attr_value.AttrValueProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = tensor_shape.TensorShapeProto
      case 8 => __out = tensor.TensorProto
      case 1 => __out = attr_value.AttrValue.ListValue
      case 10 => __out = attr_value.NameAttrList
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      attr_value.AttrValue.ListValue
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => types.DataType
    }
  }
  lazy val defaultInstance = AttrValue(
    value = attr_value.AttrValue.Value.Empty
  )
  sealed abstract class Value extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isS: _root_.scala.Boolean = false
    def isI: _root_.scala.Boolean = false
    def isF: _root_.scala.Boolean = false
    def isB: _root_.scala.Boolean = false
    def isType: _root_.scala.Boolean = false
    def isShape: _root_.scala.Boolean = false
    def isTensor: _root_.scala.Boolean = false
    def isList: _root_.scala.Boolean = false
    def isFunc: _root_.scala.Boolean = false
    def isPlaceholder: _root_.scala.Boolean = false
    def s: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    def i: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    def f: _root_.scala.Option[_root_.scala.Float] = _root_.scala.None
    def b: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def `type`: _root_.scala.Option[DataType] = _root_.scala.None
    def shape: _root_.scala.Option[TensorShapeProto] = _root_.scala.None
    def tensor: _root_.scala.Option[TensorProto] = _root_.scala.None
    def list: _root_.scala.Option[AttrValue.ListValue] = _root_.scala.None
    def func: _root_.scala.Option[NameAttrList] = _root_.scala.None
    def placeholder: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Value {
    @SerialVersionUID(0L)
    case object Empty extends AttrValue.Value {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class S(value: _root_.com.google.protobuf.ByteString) extends AttrValue.Value {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isS: _root_.scala.Boolean = true
      override def s: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class I(value: _root_.scala.Long) extends AttrValue.Value {
      type ValueType = _root_.scala.Long
      override def isI: _root_.scala.Boolean = true
      override def i: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class F(value: _root_.scala.Float) extends AttrValue.Value {
      type ValueType = _root_.scala.Float
      override def isF: _root_.scala.Boolean = true
      override def f: _root_.scala.Option[_root_.scala.Float] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class B(value: _root_.scala.Boolean) extends AttrValue.Value {
      type ValueType = _root_.scala.Boolean
      override def isB: _root_.scala.Boolean = true
      override def b: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class Type(value: DataType) extends AttrValue.Value {
      type ValueType = DataType
      override def isType: _root_.scala.Boolean = true
      override def `type`: _root_.scala.Option[DataType] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class Shape(value: TensorShapeProto) extends AttrValue.Value {
      type ValueType = TensorShapeProto
      override def isShape: _root_.scala.Boolean = true
      override def shape: _root_.scala.Option[TensorShapeProto] = Some(value)
      override def number: _root_.scala.Int = 7
    }
    @SerialVersionUID(0L)
    final case class Tensor(value: TensorProto) extends AttrValue.Value {
      type ValueType = TensorProto
      override def isTensor: _root_.scala.Boolean = true
      override def tensor: _root_.scala.Option[TensorProto] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class List(value: AttrValue.ListValue) extends AttrValue.Value {
      type ValueType = AttrValue.ListValue
      override def isList: _root_.scala.Boolean = true
      override def list: _root_.scala.Option[AttrValue.ListValue] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Func(value: NameAttrList) extends AttrValue.Value {
      type ValueType = NameAttrList
      override def isFunc: _root_.scala.Boolean = true
      override def func: _root_.scala.Option[NameAttrList] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class Placeholder(value: _root_.scala.Predef.String) extends AttrValue.Value {
      type ValueType = _root_.scala.Predef.String
      override def isPlaceholder: _root_.scala.Boolean = true
      override def placeholder: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 9
    }
  }
  /** DISABLED.IfChange
    *
    * @param s
    *   "list(string)"
    * @param i
    *   "list(int)"
    * @param f
    *   "list(float)"
    * @param b
    *   "list(bool)"
    * @param type
    *   "list(type)"
    * @param shape
    *   "list(shape)"
    * @param tensor
    *   "list(tensor)"
    * @param func
    *   "list(attr)"
    */
  @SerialVersionUID(0L)
  final case class ListValue(
                              s: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
                              i: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
                              f: _root_.scala.Seq[_root_.scala.Float] = _root_.scala.Seq.empty,
                              b: _root_.scala.Seq[_root_.scala.Boolean] = _root_.scala.Seq.empty,
                              `type`: _root_.scala.Seq[DataType] = _root_.scala.Seq.empty,
                              shape: _root_.scala.Seq[TensorShapeProto] = _root_.scala.Seq.empty,
                              tensor: _root_.scala.Seq[TensorProto] = _root_.scala.Seq.empty,
                              func: _root_.scala.Seq[NameAttrList] = _root_.scala.Seq.empty,
                              unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ListValue] {
      private[this] def iSerializedSize = {
        if (__iSerializedSizeField == 0) __iSerializedSizeField = {
          var __s: _root_.scala.Int = 0
          i.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
          __s
        }
        __iSerializedSizeField
      }
      @transient private[this] var __iSerializedSizeField: _root_.scala.Int = 0
      private[this] def fSerializedSize = {
        4 * f.size
      }
      private[this] def bSerializedSize = {
        1 * b.size
      }
      private[this] def typeSerializedSize = {
        if (__typeSerializedSizeField == 0) __typeSerializedSizeField = {
          var __s: _root_.scala.Int = 0
          `type`.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
          __s
        }
        __typeSerializedSizeField
      }
      @transient private[this] var __typeSerializedSizeField: _root_.scala.Int = 0
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        s.foreach { __item =>
          val __value = __item
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
        if (i.nonEmpty) {
          val __localsize = iSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if (f.nonEmpty) {
          val __localsize = fSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if (b.nonEmpty) {
          val __localsize = bSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        if (`type`.nonEmpty) {
          val __localsize = typeSerializedSize
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
        }
        shape.foreach { __item =>
          val __value = __item
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        tensor.foreach { __item =>
          val __value = __item
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        func.foreach { __item =>
          val __value = __item
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        s.foreach { __v =>
          val __m = __v
          _output__.writeBytes(2, __m)
        };
        if (i.nonEmpty) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(iSerializedSize)
          i.foreach(_output__.writeInt64NoTag)
        };
        if (f.nonEmpty) {
          _output__.writeTag(4, 2)
          _output__.writeUInt32NoTag(fSerializedSize)
          f.foreach(_output__.writeFloatNoTag)
        };
        if (b.nonEmpty) {
          _output__.writeTag(5, 2)
          _output__.writeUInt32NoTag(bSerializedSize)
          b.foreach(_output__.writeBoolNoTag)
        };
        if (`type`.nonEmpty) {
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(typeSerializedSize)
          `type`.foreach((_output__.writeEnumNoTag _).compose((_: DataType).value))
        };
        shape.foreach { __v =>
          val __m = __v
          _output__.writeTag(7, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        tensor.foreach { __v =>
          val __m = __v
          _output__.writeTag(8, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        func.foreach { __v =>
          val __m = __v
          _output__.writeTag(9, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def clearS = copy(s = _root_.scala.Seq.empty)
      def addS(__vs: _root_.com.google.protobuf.ByteString *): ListValue = addAllS(__vs)
      def addAllS(__vs: Iterable[_root_.com.google.protobuf.ByteString]): ListValue = copy(s = s ++ __vs)
      def withS(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): ListValue = copy(s = __v)
      def clearI = copy(i = _root_.scala.Seq.empty)
      def addI(__vs: _root_.scala.Long *): ListValue = addAllI(__vs)
      def addAllI(__vs: Iterable[_root_.scala.Long]): ListValue = copy(i = i ++ __vs)
      def withI(__v: _root_.scala.Seq[_root_.scala.Long]): ListValue = copy(i = __v)
      def clearF = copy(f = _root_.scala.Seq.empty)
      def addF(__vs: _root_.scala.Float *): ListValue = addAllF(__vs)
      def addAllF(__vs: Iterable[_root_.scala.Float]): ListValue = copy(f = f ++ __vs)
      def withF(__v: _root_.scala.Seq[_root_.scala.Float]): ListValue = copy(f = __v)
      def clearB = copy(b = _root_.scala.Seq.empty)
      def addB(__vs: _root_.scala.Boolean *): ListValue = addAllB(__vs)
      def addAllB(__vs: Iterable[_root_.scala.Boolean]): ListValue = copy(b = b ++ __vs)
      def withB(__v: _root_.scala.Seq[_root_.scala.Boolean]): ListValue = copy(b = __v)
      def clearType = copy(`type` = _root_.scala.Seq.empty)
      def addType(__vs: DataType *): ListValue = addAllType(__vs)
      def addAllType(__vs: Iterable[DataType]): ListValue = copy(`type` = `type` ++ __vs)
      def withType(__v: _root_.scala.Seq[DataType]): ListValue = copy(`type` = __v)
      def clearShape = copy(shape = _root_.scala.Seq.empty)
      def addShape(__vs: TensorShapeProto *): ListValue = addAllShape(__vs)
      def addAllShape(__vs: Iterable[TensorShapeProto]): ListValue = copy(shape = shape ++ __vs)
      def withShape(__v: _root_.scala.Seq[TensorShapeProto]): ListValue = copy(shape = __v)
      def clearTensor = copy(tensor = _root_.scala.Seq.empty)
      def addTensor(__vs: TensorProto *): ListValue = addAllTensor(__vs)
      def addAllTensor(__vs: Iterable[TensorProto]): ListValue = copy(tensor = tensor ++ __vs)
      def withTensor(__v: _root_.scala.Seq[TensorProto]): ListValue = copy(tensor = __v)
      def clearFunc = copy(func = _root_.scala.Seq.empty)
      def addFunc(__vs: NameAttrList *): ListValue = addAllFunc(__vs)
      def addAllFunc(__vs: Iterable[NameAttrList]): ListValue = copy(func = func ++ __vs)
      def withFunc(__v: _root_.scala.Seq[NameAttrList]): ListValue = copy(func = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 2 => s
          case 3 => i
          case 4 => f
          case 5 => b
          case 6 => `type`.iterator.map(_.javaValueDescriptor).toSeq
          case 7 => shape
          case 8 => tensor
          case 9 => func
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 2 => _root_.scalapb.descriptors.PRepeated(s.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
          case 3 => _root_.scalapb.descriptors.PRepeated(i.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
          case 4 => _root_.scalapb.descriptors.PRepeated(f.iterator.map(_root_.scalapb.descriptors.PFloat(_)).toVector)
          case 5 => _root_.scalapb.descriptors.PRepeated(b.iterator.map(_root_.scalapb.descriptors.PBoolean(_)).toVector)
          case 6 => _root_.scalapb.descriptors.PRepeated(`type`.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
          case 7 => _root_.scalapb.descriptors.PRepeated(shape.iterator.map(_.toPMessage).toVector)
          case 8 => _root_.scalapb.descriptors.PRepeated(tensor.iterator.map(_.toPMessage).toVector)
          case 9 => _root_.scalapb.descriptors.PRepeated(func.iterator.map(_.toPMessage).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: AttrValue.ListValue.type = attr_value.AttrValue.ListValue
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.AttrValue.ListValue])
  }
  
  object ListValue extends scalapb.GeneratedMessageCompanion[AttrValue.ListValue] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[AttrValue.ListValue] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): AttrValue.ListValue = {
      val __s: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
      val __i: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
      val __f: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Float] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Float]
      val __b: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Boolean] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Boolean]
      val __type: _root_.scala.collection.immutable.VectorBuilder[DataType] = new _root_.scala.collection.immutable.VectorBuilder[DataType]
      val __shape: _root_.scala.collection.immutable.VectorBuilder[TensorShapeProto] = new _root_.scala.collection.immutable.VectorBuilder[TensorShapeProto]
      val __tensor: _root_.scala.collection.immutable.VectorBuilder[TensorProto] = new _root_.scala.collection.immutable.VectorBuilder[TensorProto]
      val __func: _root_.scala.collection.immutable.VectorBuilder[NameAttrList] = new _root_.scala.collection.immutable.VectorBuilder[NameAttrList]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 18 =>
            __s += _input__.readBytes()
          case 24 =>
            __i += _input__.readInt64()
          case 26 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __i += _input__.readInt64()
            }
            _input__.popLimit(oldLimit)
          }
          case 37 =>
            __f += _input__.readFloat()
          case 34 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __f += _input__.readFloat()
            }
            _input__.popLimit(oldLimit)
          }
          case 40 =>
            __b += _input__.readBool()
          case 42 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __b += _input__.readBool()
            }
            _input__.popLimit(oldLimit)
          }
          case 48 =>
            __type += types.DataType.fromValue(_input__.readEnum())
          case 50 => {
            val length = _input__.readRawVarint32()
            val oldLimit = _input__.pushLimit(length)
            while (_input__.getBytesUntilLimit > 0) {
              __type += types.DataType.fromValue(_input__.readEnum())
            }
            _input__.popLimit(oldLimit)
          }
          case 58 =>
            __shape += _root_.scalapb.LiteParser.readMessage[TensorShapeProto](_input__)
          case 66 =>
            __tensor += _root_.scalapb.LiteParser.readMessage[TensorProto](_input__)
          case 74 =>
            __func += _root_.scalapb.LiteParser.readMessage[NameAttrList](_input__)
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      attr_value.AttrValue.ListValue(
          s = __s.result(),
          i = __i.result(),
          f = __f.result(),
          b = __b.result(),
          `type` = __type.result(),
          shape = __shape.result(),
          tensor = __tensor.result(),
          func = __func.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[AttrValue.ListValue] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        attr_value.AttrValue.ListValue(
          s = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
          i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
          f = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Float]]).getOrElse(_root_.scala.Seq.empty),
          b = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Boolean]]).getOrElse(_root_.scala.Seq.empty),
          `type` = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => types.DataType.fromValue(__e.number)).toSeq,
          shape = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[TensorShapeProto]]).getOrElse(_root_.scala.Seq.empty),
          tensor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[TensorProto]]).getOrElse(_root_.scala.Seq.empty),
          func = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[NameAttrList]]).getOrElse(_root_.scala.Seq.empty)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = attr_value.AttrValue.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = attr_value.AttrValue.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 7 => __out = tensor_shape.TensorShapeProto
        case 8 => __out = tensor.TensorProto
        case 9 => __out = attr_value.NameAttrList
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => types.DataType
      }
    }
    lazy val defaultInstance = attr_value.AttrValue.ListValue(
      s = _root_.scala.Seq.empty,
      i = _root_.scala.Seq.empty,
      f = _root_.scala.Seq.empty,
      b = _root_.scala.Seq.empty,
      `type` = _root_.scala.Seq.empty,
      shape = _root_.scala.Seq.empty,
      tensor = _root_.scala.Seq.empty,
      func = _root_.scala.Seq.empty
    )
    implicit class ListValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, AttrValue.ListValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, AttrValue.ListValue](_l) {
      def s: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.s)((c_, f_) => c_.copy(s = f_))
      def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.i)((c_, f_) => c_.copy(i = f_))
      def f: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Float]] = field(_.f)((c_, f_) => c_.copy(f = f_))
      def b: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Boolean]] = field(_.b)((c_, f_) => c_.copy(b = f_))
      def `type`: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[DataType]] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
      def shape: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[TensorShapeProto]] = field(_.shape)((c_, f_) => c_.copy(shape = f_))
      def tensor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[TensorProto]] = field(_.tensor)((c_, f_) => c_.copy(tensor = f_))
      def func: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[NameAttrList]] = field(_.func)((c_, f_) => c_.copy(func = f_))
    }
    final val S_FIELD_NUMBER = 2
    final val I_FIELD_NUMBER = 3
    final val F_FIELD_NUMBER = 4
    final val B_FIELD_NUMBER = 5
    final val TYPE_FIELD_NUMBER = 6
    final val SHAPE_FIELD_NUMBER = 7
    final val TENSOR_FIELD_NUMBER = 8
    final val FUNC_FIELD_NUMBER = 9
    def of(
            s: _root_.scala.Seq[_root_.com.google.protobuf.ByteString],
            i: _root_.scala.Seq[_root_.scala.Long],
            f: _root_.scala.Seq[_root_.scala.Float],
            b: _root_.scala.Seq[_root_.scala.Boolean],
            `type`: _root_.scala.Seq[DataType],
            shape: _root_.scala.Seq[TensorShapeProto],
            tensor: _root_.scala.Seq[TensorProto],
            func: _root_.scala.Seq[NameAttrList]
    ): AttrValue.ListValue = attr_value.AttrValue.ListValue(
      s,
      i,
      f,
      b,
      `type`,
      shape,
      tensor,
      func
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.AttrValue.ListValue])
  }
  
  implicit class AttrValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, AttrValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, AttrValue](_l) {
    def s: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getS)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.S(f_)))
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getI)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.I(f_)))
    def f: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Float] = field(_.getF)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.F(f_)))
    def b: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getB)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.B(f_)))
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, DataType] = field(_.getType)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.Type(f_)))
    def shape: _root_.scalapb.lenses.Lens[UpperPB, TensorShapeProto] = field(_.getShape)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.Shape(f_)))
    def tensor: _root_.scalapb.lenses.Lens[UpperPB, TensorProto] = field(_.getTensor)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.Tensor(f_)))
    def list: _root_.scalapb.lenses.Lens[UpperPB, AttrValue.ListValue] = field(_.getList)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.List(f_)))
    def func: _root_.scalapb.lenses.Lens[UpperPB, NameAttrList] = field(_.getFunc)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.Func(f_)))
    def placeholder: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPlaceholder)((c_, f_) => c_.copy(value = attr_value.AttrValue.Value.Placeholder(f_)))
    def value: _root_.scalapb.lenses.Lens[UpperPB, AttrValue.Value] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val S_FIELD_NUMBER = 2
  final val I_FIELD_NUMBER = 3
  final val F_FIELD_NUMBER = 4
  final val B_FIELD_NUMBER = 5
  final val TYPE_FIELD_NUMBER = 6
  final val SHAPE_FIELD_NUMBER = 7
  final val TENSOR_FIELD_NUMBER = 8
  final val LIST_FIELD_NUMBER = 1
  final val FUNC_FIELD_NUMBER = 10
  final val PLACEHOLDER_FIELD_NUMBER = 9
  def of(
    value: AttrValue.Value
  ): AttrValue = AttrValue(
    value
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.AttrValue])
}
