// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.summary

import tensorflow.framework.summary

/** A SummaryMetadata encapsulates information on which plugins are able to make
  * use of a certain summary value.
  *
  * @param pluginData
  *   Data that associates a summary with a certain plugin.
  * @param displayName
  *   Display name for viewing in TensorBoard.
  * @param summaryDescription
  *   Longform readable description of the summary sequence. Markdown supported.
  * @param dataClass
  *   Class of data stored in this time series. Required for compatibility with
  *   TensorBoard's generic data facilities (`DataProvider`, et al.). This value
  *   imposes constraints on the dtype and shape of the corresponding tensor
  *   values. See `DataClass` docs for details.
  */
@SerialVersionUID(0L)
final case class SummaryMetadata(
                                  pluginData: _root_.scala.Option[SummaryMetadata.PluginData] = _root_.scala.None,
                                  displayName: _root_.scala.Predef.String = "",
                                  summaryDescription: _root_.scala.Predef.String = "",
                                  dataClass: DataClass = summary.DataClass.DATA_CLASS_UNKNOWN,
                                  unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SummaryMetadata] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (pluginData.isDefined) {
        val __value = pluginData.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = displayName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = summaryDescription
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = dataClass.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      pluginData.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = displayName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = summaryDescription
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = dataClass.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getPluginData: SummaryMetadata.PluginData = pluginData.getOrElse(summary.SummaryMetadata.PluginData.defaultInstance)
    def clearPluginData: SummaryMetadata = copy(pluginData = _root_.scala.None)
    def withPluginData(__v: SummaryMetadata.PluginData): SummaryMetadata = copy(pluginData = Option(__v))
    def withDisplayName(__v: _root_.scala.Predef.String): SummaryMetadata = copy(displayName = __v)
    def withSummaryDescription(__v: _root_.scala.Predef.String): SummaryMetadata = copy(summaryDescription = __v)
    def withDataClass(__v: DataClass): SummaryMetadata = copy(dataClass = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => pluginData.orNull
        case 2 => {
          val __t = displayName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = summaryDescription
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = dataClass.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => pluginData.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(displayName)
        case 3 => _root_.scalapb.descriptors.PString(summaryDescription)
        case 4 => _root_.scalapb.descriptors.PEnum(dataClass.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: SummaryMetadata.type = summary.SummaryMetadata
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.SummaryMetadata])
}

object SummaryMetadata extends scalapb.GeneratedMessageCompanion[SummaryMetadata] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[SummaryMetadata] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): SummaryMetadata = {
    var __pluginData: _root_.scala.Option[SummaryMetadata.PluginData] = _root_.scala.None
    var __displayName: _root_.scala.Predef.String = ""
    var __summaryDescription: _root_.scala.Predef.String = ""
    var __dataClass: DataClass = summary.DataClass.DATA_CLASS_UNKNOWN
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __pluginData = _root_.scala.Option(__pluginData.fold(_root_.scalapb.LiteParser.readMessage[SummaryMetadata.PluginData](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __displayName = _input__.readStringRequireUtf8()
        case 26 =>
          __summaryDescription = _input__.readStringRequireUtf8()
        case 32 =>
          __dataClass = summary.DataClass.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    SummaryMetadata(
        pluginData = __pluginData,
        displayName = __displayName,
        summaryDescription = __summaryDescription,
        dataClass = __dataClass,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[SummaryMetadata] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      SummaryMetadata(
        pluginData = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[SummaryMetadata.PluginData]]),
        displayName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        summaryDescription = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        dataClass = summary.DataClass.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(summary.DataClass.DATA_CLASS_UNKNOWN.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.summary.SummaryProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.summary.SummaryProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = summary.SummaryMetadata.PluginData
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      summary.SummaryMetadata.PluginData
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => summary.DataClass
    }
  }
  lazy val defaultInstance = SummaryMetadata(
    pluginData = _root_.scala.None,
    displayName = "",
    summaryDescription = "",
    dataClass = summary.DataClass.DATA_CLASS_UNKNOWN
  )
  /** @param pluginName
    *   The name of the plugin this data pertains to.
    * @param content
    *   The content to store for the plugin. The best practice is for this to be
    *   a binary serialized protocol buffer.
    */
  @SerialVersionUID(0L)
  final case class PluginData(
      pluginName: _root_.scala.Predef.String = "",
      content: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[PluginData] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = pluginName
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = content
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = pluginName
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = content
          if (!__v.isEmpty) {
            _output__.writeBytes(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withPluginName(__v: _root_.scala.Predef.String): PluginData = copy(pluginName = __v)
      def withContent(__v: _root_.com.google.protobuf.ByteString): PluginData = copy(content = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = pluginName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = content
            if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(pluginName)
          case 2 => _root_.scalapb.descriptors.PByteString(content)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: SummaryMetadata.PluginData.type = summary.SummaryMetadata.PluginData
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.SummaryMetadata.PluginData])
  }
  
  object PluginData extends scalapb.GeneratedMessageCompanion[SummaryMetadata.PluginData] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[SummaryMetadata.PluginData] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): SummaryMetadata.PluginData = {
      var __pluginName: _root_.scala.Predef.String = ""
      var __content: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __pluginName = _input__.readStringRequireUtf8()
          case 18 =>
            __content = _input__.readBytes()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      summary.SummaryMetadata.PluginData(
          pluginName = __pluginName,
          content = __content,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[SummaryMetadata.PluginData] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        summary.SummaryMetadata.PluginData(
          pluginName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          content = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = summary.SummaryMetadata.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = summary.SummaryMetadata.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = summary.SummaryMetadata.PluginData(
      pluginName = "",
      content = _root_.com.google.protobuf.ByteString.EMPTY
    )
    implicit class PluginDataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, SummaryMetadata.PluginData]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, SummaryMetadata.PluginData](_l) {
      def pluginName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.pluginName)((c_, f_) => c_.copy(pluginName = f_))
      def content: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.content)((c_, f_) => c_.copy(content = f_))
    }
    final val PLUGIN_NAME_FIELD_NUMBER = 1
    final val CONTENT_FIELD_NUMBER = 2
    def of(
      pluginName: _root_.scala.Predef.String,
      content: _root_.com.google.protobuf.ByteString
    ): SummaryMetadata.PluginData = summary.SummaryMetadata.PluginData(
      pluginName,
      content
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.SummaryMetadata.PluginData])
  }
  
  implicit class SummaryMetadataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, SummaryMetadata]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, SummaryMetadata](_l) {
    def pluginData: _root_.scalapb.lenses.Lens[UpperPB, SummaryMetadata.PluginData] = field(_.getPluginData)((c_, f_) => c_.copy(pluginData = _root_.scala.Option(f_)))
    def optionalPluginData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[SummaryMetadata.PluginData]] = field(_.pluginData)((c_, f_) => c_.copy(pluginData = f_))
    def displayName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.displayName)((c_, f_) => c_.copy(displayName = f_))
    def summaryDescription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.summaryDescription)((c_, f_) => c_.copy(summaryDescription = f_))
    def dataClass: _root_.scalapb.lenses.Lens[UpperPB, DataClass] = field(_.dataClass)((c_, f_) => c_.copy(dataClass = f_))
  }
  final val PLUGIN_DATA_FIELD_NUMBER = 1
  final val DISPLAY_NAME_FIELD_NUMBER = 2
  final val SUMMARY_DESCRIPTION_FIELD_NUMBER = 3
  final val DATA_CLASS_FIELD_NUMBER = 4
  def of(
          pluginData: _root_.scala.Option[SummaryMetadata.PluginData],
          displayName: _root_.scala.Predef.String,
          summaryDescription: _root_.scala.Predef.String,
          dataClass: DataClass
  ): SummaryMetadata = SummaryMetadata(
    pluginData,
    displayName,
    summaryDescription,
    dataClass
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.SummaryMetadata])
}
