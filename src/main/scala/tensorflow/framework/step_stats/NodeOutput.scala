// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.step_stats

import tensorflow.framework.tensor_description.TensorDescription
import tensorflow.framework.{step_stats, tensor_description}

/** Output sizes recorded for a single execution of a graph node.
  */
@SerialVersionUID(0L)
final case class NodeOutput(
                             slot: _root_.scala.Int = 0,
                             tensorDescription: _root_.scala.Option[TensorDescription] = _root_.scala.None,
                             unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[NodeOutput] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = slot
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      if (tensorDescription.isDefined) {
        val __value = tensorDescription.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = slot
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      tensorDescription.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withSlot(__v: _root_.scala.Int): NodeOutput = copy(slot = __v)
    def getTensorDescription: TensorDescription = tensorDescription.getOrElse(tensor_description.TensorDescription.defaultInstance)
    def clearTensorDescription: NodeOutput = copy(tensorDescription = _root_.scala.None)
    def withTensorDescription(__v: TensorDescription): NodeOutput = copy(tensorDescription = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = slot
          if (__t != 0) __t else null
        }
        case 3 => tensorDescription.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(slot)
        case 3 => tensorDescription.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: NodeOutput.type = step_stats.NodeOutput
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.NodeOutput])
}

object NodeOutput extends scalapb.GeneratedMessageCompanion[NodeOutput] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[NodeOutput] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): NodeOutput = {
    var __slot: _root_.scala.Int = 0
    var __tensorDescription: _root_.scala.Option[TensorDescription] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __slot = _input__.readInt32()
        case 26 =>
          __tensorDescription = _root_.scala.Option(__tensorDescription.fold(_root_.scalapb.LiteParser.readMessage[TensorDescription](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    NodeOutput(
        slot = __slot,
        tensorDescription = __tensorDescription,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[NodeOutput] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      NodeOutput(
        slot = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        tensorDescription = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[TensorDescription]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.step_stats.StepStatsProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.step_stats.StepStatsProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = tensor_description.TensorDescription
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = NodeOutput(
    slot = 0,
    tensorDescription = _root_.scala.None
  )
  implicit class NodeOutputLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, NodeOutput]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, NodeOutput](_l) {
    def slot: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.slot)((c_, f_) => c_.copy(slot = f_))
    def tensorDescription: _root_.scalapb.lenses.Lens[UpperPB, TensorDescription] = field(_.getTensorDescription)((c_, f_) => c_.copy(tensorDescription = _root_.scala.Option(f_)))
    def optionalTensorDescription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[TensorDescription]] = field(_.tensorDescription)((c_, f_) => c_.copy(tensorDescription = f_))
  }
  final val SLOT_FIELD_NUMBER = 1
  final val TENSOR_DESCRIPTION_FIELD_NUMBER = 3
  def of(
    slot: _root_.scala.Int,
    tensorDescription: _root_.scala.Option[TensorDescription]
  ): NodeOutput = NodeOutput(
    slot,
    tensorDescription
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.NodeOutput])
}
