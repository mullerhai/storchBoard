// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.full_type

import tensorflow.framework.full_type

/** Highly experimental and very likely to change.
  * This encoding uses tags instead of dedicated messages for regularity. In
  * particular the encoding imposes no restrictions on what the parameters of any
  * type should be, which in particular needs to be true for type symbols.
  *
  * @param typeId
  *   The principal type represented by this object. This may be a concrete type
  *   (Tensor, Dataset) a type variable (used for dependent types) a type
  *   symbol (Any, Union). See FullTypeId for details.
  */
@SerialVersionUID(0L)
final case class FullTypeDef(
                              typeId: FullTypeId = full_type.FullTypeId.TFT_UNSET,
                              args: _root_.scala.Seq[FullTypeDef] = _root_.scala.Seq.empty,
                              attr: FullTypeDef.Attr = full_type.FullTypeDef.Attr.Empty,
                              unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FullTypeDef] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = typeId.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      args.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (attr.s.isDefined) {
        val __value = attr.s.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      };
      if (attr.i.isDefined) {
        val __value = attr.i.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = typeId.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      args.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      attr.s.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      attr.i.foreach { __v =>
        val __m = __v
        _output__.writeInt64(4, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withTypeId(__v: FullTypeId): FullTypeDef = copy(typeId = __v)
    def clearArgs = copy(args = _root_.scala.Seq.empty)
    def addArgs(__vs: FullTypeDef *): FullTypeDef = addAllArgs(__vs)
    def addAllArgs(__vs: Iterable[FullTypeDef]): FullTypeDef = copy(args = args ++ __vs)
    def withArgs(__v: _root_.scala.Seq[FullTypeDef]): FullTypeDef = copy(args = __v)
    def getS: _root_.scala.Predef.String = attr.s.getOrElse("")
    def withS(__v: _root_.scala.Predef.String): FullTypeDef = copy(attr = full_type.FullTypeDef.Attr.S(__v))
    def getI: _root_.scala.Long = attr.i.getOrElse(0L)
    def withI(__v: _root_.scala.Long): FullTypeDef = copy(attr = full_type.FullTypeDef.Attr.I(__v))
    def clearAttr: FullTypeDef = copy(attr = full_type.FullTypeDef.Attr.Empty)
    def withAttr(__v: FullTypeDef.Attr): FullTypeDef = copy(attr = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = typeId.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => args
        case 3 => attr.s.orNull
        case 4 => attr.i.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(typeId.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PRepeated(args.iterator.map(_.toPMessage).toVector)
        case 3 => attr.s.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => attr.i.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: FullTypeDef.type = full_type.FullTypeDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.FullTypeDef])
}

object FullTypeDef extends scalapb.GeneratedMessageCompanion[FullTypeDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[FullTypeDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): FullTypeDef = {
    var __typeId: FullTypeId = full_type.FullTypeId.TFT_UNSET
    val __args: _root_.scala.collection.immutable.VectorBuilder[FullTypeDef] = new _root_.scala.collection.immutable.VectorBuilder[FullTypeDef]
    var __attr: FullTypeDef.Attr = full_type.FullTypeDef.Attr.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __typeId = full_type.FullTypeId.fromValue(_input__.readEnum())
        case 18 =>
          __args += _root_.scalapb.LiteParser.readMessage[FullTypeDef](_input__)
        case 26 =>
          __attr = full_type.FullTypeDef.Attr.S(_input__.readStringRequireUtf8())
        case 32 =>
          __attr = full_type.FullTypeDef.Attr.I(_input__.readInt64())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    FullTypeDef(
        typeId = __typeId,
        args = __args.result(),
        attr = __attr,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[FullTypeDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      FullTypeDef(
        typeId = full_type.FullTypeId.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(full_type.FullTypeId.TFT_UNSET.scalaValueDescriptor).number),
        args = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[FullTypeDef]]).getOrElse(_root_.scala.Seq.empty),
        attr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(full_type.FullTypeDef.Attr.S(_))
            .orElse[FullTypeDef.Attr](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(full_type.FullTypeDef.Attr.I(_)))
            .getOrElse(full_type.FullTypeDef.Attr.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.full_type.FullTypeProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.full_type.FullTypeProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = full_type.FullTypeDef
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => full_type.FullTypeId
    }
  }
  lazy val defaultInstance = FullTypeDef(
    typeId = full_type.FullTypeId.TFT_UNSET,
    args = _root_.scala.Seq.empty,
    attr = full_type.FullTypeDef.Attr.Empty
  )
  sealed abstract class Attr extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isS: _root_.scala.Boolean = false
    def isI: _root_.scala.Boolean = false
    def s: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def i: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
  }
  object Attr {
    @SerialVersionUID(0L)
    case object Empty extends FullTypeDef.Attr {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class S(value: _root_.scala.Predef.String) extends FullTypeDef.Attr {
      type ValueType = _root_.scala.Predef.String
      override def isS: _root_.scala.Boolean = true
      override def s: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class I(value: _root_.scala.Long) extends FullTypeDef.Attr {
      type ValueType = _root_.scala.Long
      override def isI: _root_.scala.Boolean = true
      override def i: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 4
    }
  }
  implicit class FullTypeDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, FullTypeDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, FullTypeDef](_l) {
    def typeId: _root_.scalapb.lenses.Lens[UpperPB, FullTypeId] = field(_.typeId)((c_, f_) => c_.copy(typeId = f_))
    def args: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[FullTypeDef]] = field(_.args)((c_, f_) => c_.copy(args = f_))
    def s: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getS)((c_, f_) => c_.copy(attr = full_type.FullTypeDef.Attr.S(f_)))
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getI)((c_, f_) => c_.copy(attr = full_type.FullTypeDef.Attr.I(f_)))
    def attr: _root_.scalapb.lenses.Lens[UpperPB, FullTypeDef.Attr] = field(_.attr)((c_, f_) => c_.copy(attr = f_))
  }
  final val TYPE_ID_FIELD_NUMBER = 1
  final val ARGS_FIELD_NUMBER = 2
  final val S_FIELD_NUMBER = 3
  final val I_FIELD_NUMBER = 4
  def of(
          typeId: FullTypeId,
          args: _root_.scala.Seq[FullTypeDef],
          attr: FullTypeDef.Attr
  ): FullTypeDef = FullTypeDef(
    typeId,
    args,
    attr
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FullTypeDef])
}
