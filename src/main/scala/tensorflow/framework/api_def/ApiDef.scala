// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorflow.framework.api_def

import tensorflow.framework.attr_value.AttrValue
import tensorflow.framework.{api_def, attr_value}

/** Used to specify and override the default API &amp; behavior in the
  * generated code for client languages, from what you would get from
  * the OpDef alone. There will be a set of ApiDefs that are common
  * to all client languages, and another set per client language.
  * The per-client-language ApiDefs will inherit values from the
  * common ApiDefs which it can either replace or modify.
  *
  * We separate the API definition from the OpDef so we can evolve the
  * API while remaining backwards compatible when interpreting old
  * graphs.  Overrides go in an "api_def.pbtxt" file with a text-format
  * ApiDefs message.
  *
  * WARNING: Be *very* careful changing the API for any existing op --
  * you can change the semantics of existing code.  These changes may
  * need to wait until a major release of TensorFlow to avoid breaking
  * our compatibility promises.
  *
  * @param graphOpName
  *   Name of the op (in the OpDef) to specify the API for.
  * @param deprecationMessage
  *   If this op is deprecated, set deprecation message to the message
  *   that should be logged when this op is used.
  *   The message should indicate alternative op to use, if any.
  * @param deprecationVersion
  *   Major version when the op will be deleted. For e.g. set this
  *   value to 2 if op API should be removed in TensorFlow 2.0 and
  *   deprecated in versions before that.
  * @param argOrder
  *   List of original in_arg names to specify new argument order.
  *   Length of arg_order should be either empty to keep current order
  *   or match size of in_arg.
  * @param summary
  *   One-line human-readable description of what the Op does.
  * @param description
  *   Additional, longer human-readable description of what the Op does.
  * @param descriptionPrefix
  *   Modify an existing/inherited description by adding text to the beginning
  *   or end.
  */
@SerialVersionUID(0L)
final case class ApiDef(
                         graphOpName: _root_.scala.Predef.String = "",
                         deprecationMessage: _root_.scala.Predef.String = "",
                         deprecationVersion: _root_.scala.Int = 0,
                         visibility: ApiDef.Visibility = api_def.ApiDef.Visibility.DEFAULT_VISIBILITY,
                         endpoint: _root_.scala.Seq[ApiDef.Endpoint] = _root_.scala.Seq.empty,
                         inArg: _root_.scala.Seq[ApiDef.Arg] = _root_.scala.Seq.empty,
                         outArg: _root_.scala.Seq[ApiDef.Arg] = _root_.scala.Seq.empty,
                         argOrder: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
                         attr: _root_.scala.Seq[ApiDef.Attr] = _root_.scala.Seq.empty,
                         summary: _root_.scala.Predef.String = "",
                         description: _root_.scala.Predef.String = "",
                         descriptionPrefix: _root_.scala.Predef.String = "",
                         descriptionSuffix: _root_.scala.Predef.String = "",
                         unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ApiDef] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = graphOpName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = deprecationMessage
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      
      {
        val __value = deprecationVersion
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(13, __value)
        }
      };
      
      {
        val __value = visibility.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      endpoint.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      inArg.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      outArg.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      argOrder.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      }
      attr.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = summary
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      
      {
        val __value = descriptionPrefix
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      
      {
        val __value = descriptionSuffix
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = graphOpName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = visibility.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      endpoint.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      inArg.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      outArg.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      attr.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = summary
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = descriptionPrefix
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = descriptionSuffix
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      argOrder.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      {
        val __v = deprecationMessage
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      {
        val __v = deprecationVersion
        if (__v != 0) {
          _output__.writeInt32(13, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withGraphOpName(__v: _root_.scala.Predef.String): ApiDef = copy(graphOpName = __v)
    def withDeprecationMessage(__v: _root_.scala.Predef.String): ApiDef = copy(deprecationMessage = __v)
    def withDeprecationVersion(__v: _root_.scala.Int): ApiDef = copy(deprecationVersion = __v)
    def withVisibility(__v: ApiDef.Visibility): ApiDef = copy(visibility = __v)
    def clearEndpoint = copy(endpoint = _root_.scala.Seq.empty)
    def addEndpoint(__vs: ApiDef.Endpoint *): ApiDef = addAllEndpoint(__vs)
    def addAllEndpoint(__vs: Iterable[ApiDef.Endpoint]): ApiDef = copy(endpoint = endpoint ++ __vs)
    def withEndpoint(__v: _root_.scala.Seq[ApiDef.Endpoint]): ApiDef = copy(endpoint = __v)
    def clearInArg = copy(inArg = _root_.scala.Seq.empty)
    def addInArg(__vs: ApiDef.Arg *): ApiDef = addAllInArg(__vs)
    def addAllInArg(__vs: Iterable[ApiDef.Arg]): ApiDef = copy(inArg = inArg ++ __vs)
    def withInArg(__v: _root_.scala.Seq[ApiDef.Arg]): ApiDef = copy(inArg = __v)
    def clearOutArg = copy(outArg = _root_.scala.Seq.empty)
    def addOutArg(__vs: ApiDef.Arg *): ApiDef = addAllOutArg(__vs)
    def addAllOutArg(__vs: Iterable[ApiDef.Arg]): ApiDef = copy(outArg = outArg ++ __vs)
    def withOutArg(__v: _root_.scala.Seq[ApiDef.Arg]): ApiDef = copy(outArg = __v)
    def clearArgOrder = copy(argOrder = _root_.scala.Seq.empty)
    def addArgOrder(__vs: _root_.scala.Predef.String *): ApiDef = addAllArgOrder(__vs)
    def addAllArgOrder(__vs: Iterable[_root_.scala.Predef.String]): ApiDef = copy(argOrder = argOrder ++ __vs)
    def withArgOrder(__v: _root_.scala.Seq[_root_.scala.Predef.String]): ApiDef = copy(argOrder = __v)
    def clearAttr = copy(attr = _root_.scala.Seq.empty)
    def addAttr(__vs: ApiDef.Attr *): ApiDef = addAllAttr(__vs)
    def addAllAttr(__vs: Iterable[ApiDef.Attr]): ApiDef = copy(attr = attr ++ __vs)
    def withAttr(__v: _root_.scala.Seq[ApiDef.Attr]): ApiDef = copy(attr = __v)
    def withSummary(__v: _root_.scala.Predef.String): ApiDef = copy(summary = __v)
    def withDescription(__v: _root_.scala.Predef.String): ApiDef = copy(description = __v)
    def withDescriptionPrefix(__v: _root_.scala.Predef.String): ApiDef = copy(descriptionPrefix = __v)
    def withDescriptionSuffix(__v: _root_.scala.Predef.String): ApiDef = copy(descriptionSuffix = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = graphOpName
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = deprecationMessage
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = deprecationVersion
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = visibility.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => endpoint
        case 4 => inArg
        case 5 => outArg
        case 11 => argOrder
        case 6 => attr
        case 7 => {
          val __t = summary
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = descriptionPrefix
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = descriptionSuffix
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(graphOpName)
        case 12 => _root_.scalapb.descriptors.PString(deprecationMessage)
        case 13 => _root_.scalapb.descriptors.PInt(deprecationVersion)
        case 2 => _root_.scalapb.descriptors.PEnum(visibility.scalaValueDescriptor)
        case 3 => _root_.scalapb.descriptors.PRepeated(endpoint.iterator.map(_.toPMessage).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(inArg.iterator.map(_.toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(outArg.iterator.map(_.toPMessage).toVector)
        case 11 => _root_.scalapb.descriptors.PRepeated(argOrder.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(attr.iterator.map(_.toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PString(summary)
        case 8 => _root_.scalapb.descriptors.PString(description)
        case 9 => _root_.scalapb.descriptors.PString(descriptionPrefix)
        case 10 => _root_.scalapb.descriptors.PString(descriptionSuffix)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ApiDef.type = api_def.ApiDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.ApiDef])
}

object ApiDef extends scalapb.GeneratedMessageCompanion[ApiDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ApiDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ApiDef = {
    var __graphOpName: _root_.scala.Predef.String = ""
    var __deprecationMessage: _root_.scala.Predef.String = ""
    var __deprecationVersion: _root_.scala.Int = 0
    var __visibility: ApiDef.Visibility = api_def.ApiDef.Visibility.DEFAULT_VISIBILITY
    val __endpoint: _root_.scala.collection.immutable.VectorBuilder[ApiDef.Endpoint] = new _root_.scala.collection.immutable.VectorBuilder[ApiDef.Endpoint]
    val __inArg: _root_.scala.collection.immutable.VectorBuilder[ApiDef.Arg] = new _root_.scala.collection.immutable.VectorBuilder[ApiDef.Arg]
    val __outArg: _root_.scala.collection.immutable.VectorBuilder[ApiDef.Arg] = new _root_.scala.collection.immutable.VectorBuilder[ApiDef.Arg]
    val __argOrder: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __attr: _root_.scala.collection.immutable.VectorBuilder[ApiDef.Attr] = new _root_.scala.collection.immutable.VectorBuilder[ApiDef.Attr]
    var __summary: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __descriptionPrefix: _root_.scala.Predef.String = ""
    var __descriptionSuffix: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __graphOpName = _input__.readStringRequireUtf8()
        case 98 =>
          __deprecationMessage = _input__.readStringRequireUtf8()
        case 104 =>
          __deprecationVersion = _input__.readInt32()
        case 16 =>
          __visibility = api_def.ApiDef.Visibility.fromValue(_input__.readEnum())
        case 26 =>
          __endpoint += _root_.scalapb.LiteParser.readMessage[ApiDef.Endpoint](_input__)
        case 34 =>
          __inArg += _root_.scalapb.LiteParser.readMessage[ApiDef.Arg](_input__)
        case 42 =>
          __outArg += _root_.scalapb.LiteParser.readMessage[ApiDef.Arg](_input__)
        case 90 =>
          __argOrder += _input__.readStringRequireUtf8()
        case 50 =>
          __attr += _root_.scalapb.LiteParser.readMessage[ApiDef.Attr](_input__)
        case 58 =>
          __summary = _input__.readStringRequireUtf8()
        case 66 =>
          __description = _input__.readStringRequireUtf8()
        case 74 =>
          __descriptionPrefix = _input__.readStringRequireUtf8()
        case 82 =>
          __descriptionSuffix = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ApiDef(
        graphOpName = __graphOpName,
        deprecationMessage = __deprecationMessage,
        deprecationVersion = __deprecationVersion,
        visibility = __visibility,
        endpoint = __endpoint.result(),
        inArg = __inArg.result(),
        outArg = __outArg.result(),
        argOrder = __argOrder.result(),
        attr = __attr.result(),
        summary = __summary,
        description = __description,
        descriptionPrefix = __descriptionPrefix,
        descriptionSuffix = __descriptionSuffix,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ApiDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ApiDef(
        graphOpName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        deprecationMessage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        deprecationVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        visibility = api_def.ApiDef.Visibility.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(api_def.ApiDef.Visibility.DEFAULT_VISIBILITY.scalaValueDescriptor).number),
        endpoint = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[ApiDef.Endpoint]]).getOrElse(_root_.scala.Seq.empty),
        inArg = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[ApiDef.Arg]]).getOrElse(_root_.scala.Seq.empty),
        outArg = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[ApiDef.Arg]]).getOrElse(_root_.scala.Seq.empty),
        argOrder = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        attr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[ApiDef.Attr]]).getOrElse(_root_.scala.Seq.empty),
        summary = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        descriptionPrefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        descriptionSuffix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.api_def.ApiDefProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.api_def.ApiDefProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = api_def.ApiDef.Endpoint
      case 4 => __out = api_def.ApiDef.Arg
      case 5 => __out = api_def.ApiDef.Arg
      case 6 => __out = api_def.ApiDef.Attr
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      api_def.ApiDef.Endpoint,
      api_def.ApiDef.Arg,
      api_def.ApiDef.Attr
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => api_def.ApiDef.Visibility
    }
  }
  lazy val defaultInstance = ApiDef(
    graphOpName = "",
    deprecationMessage = "",
    deprecationVersion = 0,
    visibility = api_def.ApiDef.Visibility.DEFAULT_VISIBILITY,
    endpoint = _root_.scala.Seq.empty,
    inArg = _root_.scala.Seq.empty,
    outArg = _root_.scala.Seq.empty,
    argOrder = _root_.scala.Seq.empty,
    attr = _root_.scala.Seq.empty,
    summary = "",
    description = "",
    descriptionPrefix = "",
    descriptionSuffix = ""
  )
  sealed abstract class Visibility(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = ApiDef.Visibility
    type RecognizedType = ApiDef.Visibility.Recognized
    def isDefaultVisibility: _root_.scala.Boolean = false
    def isVisible: _root_.scala.Boolean = false
    def isSkip: _root_.scala.Boolean = false
    def isHidden: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Visibility] = api_def.ApiDef.Visibility
    final def asRecognized: _root_.scala.Option[ApiDef.Visibility.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[ApiDef.Visibility.Recognized])
  }
  
  object Visibility extends _root_.scalapb.GeneratedEnumCompanion[Visibility] {
    sealed trait Recognized extends Visibility
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Visibility] = this
    
    /** Normally this is "VISIBLE" unless you are inheriting a
      * different value from another ApiDef.
      */
    @SerialVersionUID(0L)
    case object DEFAULT_VISIBILITY extends Visibility(0) with Visibility.Recognized {
      val index = 0
      val name = "DEFAULT_VISIBILITY"
      override def isDefaultVisibility: _root_.scala.Boolean = true
    }
    
    /** Publicly visible in the API.
      */
    @SerialVersionUID(0L)
    case object VISIBLE extends Visibility(1) with Visibility.Recognized {
      val index = 1
      val name = "VISIBLE"
      override def isVisible: _root_.scala.Boolean = true
    }
    
    /** Do not include this op in the generated API. If visibility is
      * set to 'SKIP', other fields are ignored for this op.
      */
    @SerialVersionUID(0L)
    case object SKIP extends Visibility(2) with Visibility.Recognized {
      val index = 2
      val name = "SKIP"
      override def isSkip: _root_.scala.Boolean = true
    }
    
    /** Hide this op by putting it into an internal namespace (or whatever
      * is appropriate in the target language).
      */
    @SerialVersionUID(0L)
    case object HIDDEN extends Visibility(3) with Visibility.Recognized {
      val index = 3
      val name = "HIDDEN"
      override def isHidden: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Visibility(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(DEFAULT_VISIBILITY, VISIBLE, SKIP, HIDDEN)
    def fromValue(__value: _root_.scala.Int): Visibility = __value match {
      case 0 => DEFAULT_VISIBILITY
      case 1 => VISIBLE
      case 2 => SKIP
      case 3 => HIDDEN
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = api_def.ApiDef.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = api_def.ApiDef.scalaDescriptor.enums(0)
  }
  /** If you specify any endpoint, this will replace all of the
    * inherited endpoints.  The first endpoint should be the
    * "canonical" endpoint, and should not be deprecated (unless all
    * endpoints are deprecated).
    *
    * @param name
    *   Name should be either like "CamelCaseName" or
    *   "Package.CamelCaseName". Client-language-specific ApiDefs may
    *   use a snake_case convention instead of CamelCase.
    * @param deprecated
    *   Set if this endpoint is deprecated. If set to true, a message suggesting
    *   to use a non-deprecated endpoint instead will be printed. If all
    *   endpoints are deprecated, set deprecation_message in ApiDef instead.
    * @param deprecationVersion
    *   Major version when an endpoint will be deleted. For e.g. set this
    *   value to 2 if endpoint should be removed in TensorFlow 2.0 and
    *   deprecated in versions before that.
    */
  @SerialVersionUID(0L)
  final case class Endpoint(
      name: _root_.scala.Predef.String = "",
      deprecated: _root_.scala.Boolean = false,
      deprecationVersion: _root_.scala.Int = 0,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Endpoint] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = deprecated
          if (__value != false) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
          }
        };
        
        {
          val __value = deprecationVersion
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = deprecated
          if (__v != false) {
            _output__.writeBool(3, __v)
          }
        };
        {
          val __v = deprecationVersion
          if (__v != 0) {
            _output__.writeInt32(4, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withName(__v: _root_.scala.Predef.String): Endpoint = copy(name = __v)
      def withDeprecated(__v: _root_.scala.Boolean): Endpoint = copy(deprecated = __v)
      def withDeprecationVersion(__v: _root_.scala.Int): Endpoint = copy(deprecationVersion = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = deprecated
            if (__t != false) __t else null
          }
          case 4 => {
            val __t = deprecationVersion
            if (__t != 0) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(name)
          case 3 => _root_.scalapb.descriptors.PBoolean(deprecated)
          case 4 => _root_.scalapb.descriptors.PInt(deprecationVersion)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: ApiDef.Endpoint.type = api_def.ApiDef.Endpoint
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.ApiDef.Endpoint])
  }
  
  object Endpoint extends scalapb.GeneratedMessageCompanion[ApiDef.Endpoint] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ApiDef.Endpoint] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ApiDef.Endpoint = {
      var __name: _root_.scala.Predef.String = ""
      var __deprecated: _root_.scala.Boolean = false
      var __deprecationVersion: _root_.scala.Int = 0
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readStringRequireUtf8()
          case 24 =>
            __deprecated = _input__.readBool()
          case 32 =>
            __deprecationVersion = _input__.readInt32()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      api_def.ApiDef.Endpoint(
          name = __name,
          deprecated = __deprecated,
          deprecationVersion = __deprecationVersion,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[ApiDef.Endpoint] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        api_def.ApiDef.Endpoint(
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          deprecated = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
          deprecationVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = api_def.ApiDef.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = api_def.ApiDef.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = api_def.ApiDef.Endpoint(
      name = "",
      deprecated = false,
      deprecationVersion = 0
    )
    implicit class EndpointLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ApiDef.Endpoint]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ApiDef.Endpoint](_l) {
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def deprecated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.deprecated)((c_, f_) => c_.copy(deprecated = f_))
      def deprecationVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.deprecationVersion)((c_, f_) => c_.copy(deprecationVersion = f_))
    }
    final val NAME_FIELD_NUMBER = 1
    final val DEPRECATED_FIELD_NUMBER = 3
    final val DEPRECATION_VERSION_FIELD_NUMBER = 4
    def of(
      name: _root_.scala.Predef.String,
      deprecated: _root_.scala.Boolean,
      deprecationVersion: _root_.scala.Int
    ): ApiDef.Endpoint = api_def.ApiDef.Endpoint(
      name,
      deprecated,
      deprecationVersion
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.ApiDef.Endpoint])
  }
  
  /** @param renameTo
    *   Change the name used to access this arg in the API from what
    *   is used in the GraphDef.  Note that these names in `backticks`
    *   will also be replaced in the summary &amp; description fields.
    * @param description
    *   Note: this will replace any inherited arg doc. There is no
    *   current way of modifying arg descriptions (other than replacing
    *   them entirely) as can be done with op descriptions.
    */
  @SerialVersionUID(0L)
  final case class Arg(
      name: _root_.scala.Predef.String = "",
      renameTo: _root_.scala.Predef.String = "",
      description: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Arg] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = renameTo
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        
        {
          val __value = description
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = renameTo
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        {
          val __v = description
          if (!__v.isEmpty) {
            _output__.writeString(3, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withName(__v: _root_.scala.Predef.String): Arg = copy(name = __v)
      def withRenameTo(__v: _root_.scala.Predef.String): Arg = copy(renameTo = __v)
      def withDescription(__v: _root_.scala.Predef.String): Arg = copy(description = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = renameTo
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = description
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(name)
          case 2 => _root_.scalapb.descriptors.PString(renameTo)
          case 3 => _root_.scalapb.descriptors.PString(description)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: ApiDef.Arg.type = api_def.ApiDef.Arg
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.ApiDef.Arg])
  }
  
  object Arg extends scalapb.GeneratedMessageCompanion[ApiDef.Arg] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ApiDef.Arg] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ApiDef.Arg = {
      var __name: _root_.scala.Predef.String = ""
      var __renameTo: _root_.scala.Predef.String = ""
      var __description: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readStringRequireUtf8()
          case 18 =>
            __renameTo = _input__.readStringRequireUtf8()
          case 26 =>
            __description = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      api_def.ApiDef.Arg(
          name = __name,
          renameTo = __renameTo,
          description = __description,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[ApiDef.Arg] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        api_def.ApiDef.Arg(
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          renameTo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = api_def.ApiDef.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = api_def.ApiDef.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = api_def.ApiDef.Arg(
      name = "",
      renameTo = "",
      description = ""
    )
    implicit class ArgLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ApiDef.Arg]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ApiDef.Arg](_l) {
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def renameTo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.renameTo)((c_, f_) => c_.copy(renameTo = f_))
      def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    }
    final val NAME_FIELD_NUMBER = 1
    final val RENAME_TO_FIELD_NUMBER = 2
    final val DESCRIPTION_FIELD_NUMBER = 3
    def of(
      name: _root_.scala.Predef.String,
      renameTo: _root_.scala.Predef.String,
      description: _root_.scala.Predef.String
    ): ApiDef.Arg = api_def.ApiDef.Arg(
      name,
      renameTo,
      description
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.ApiDef.Arg])
  }
  
  /** Description of the graph-construction-time configuration of this
    * Op.  That is to say, this describes the attr fields that will
    * be specified in the NodeDef.
    *
    * @param renameTo
    *   Change the name used to access this attr in the API from what
    *   is used in the GraphDef.  Note that these names in `backticks`
    *   will also be replaced in the summary &amp; description fields.
    * @param defaultValue
    *   Specify a new default value to use for this attr.  This default
    *   will be used when creating new graphs, as opposed to the
    *   default in the OpDef, which will be used when interpreting old
    *   GraphDefs.
    * @param description
    *   Note: this will replace any inherited attr doc, there is no current
    *   way of modifying attr descriptions as can be done with op descriptions.
    */
  @SerialVersionUID(0L)
  final case class Attr(
                         name: _root_.scala.Predef.String = "",
                         renameTo: _root_.scala.Predef.String = "",
                         defaultValue: _root_.scala.Option[AttrValue] = _root_.scala.None,
                         description: _root_.scala.Predef.String = "",
                         unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Attr] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = name
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = renameTo
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        if (defaultValue.isDefined) {
          val __value = defaultValue.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        
        {
          val __value = description
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = name
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = renameTo
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        defaultValue.foreach { __v =>
          val __m = __v
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        {
          val __v = description
          if (!__v.isEmpty) {
            _output__.writeString(4, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withName(__v: _root_.scala.Predef.String): Attr = copy(name = __v)
      def withRenameTo(__v: _root_.scala.Predef.String): Attr = copy(renameTo = __v)
      def getDefaultValue: AttrValue = defaultValue.getOrElse(attr_value.AttrValue.defaultInstance)
      def clearDefaultValue: Attr = copy(defaultValue = _root_.scala.None)
      def withDefaultValue(__v: AttrValue): Attr = copy(defaultValue = Option(__v))
      def withDescription(__v: _root_.scala.Predef.String): Attr = copy(description = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = name
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = renameTo
            if (__t != "") __t else null
          }
          case 3 => defaultValue.orNull
          case 4 => {
            val __t = description
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(name)
          case 2 => _root_.scalapb.descriptors.PString(renameTo)
          case 3 => defaultValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          case 4 => _root_.scalapb.descriptors.PString(description)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: ApiDef.Attr.type = api_def.ApiDef.Attr
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.ApiDef.Attr])
  }
  
  object Attr extends scalapb.GeneratedMessageCompanion[ApiDef.Attr] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ApiDef.Attr] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ApiDef.Attr = {
      var __name: _root_.scala.Predef.String = ""
      var __renameTo: _root_.scala.Predef.String = ""
      var __defaultValue: _root_.scala.Option[AttrValue] = _root_.scala.None
      var __description: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = _input__.readStringRequireUtf8()
          case 18 =>
            __renameTo = _input__.readStringRequireUtf8()
          case 26 =>
            __defaultValue = _root_.scala.Option(__defaultValue.fold(_root_.scalapb.LiteParser.readMessage[AttrValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case 34 =>
            __description = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      api_def.ApiDef.Attr(
          name = __name,
          renameTo = __renameTo,
          defaultValue = __defaultValue,
          description = __description,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[ApiDef.Attr] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        api_def.ApiDef.Attr(
          name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          renameTo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          defaultValue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[AttrValue]]),
          description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = api_def.ApiDef.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = api_def.ApiDef.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
      var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
      (__number: @_root_.scala.unchecked) match {
        case 3 => __out = attr_value.AttrValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = api_def.ApiDef.Attr(
      name = "",
      renameTo = "",
      defaultValue = _root_.scala.None,
      description = ""
    )
    implicit class AttrLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ApiDef.Attr]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ApiDef.Attr](_l) {
      def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
      def renameTo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.renameTo)((c_, f_) => c_.copy(renameTo = f_))
      def defaultValue: _root_.scalapb.lenses.Lens[UpperPB, AttrValue] = field(_.getDefaultValue)((c_, f_) => c_.copy(defaultValue = _root_.scala.Option(f_)))
      def optionalDefaultValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[AttrValue]] = field(_.defaultValue)((c_, f_) => c_.copy(defaultValue = f_))
      def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    }
    final val NAME_FIELD_NUMBER = 1
    final val RENAME_TO_FIELD_NUMBER = 2
    final val DEFAULT_VALUE_FIELD_NUMBER = 3
    final val DESCRIPTION_FIELD_NUMBER = 4
    def of(
            name: _root_.scala.Predef.String,
            renameTo: _root_.scala.Predef.String,
            defaultValue: _root_.scala.Option[AttrValue],
            description: _root_.scala.Predef.String
    ): ApiDef.Attr = api_def.ApiDef.Attr(
      name,
      renameTo,
      defaultValue,
      description
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.ApiDef.Attr])
  }
  
  implicit class ApiDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ApiDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ApiDef](_l) {
    def graphOpName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.graphOpName)((c_, f_) => c_.copy(graphOpName = f_))
    def deprecationMessage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.deprecationMessage)((c_, f_) => c_.copy(deprecationMessage = f_))
    def deprecationVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.deprecationVersion)((c_, f_) => c_.copy(deprecationVersion = f_))
    def visibility: _root_.scalapb.lenses.Lens[UpperPB, ApiDef.Visibility] = field(_.visibility)((c_, f_) => c_.copy(visibility = f_))
    def endpoint: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ApiDef.Endpoint]] = field(_.endpoint)((c_, f_) => c_.copy(endpoint = f_))
    def inArg: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ApiDef.Arg]] = field(_.inArg)((c_, f_) => c_.copy(inArg = f_))
    def outArg: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ApiDef.Arg]] = field(_.outArg)((c_, f_) => c_.copy(outArg = f_))
    def argOrder: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.argOrder)((c_, f_) => c_.copy(argOrder = f_))
    def attr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ApiDef.Attr]] = field(_.attr)((c_, f_) => c_.copy(attr = f_))
    def summary: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.summary)((c_, f_) => c_.copy(summary = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def descriptionPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.descriptionPrefix)((c_, f_) => c_.copy(descriptionPrefix = f_))
    def descriptionSuffix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.descriptionSuffix)((c_, f_) => c_.copy(descriptionSuffix = f_))
  }
  final val GRAPH_OP_NAME_FIELD_NUMBER = 1
  final val DEPRECATION_MESSAGE_FIELD_NUMBER = 12
  final val DEPRECATION_VERSION_FIELD_NUMBER = 13
  final val VISIBILITY_FIELD_NUMBER = 2
  final val ENDPOINT_FIELD_NUMBER = 3
  final val IN_ARG_FIELD_NUMBER = 4
  final val OUT_ARG_FIELD_NUMBER = 5
  final val ARG_ORDER_FIELD_NUMBER = 11
  final val ATTR_FIELD_NUMBER = 6
  final val SUMMARY_FIELD_NUMBER = 7
  final val DESCRIPTION_FIELD_NUMBER = 8
  final val DESCRIPTION_PREFIX_FIELD_NUMBER = 9
  final val DESCRIPTION_SUFFIX_FIELD_NUMBER = 10
  def of(
          graphOpName: _root_.scala.Predef.String,
          deprecationMessage: _root_.scala.Predef.String,
          deprecationVersion: _root_.scala.Int,
          visibility: ApiDef.Visibility,
          endpoint: _root_.scala.Seq[ApiDef.Endpoint],
          inArg: _root_.scala.Seq[ApiDef.Arg],
          outArg: _root_.scala.Seq[ApiDef.Arg],
          argOrder: _root_.scala.Seq[_root_.scala.Predef.String],
          attr: _root_.scala.Seq[ApiDef.Attr],
          summary: _root_.scala.Predef.String,
          description: _root_.scala.Predef.String,
          descriptionPrefix: _root_.scala.Predef.String,
          descriptionSuffix: _root_.scala.Predef.String
  ): ApiDef = ApiDef(
    graphOpName,
    deprecationMessage,
    deprecationVersion,
    visibility,
    endpoint,
    inArg,
    outArg,
    argOrder,
    attr,
    summary,
    description,
    descriptionPrefix,
    descriptionSuffix
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.ApiDef])
}
