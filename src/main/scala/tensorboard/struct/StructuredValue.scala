// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorboard.struct

import tensorflow.framework.tensor.TensorProto
import tensorflow.framework.tensor_shape.TensorShapeProto
import tensorflow.framework.types.DataType
import tensorflow.framework.{tensor, tensor_shape, types}

/** `StructuredValue` represents a dynamically typed value representing various
  * data structures that are inspired by Python data structures typically used in
  * TensorFlow functions as inputs and outputs.
  *
  * For example when saving a Layer there may be a `training` argument. If the
  * user passes a boolean True/False, that switches between two concrete
  * TensorFlow functions. In order to switch between them in the same way after
  * loading the SavedModel, we need to represent "True" and "False".
  *
  * A more advanced example might be a function which takes a list of
  * dictionaries mapping from strings to Tensors. In order to map from
  * user-specified arguments `[{"a": tf.constant(1.)}, {"q": tf.constant(3.)}]`
  * after load to the right saved TensorFlow function, we need to represent the
  * nested structure and the strings, recording that we have a trace for anything
  * matching `[{"a": tf.TensorSpec(None, tf.float32)}, {"q": tf.TensorSpec([],
  * tf.float64)}]` as an example.
  *
  * Likewise functions may return nested structures of Tensors, for example
  * returning a dictionary mapping from strings to Tensors. In order for the
  * loaded function to return the same structure we need to serialize it.
  *
  * This is an ergonomic aid for working with loaded SavedModels, not a promise
  * to serialize all possible function signatures. For example we do not expect
  * to pickle generic Python objects, and ideally we'd stay language-agnostic.
  */
@SerialVersionUID(0L)
final case class StructuredValue(
    kind: tensorboard.struct.StructuredValue.Kind = tensorboard.struct.StructuredValue.Kind.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[StructuredValue] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (kind.noneValue.isDefined) {
        val __value = kind.noneValue.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.float64Value.isDefined) {
        val __value = kind.float64Value.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(11, __value)
      };
      if (kind.int64Value.isDefined) {
        val __value = kind.int64Value.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeSInt64Size(12, __value)
      };
      if (kind.stringValue.isDefined) {
        val __value = kind.stringValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
      };
      if (kind.boolValue.isDefined) {
        val __value = kind.boolValue.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(14, __value)
      };
      if (kind.tensorShapeValue.isDefined) {
        val __value = kind.tensorShapeValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.tensorDtypeValue.isDefined) {
        val __value = kind.tensorDtypeValue.get.value
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(32, __value)
      };
      if (kind.tensorSpecValue.isDefined) {
        val __value = kind.tensorSpecValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.typeSpecValue.isDefined) {
        val __value = kind.typeSpecValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.boundedTensorSpecValue.isDefined) {
        val __value = kind.boundedTensorSpecValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.listValue.isDefined) {
        val __value = kind.listValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.tupleValue.isDefined) {
        val __value = kind.tupleValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.dictValue.isDefined) {
        val __value = kind.dictValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.namedTupleValue.isDefined) {
        val __value = kind.namedTupleValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.tensorValue.isDefined) {
        val __value = kind.tensorValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (kind.numpyValue.isDefined) {
        val __value = kind.numpyValue.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      kind.noneValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.float64Value.foreach { __v =>
        val __m = __v
        _output__.writeDouble(11, __m)
      };
      kind.int64Value.foreach { __v =>
        val __m = __v
        _output__.writeSInt64(12, __m)
      };
      kind.stringValue.foreach { __v =>
        val __m = __v
        _output__.writeString(13, __m)
      };
      kind.boolValue.foreach { __v =>
        val __m = __v
        _output__.writeBool(14, __m)
      };
      kind.tensorShapeValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(31, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.tensorDtypeValue.foreach { __v =>
        val __m = __v.value
        _output__.writeEnum(32, __m)
      };
      kind.tensorSpecValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(33, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.typeSpecValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(34, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.boundedTensorSpecValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(35, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.listValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(51, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.tupleValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(52, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.dictValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(53, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.namedTupleValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(54, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.tensorValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(55, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      kind.numpyValue.foreach { __v =>
        val __m = __v
        _output__.writeTag(56, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getNoneValue: tensorboard.struct.NoneValue = kind.noneValue.getOrElse(tensorboard.struct.NoneValue.defaultInstance)
    def withNoneValue(__v: tensorboard.struct.NoneValue): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.NoneValue(__v))
    def getFloat64Value: _root_.scala.Double = kind.float64Value.getOrElse(0.0)
    def withFloat64Value(__v: _root_.scala.Double): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.Float64Value(__v))
    def getInt64Value: _root_.scala.Long = kind.int64Value.getOrElse(0L)
    def withInt64Value(__v: _root_.scala.Long): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.Int64Value(__v))
    def getStringValue: _root_.scala.Predef.String = kind.stringValue.getOrElse("")
    def withStringValue(__v: _root_.scala.Predef.String): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.StringValue(__v))
    def getBoolValue: _root_.scala.Boolean = kind.boolValue.getOrElse(false)
    def withBoolValue(__v: _root_.scala.Boolean): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.BoolValue(__v))
    def getTensorShapeValue: TensorShapeProto = kind.tensorShapeValue.getOrElse(tensor_shape.TensorShapeProto.defaultInstance)
    def withTensorShapeValue(__v: TensorShapeProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TensorShapeValue(__v))
    def getTensorDtypeValue: DataType = kind.tensorDtypeValue.getOrElse(types.DataType.DT_INVALID)
    def withTensorDtypeValue(__v: DataType): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TensorDtypeValue(__v))
    def getTensorSpecValue: tensorboard.struct.TensorSpecProto = kind.tensorSpecValue.getOrElse(tensorboard.struct.TensorSpecProto.defaultInstance)
    def withTensorSpecValue(__v: tensorboard.struct.TensorSpecProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TensorSpecValue(__v))
    def getTypeSpecValue: tensorboard.struct.TypeSpecProto = kind.typeSpecValue.getOrElse(tensorboard.struct.TypeSpecProto.defaultInstance)
    def withTypeSpecValue(__v: tensorboard.struct.TypeSpecProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TypeSpecValue(__v))
    def getBoundedTensorSpecValue: tensorboard.struct.BoundedTensorSpecProto = kind.boundedTensorSpecValue.getOrElse(tensorboard.struct.BoundedTensorSpecProto.defaultInstance)
    def withBoundedTensorSpecValue(__v: tensorboard.struct.BoundedTensorSpecProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.BoundedTensorSpecValue(__v))
    def getListValue: tensorboard.struct.ListValue = kind.listValue.getOrElse(tensorboard.struct.ListValue.defaultInstance)
    def withListValue(__v: tensorboard.struct.ListValue): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.ListValue(__v))
    def getTupleValue: tensorboard.struct.TupleValue = kind.tupleValue.getOrElse(tensorboard.struct.TupleValue.defaultInstance)
    def withTupleValue(__v: tensorboard.struct.TupleValue): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TupleValue(__v))
    def getDictValue: tensorboard.struct.DictValue = kind.dictValue.getOrElse(tensorboard.struct.DictValue.defaultInstance)
    def withDictValue(__v: tensorboard.struct.DictValue): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.DictValue(__v))
    def getNamedTupleValue: tensorboard.struct.NamedTupleValue = kind.namedTupleValue.getOrElse(tensorboard.struct.NamedTupleValue.defaultInstance)
    def withNamedTupleValue(__v: tensorboard.struct.NamedTupleValue): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.NamedTupleValue(__v))
    def getTensorValue: TensorProto = kind.tensorValue.getOrElse(tensor.TensorProto.defaultInstance)
    def withTensorValue(__v: TensorProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.TensorValue(__v))
    def getNumpyValue: TensorProto = kind.numpyValue.getOrElse(tensor.TensorProto.defaultInstance)
    def withNumpyValue(__v: TensorProto): StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.NumpyValue(__v))
    def clearKind: StructuredValue = copy(kind = tensorboard.struct.StructuredValue.Kind.Empty)
    def withKind(__v: tensorboard.struct.StructuredValue.Kind): StructuredValue = copy(kind = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => kind.noneValue.orNull
        case 11 => kind.float64Value.orNull
        case 12 => kind.int64Value.orNull
        case 13 => kind.stringValue.orNull
        case 14 => kind.boolValue.orNull
        case 31 => kind.tensorShapeValue.orNull
        case 32 => kind.tensorDtypeValue.map(_.javaValueDescriptor).orNull
        case 33 => kind.tensorSpecValue.orNull
        case 34 => kind.typeSpecValue.orNull
        case 35 => kind.boundedTensorSpecValue.orNull
        case 51 => kind.listValue.orNull
        case 52 => kind.tupleValue.orNull
        case 53 => kind.dictValue.orNull
        case 54 => kind.namedTupleValue.orNull
        case 55 => kind.tensorValue.orNull
        case 56 => kind.numpyValue.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => kind.noneValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => kind.float64Value.map(_root_.scalapb.descriptors.PDouble(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 12 => kind.int64Value.map(_root_.scalapb.descriptors.PLong(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 13 => kind.stringValue.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 14 => kind.boolValue.map(_root_.scalapb.descriptors.PBoolean(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 31 => kind.tensorShapeValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 32 => kind.tensorDtypeValue.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 33 => kind.tensorSpecValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 34 => kind.typeSpecValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 35 => kind.boundedTensorSpecValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 51 => kind.listValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 52 => kind.tupleValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 53 => kind.dictValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 54 => kind.namedTupleValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 55 => kind.tensorValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 56 => kind.numpyValue.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tensorboard.struct.StructuredValue.type = tensorboard.struct.StructuredValue
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.StructuredValue])
}

object StructuredValue extends scalapb.GeneratedMessageCompanion[tensorboard.struct.StructuredValue] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tensorboard.struct.StructuredValue] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tensorboard.struct.StructuredValue = {
    var __kind: tensorboard.struct.StructuredValue.Kind = tensorboard.struct.StructuredValue.Kind.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __kind = tensorboard.struct.StructuredValue.Kind.NoneValue(__kind.noneValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.NoneValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 89 =>
          __kind = tensorboard.struct.StructuredValue.Kind.Float64Value(_input__.readDouble())
        case 96 =>
          __kind = tensorboard.struct.StructuredValue.Kind.Int64Value(_input__.readSInt64())
        case 106 =>
          __kind = tensorboard.struct.StructuredValue.Kind.StringValue(_input__.readStringRequireUtf8())
        case 112 =>
          __kind = tensorboard.struct.StructuredValue.Kind.BoolValue(_input__.readBool())
        case 250 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TensorShapeValue(__kind.tensorShapeValue.fold(_root_.scalapb.LiteParser.readMessage[TensorShapeProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 256 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TensorDtypeValue(DataType.fromValue(_input__.readEnum()))
        case 266 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TensorSpecValue(__kind.tensorSpecValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.TensorSpecProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 274 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TypeSpecValue(__kind.typeSpecValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.TypeSpecProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 282 =>
          __kind = tensorboard.struct.StructuredValue.Kind.BoundedTensorSpecValue(__kind.boundedTensorSpecValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.BoundedTensorSpecProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 410 =>
          __kind = tensorboard.struct.StructuredValue.Kind.ListValue(__kind.listValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.ListValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 418 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TupleValue(__kind.tupleValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.TupleValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 426 =>
          __kind = tensorboard.struct.StructuredValue.Kind.DictValue(__kind.dictValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.DictValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 434 =>
          __kind = tensorboard.struct.StructuredValue.Kind.NamedTupleValue(__kind.namedTupleValue.fold(_root_.scalapb.LiteParser.readMessage[tensorboard.struct.NamedTupleValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 442 =>
          __kind = tensorboard.struct.StructuredValue.Kind.TensorValue(__kind.tensorValue.fold(_root_.scalapb.LiteParser.readMessage[TensorProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 450 =>
          __kind = tensorboard.struct.StructuredValue.Kind.NumpyValue(__kind.numpyValue.fold(_root_.scalapb.LiteParser.readMessage[TensorProto](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tensorboard.struct.StructuredValue(
        kind = __kind,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tensorboard.struct.StructuredValue] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tensorboard.struct.StructuredValue(
        kind = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.NoneValue]]).map(tensorboard.struct.StructuredValue.Kind.NoneValue(_))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Double]]).map(tensorboard.struct.StructuredValue.Kind.Float64Value(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Long]]).map(tensorboard.struct.StructuredValue.Kind.Int64Value(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(tensorboard.struct.StructuredValue.Kind.StringValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]).map(tensorboard.struct.StructuredValue.Kind.BoolValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[_root_.scala.Option[TensorShapeProto]]).map(tensorboard.struct.StructuredValue.Kind.TensorShapeValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(32).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => tensorboard.struct.StructuredValue.Kind.TensorDtypeValue(types.DataType.fromValue(__e.number))))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(33).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.TensorSpecProto]]).map(tensorboard.struct.StructuredValue.Kind.TensorSpecValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(34).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.TypeSpecProto]]).map(tensorboard.struct.StructuredValue.Kind.TypeSpecValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(35).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.BoundedTensorSpecProto]]).map(tensorboard.struct.StructuredValue.Kind.BoundedTensorSpecValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(51).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.ListValue]]).map(tensorboard.struct.StructuredValue.Kind.ListValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(52).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.TupleValue]]).map(tensorboard.struct.StructuredValue.Kind.TupleValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(53).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.DictValue]]).map(tensorboard.struct.StructuredValue.Kind.DictValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(54).get).flatMap(_.as[_root_.scala.Option[tensorboard.struct.NamedTupleValue]]).map(tensorboard.struct.StructuredValue.Kind.NamedTupleValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(55).get).flatMap(_.as[_root_.scala.Option[TensorProto]]).map(tensorboard.struct.StructuredValue.Kind.TensorValue(_)))
            .orElse[tensorboard.struct.StructuredValue.Kind](__fieldsMap.get(scalaDescriptor.findFieldByNumber(56).get).flatMap(_.as[_root_.scala.Option[TensorProto]]).map(tensorboard.struct.StructuredValue.Kind.NumpyValue(_)))
            .getOrElse(tensorboard.struct.StructuredValue.Kind.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tensorboard.struct.StructProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tensorboard.struct.StructProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = tensorboard.struct.NoneValue
      case 31 => __out = tensor_shape.TensorShapeProto
      case 33 => __out = tensorboard.struct.TensorSpecProto
      case 34 => __out = tensorboard.struct.TypeSpecProto
      case 35 => __out = tensorboard.struct.BoundedTensorSpecProto
      case 51 => __out = tensorboard.struct.ListValue
      case 52 => __out = tensorboard.struct.TupleValue
      case 53 => __out = tensorboard.struct.DictValue
      case 54 => __out = tensorboard.struct.NamedTupleValue
      case 55 => __out = tensor.TensorProto
      case 56 => __out = tensor.TensorProto
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 32 => types.DataType
    }
  }
  lazy val defaultInstance = tensorboard.struct.StructuredValue(
    kind = tensorboard.struct.StructuredValue.Kind.Empty
  )
  sealed abstract class Kind extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isNoneValue: _root_.scala.Boolean = false
    def isFloat64Value: _root_.scala.Boolean = false
    def isInt64Value: _root_.scala.Boolean = false
    def isStringValue: _root_.scala.Boolean = false
    def isBoolValue: _root_.scala.Boolean = false
    def isTensorShapeValue: _root_.scala.Boolean = false
    def isTensorDtypeValue: _root_.scala.Boolean = false
    def isTensorSpecValue: _root_.scala.Boolean = false
    def isTypeSpecValue: _root_.scala.Boolean = false
    def isBoundedTensorSpecValue: _root_.scala.Boolean = false
    def isListValue: _root_.scala.Boolean = false
    def isTupleValue: _root_.scala.Boolean = false
    def isDictValue: _root_.scala.Boolean = false
    def isNamedTupleValue: _root_.scala.Boolean = false
    def isTensorValue: _root_.scala.Boolean = false
    def isNumpyValue: _root_.scala.Boolean = false
    def noneValue: _root_.scala.Option[tensorboard.struct.NoneValue] = _root_.scala.None
    def float64Value: _root_.scala.Option[_root_.scala.Double] = _root_.scala.None
    def int64Value: _root_.scala.Option[_root_.scala.Long] = _root_.scala.None
    def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
    def boolValue: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    def tensorShapeValue: _root_.scala.Option[TensorShapeProto] = _root_.scala.None
    def tensorDtypeValue: _root_.scala.Option[DataType] = _root_.scala.None
    def tensorSpecValue: _root_.scala.Option[tensorboard.struct.TensorSpecProto] = _root_.scala.None
    def typeSpecValue: _root_.scala.Option[tensorboard.struct.TypeSpecProto] = _root_.scala.None
    def boundedTensorSpecValue: _root_.scala.Option[tensorboard.struct.BoundedTensorSpecProto] = _root_.scala.None
    def listValue: _root_.scala.Option[tensorboard.struct.ListValue] = _root_.scala.None
    def tupleValue: _root_.scala.Option[tensorboard.struct.TupleValue] = _root_.scala.None
    def dictValue: _root_.scala.Option[tensorboard.struct.DictValue] = _root_.scala.None
    def namedTupleValue: _root_.scala.Option[tensorboard.struct.NamedTupleValue] = _root_.scala.None
    def tensorValue: _root_.scala.Option[TensorProto] = _root_.scala.None
    def numpyValue: _root_.scala.Option[TensorProto] = _root_.scala.None
  }
  object Kind {
    @SerialVersionUID(0L)
    case object Empty extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class NoneValue(value: tensorboard.struct.NoneValue) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.NoneValue
      override def isNoneValue: _root_.scala.Boolean = true
      override def noneValue: _root_.scala.Option[tensorboard.struct.NoneValue] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Float64Value(value: _root_.scala.Double) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = _root_.scala.Double
      override def isFloat64Value: _root_.scala.Boolean = true
      override def float64Value: _root_.scala.Option[_root_.scala.Double] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class Int64Value(value: _root_.scala.Long) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = _root_.scala.Long
      override def isInt64Value: _root_.scala.Boolean = true
      override def int64Value: _root_.scala.Option[_root_.scala.Long] = Some(value)
      override def number: _root_.scala.Int = 12
    }
    @SerialVersionUID(0L)
    final case class StringValue(value: _root_.scala.Predef.String) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = _root_.scala.Predef.String
      override def isStringValue: _root_.scala.Boolean = true
      override def stringValue: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 13
    }
    @SerialVersionUID(0L)
    final case class BoolValue(value: _root_.scala.Boolean) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = _root_.scala.Boolean
      override def isBoolValue: _root_.scala.Boolean = true
      override def boolValue: _root_.scala.Option[_root_.scala.Boolean] = Some(value)
      override def number: _root_.scala.Int = 14
    }
    @SerialVersionUID(0L)
    final case class TensorShapeValue(value: TensorShapeProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = TensorShapeProto
      override def isTensorShapeValue: _root_.scala.Boolean = true
      override def tensorShapeValue: _root_.scala.Option[TensorShapeProto] = Some(value)
      override def number: _root_.scala.Int = 31
    }
    @SerialVersionUID(0L)
    final case class TensorDtypeValue(value: DataType) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = DataType
      override def isTensorDtypeValue: _root_.scala.Boolean = true
      override def tensorDtypeValue: _root_.scala.Option[DataType] = Some(value)
      override def number: _root_.scala.Int = 32
    }
    @SerialVersionUID(0L)
    final case class TensorSpecValue(value: tensorboard.struct.TensorSpecProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.TensorSpecProto
      override def isTensorSpecValue: _root_.scala.Boolean = true
      override def tensorSpecValue: _root_.scala.Option[tensorboard.struct.TensorSpecProto] = Some(value)
      override def number: _root_.scala.Int = 33
    }
    @SerialVersionUID(0L)
    final case class TypeSpecValue(value: tensorboard.struct.TypeSpecProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.TypeSpecProto
      override def isTypeSpecValue: _root_.scala.Boolean = true
      override def typeSpecValue: _root_.scala.Option[tensorboard.struct.TypeSpecProto] = Some(value)
      override def number: _root_.scala.Int = 34
    }
    @SerialVersionUID(0L)
    final case class BoundedTensorSpecValue(value: tensorboard.struct.BoundedTensorSpecProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.BoundedTensorSpecProto
      override def isBoundedTensorSpecValue: _root_.scala.Boolean = true
      override def boundedTensorSpecValue: _root_.scala.Option[tensorboard.struct.BoundedTensorSpecProto] = Some(value)
      override def number: _root_.scala.Int = 35
    }
    @SerialVersionUID(0L)
    final case class ListValue(value: tensorboard.struct.ListValue) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.ListValue
      override def isListValue: _root_.scala.Boolean = true
      override def listValue: _root_.scala.Option[tensorboard.struct.ListValue] = Some(value)
      override def number: _root_.scala.Int = 51
    }
    @SerialVersionUID(0L)
    final case class TupleValue(value: tensorboard.struct.TupleValue) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.TupleValue
      override def isTupleValue: _root_.scala.Boolean = true
      override def tupleValue: _root_.scala.Option[tensorboard.struct.TupleValue] = Some(value)
      override def number: _root_.scala.Int = 52
    }
    @SerialVersionUID(0L)
    final case class DictValue(value: tensorboard.struct.DictValue) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.DictValue
      override def isDictValue: _root_.scala.Boolean = true
      override def dictValue: _root_.scala.Option[tensorboard.struct.DictValue] = Some(value)
      override def number: _root_.scala.Int = 53
    }
    @SerialVersionUID(0L)
    final case class NamedTupleValue(value: tensorboard.struct.NamedTupleValue) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = tensorboard.struct.NamedTupleValue
      override def isNamedTupleValue: _root_.scala.Boolean = true
      override def namedTupleValue: _root_.scala.Option[tensorboard.struct.NamedTupleValue] = Some(value)
      override def number: _root_.scala.Int = 54
    }
    @SerialVersionUID(0L)
    final case class TensorValue(value: TensorProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = TensorProto
      override def isTensorValue: _root_.scala.Boolean = true
      override def tensorValue: _root_.scala.Option[TensorProto] = Some(value)
      override def number: _root_.scala.Int = 55
    }
    @SerialVersionUID(0L)
    final case class NumpyValue(value: TensorProto) extends tensorboard.struct.StructuredValue.Kind {
      type ValueType = TensorProto
      override def isNumpyValue: _root_.scala.Boolean = true
      override def numpyValue: _root_.scala.Option[TensorProto] = Some(value)
      override def number: _root_.scala.Int = 56
    }
  }
  implicit class StructuredValueLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.StructuredValue]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tensorboard.struct.StructuredValue](_l) {
    def noneValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.NoneValue] = field(_.getNoneValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.NoneValue(f_)))
    def float64Value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Double] = field(_.getFloat64Value)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.Float64Value(f_)))
    def int64Value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.getInt64Value)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.Int64Value(f_)))
    def stringValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getStringValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.StringValue(f_)))
    def boolValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getBoolValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.BoolValue(f_)))
    def tensorShapeValue: _root_.scalapb.lenses.Lens[UpperPB, TensorShapeProto] = field(_.getTensorShapeValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TensorShapeValue(f_)))
    def tensorDtypeValue: _root_.scalapb.lenses.Lens[UpperPB, DataType] = field(_.getTensorDtypeValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TensorDtypeValue(f_)))
    def tensorSpecValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.TensorSpecProto] = field(_.getTensorSpecValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TensorSpecValue(f_)))
    def typeSpecValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.TypeSpecProto] = field(_.getTypeSpecValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TypeSpecValue(f_)))
    def boundedTensorSpecValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.BoundedTensorSpecProto] = field(_.getBoundedTensorSpecValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.BoundedTensorSpecValue(f_)))
    def listValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.ListValue] = field(_.getListValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.ListValue(f_)))
    def tupleValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.TupleValue] = field(_.getTupleValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TupleValue(f_)))
    def dictValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.DictValue] = field(_.getDictValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.DictValue(f_)))
    def namedTupleValue: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.NamedTupleValue] = field(_.getNamedTupleValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.NamedTupleValue(f_)))
    def tensorValue: _root_.scalapb.lenses.Lens[UpperPB, TensorProto] = field(_.getTensorValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.TensorValue(f_)))
    def numpyValue: _root_.scalapb.lenses.Lens[UpperPB, TensorProto] = field(_.getNumpyValue)((c_, f_) => c_.copy(kind = tensorboard.struct.StructuredValue.Kind.NumpyValue(f_)))
    def kind: _root_.scalapb.lenses.Lens[UpperPB, tensorboard.struct.StructuredValue.Kind] = field(_.kind)((c_, f_) => c_.copy(kind = f_))
  }
  final val NONE_VALUE_FIELD_NUMBER = 1
  final val FLOAT64_VALUE_FIELD_NUMBER = 11
  final val INT64_VALUE_FIELD_NUMBER = 12
  final val STRING_VALUE_FIELD_NUMBER = 13
  final val BOOL_VALUE_FIELD_NUMBER = 14
  final val TENSOR_SHAPE_VALUE_FIELD_NUMBER = 31
  final val TENSOR_DTYPE_VALUE_FIELD_NUMBER = 32
  final val TENSOR_SPEC_VALUE_FIELD_NUMBER = 33
  final val TYPE_SPEC_VALUE_FIELD_NUMBER = 34
  final val BOUNDED_TENSOR_SPEC_VALUE_FIELD_NUMBER = 35
  final val LIST_VALUE_FIELD_NUMBER = 51
  final val TUPLE_VALUE_FIELD_NUMBER = 52
  final val DICT_VALUE_FIELD_NUMBER = 53
  final val NAMED_TUPLE_VALUE_FIELD_NUMBER = 54
  final val TENSOR_VALUE_FIELD_NUMBER = 55
  final val NUMPY_VALUE_FIELD_NUMBER = 56
  def of(
    kind: tensorboard.struct.StructuredValue.Kind
  ): _root_.tensorboard.struct.StructuredValue = _root_.tensorboard.struct.StructuredValue(
    kind
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.StructuredValue])
}
