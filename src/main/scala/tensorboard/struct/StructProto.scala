// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package tensorboard.struct

object StructProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    org.tensorflow.framework.tensor.TensorProtoCompanion,
    org.tensorflow.framework.tensor_shape.TensorShapeProtoCompanion,
    org.tensorflow.framework.types.TypesProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      tensorboard.struct.StructuredValue,
      tensorboard.struct.NoneValue,
      tensorboard.struct.ListValue,
      tensorboard.struct.TupleValue,
      tensorboard.struct.DictValue,
      tensorboard.struct.PairValue,
      tensorboard.struct.NamedTupleValue,
      tensorboard.struct.TensorSpecProto,
      tensorboard.struct.BoundedTensorSpecProto,
      tensorboard.struct.TypeSpecProto
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiV0ZW5zb3Jib2FyZC9jb21wYXQvcHJvdG8vc3RydWN0LnByb3RvEgt0ZW5zb3Jib2FyZBoldGVuc29yYm9hcmQvY29tcGF0L
  3Byb3RvL3RlbnNvci5wcm90bxordGVuc29yYm9hcmQvY29tcGF0L3Byb3RvL3RlbnNvcl9zaGFwZS5wcm90bxokdGVuc29yYm9hc
  mQvY29tcGF0L3Byb3RvL3R5cGVzLnByb3RvIpcKCg9TdHJ1Y3R1cmVkVmFsdWUSRwoKbm9uZV92YWx1ZRgBIAEoCzIWLnRlbnNvc
  mJvYXJkLk5vbmVWYWx1ZUIO4j8LEglub25lVmFsdWVIAFIJbm9uZVZhbHVlEjgKDWZsb2F0NjRfdmFsdWUYCyABKAFCEeI/DhIMZ
  mxvYXQ2NFZhbHVlSABSDGZsb2F0NjRWYWx1ZRIyCgtpbnQ2NF92YWx1ZRgMIAEoEkIP4j8MEgppbnQ2NFZhbHVlSABSCmludDY0V
  mFsdWUSNQoMc3RyaW5nX3ZhbHVlGA0gASgJQhDiPw0SC3N0cmluZ1ZhbHVlSABSC3N0cmluZ1ZhbHVlEi8KCmJvb2xfdmFsdWUYD
  iABKAhCDuI/CxIJYm9vbFZhbHVlSABSCWJvb2xWYWx1ZRJkChJ0ZW5zb3Jfc2hhcGVfdmFsdWUYHyABKAsyHS50ZW5zb3Jib2FyZ
  C5UZW5zb3JTaGFwZVByb3RvQhXiPxISEHRlbnNvclNoYXBlVmFsdWVIAFIQdGVuc29yU2hhcGVWYWx1ZRJcChJ0ZW5zb3JfZHR5c
  GVfdmFsdWUYICABKA4yFS50ZW5zb3Jib2FyZC5EYXRhVHlwZUIV4j8SEhB0ZW5zb3JEdHlwZVZhbHVlSABSEHRlbnNvckR0eXBlV
  mFsdWUSYAoRdGVuc29yX3NwZWNfdmFsdWUYISABKAsyHC50ZW5zb3Jib2FyZC5UZW5zb3JTcGVjUHJvdG9CFOI/ERIPdGVuc29yU
  3BlY1ZhbHVlSABSD3RlbnNvclNwZWNWYWx1ZRJYCg90eXBlX3NwZWNfdmFsdWUYIiABKAsyGi50ZW5zb3Jib2FyZC5UeXBlU3BlY
  1Byb3RvQhLiPw8SDXR5cGVTcGVjVmFsdWVIAFINdHlwZVNwZWNWYWx1ZRJ9Chlib3VuZGVkX3RlbnNvcl9zcGVjX3ZhbHVlGCMgA
  SgLMiMudGVuc29yYm9hcmQuQm91bmRlZFRlbnNvclNwZWNQcm90b0Ib4j8YEhZib3VuZGVkVGVuc29yU3BlY1ZhbHVlSABSFmJvd
  W5kZWRUZW5zb3JTcGVjVmFsdWUSRwoKbGlzdF92YWx1ZRgzIAEoCzIWLnRlbnNvcmJvYXJkLkxpc3RWYWx1ZUIO4j8LEglsaXN0V
  mFsdWVIAFIJbGlzdFZhbHVlEksKC3R1cGxlX3ZhbHVlGDQgASgLMhcudGVuc29yYm9hcmQuVHVwbGVWYWx1ZUIP4j8MEgp0dXBsZ
  VZhbHVlSABSCnR1cGxlVmFsdWUSRwoKZGljdF92YWx1ZRg1IAEoCzIWLnRlbnNvcmJvYXJkLkRpY3RWYWx1ZUIO4j8LEglkaWN0V
  mFsdWVIAFIJZGljdFZhbHVlEmAKEW5hbWVkX3R1cGxlX3ZhbHVlGDYgASgLMhwudGVuc29yYm9hcmQuTmFtZWRUdXBsZVZhbHVlQ
  hTiPxESD25hbWVkVHVwbGVWYWx1ZUgAUg9uYW1lZFR1cGxlVmFsdWUSTwoMdGVuc29yX3ZhbHVlGDcgASgLMhgudGVuc29yYm9hc
  mQuVGVuc29yUHJvdG9CEOI/DRILdGVuc29yVmFsdWVIAFILdGVuc29yVmFsdWUSTAoLbnVtcHlfdmFsdWUYOCABKAsyGC50ZW5zb
  3Jib2FyZC5UZW5zb3JQcm90b0IP4j8MEgpudW1weVZhbHVlSABSCm51bXB5VmFsdWVCBgoEa2luZCILCglOb25lVmFsdWUiTgoJT
  GlzdFZhbHVlEkEKBnZhbHVlcxgBIAMoCzIcLnRlbnNvcmJvYXJkLlN0cnVjdHVyZWRWYWx1ZUIL4j8IEgZ2YWx1ZXNSBnZhbHVlc
  yJPCgpUdXBsZVZhbHVlEkEKBnZhbHVlcxgBIAMoCzIcLnRlbnNvcmJvYXJkLlN0cnVjdHVyZWRWYWx1ZUIL4j8IEgZ2YWx1ZXNSB
  nZhbHVlcyLDAQoJRGljdFZhbHVlEkcKBmZpZWxkcxgBIAMoCzIiLnRlbnNvcmJvYXJkLkRpY3RWYWx1ZS5GaWVsZHNFbnRyeUIL4
  j8IEgZmaWVsZHNSBmZpZWxkcxptCgtGaWVsZHNFbnRyeRIaCgNrZXkYASABKAlCCOI/BRIDa2V5UgNrZXkSPgoFdmFsdWUYAiABK
  AsyHC50ZW5zb3Jib2FyZC5TdHJ1Y3R1cmVkVmFsdWVCCuI/BxIFdmFsdWVSBXZhbHVlOgI4ASJnCglQYWlyVmFsdWUSGgoDa2V5G
  AEgASgJQgjiPwUSA2tleVIDa2V5Ej4KBXZhbHVlGAIgASgLMhwudGVuc29yYm9hcmQuU3RydWN0dXJlZFZhbHVlQgriPwcSBXZhb
  HVlUgV2YWx1ZSJtCg9OYW1lZFR1cGxlVmFsdWUSHQoEbmFtZRgBIAEoCUIJ4j8GEgRuYW1lUgRuYW1lEjsKBnZhbHVlcxgCIAMoC
  zIWLnRlbnNvcmJvYXJkLlBhaXJWYWx1ZUIL4j8IEgZ2YWx1ZXNSBnZhbHVlcyKqAQoPVGVuc29yU3BlY1Byb3RvEh0KBG5hbWUYA
  SABKAlCCeI/BhIEbmFtZVIEbmFtZRI/CgVzaGFwZRgCIAEoCzIdLnRlbnNvcmJvYXJkLlRlbnNvclNoYXBlUHJvdG9CCuI/BxIFc
  2hhcGVSBXNoYXBlEjcKBWR0eXBlGAMgASgOMhUudGVuc29yYm9hcmQuRGF0YVR5cGVCCuI/BxIFZHR5cGVSBWR0eXBlIrUCChZCb
  3VuZGVkVGVuc29yU3BlY1Byb3RvEh0KBG5hbWUYASABKAlCCeI/BhIEbmFtZVIEbmFtZRI/CgVzaGFwZRgCIAEoCzIdLnRlbnNvc
  mJvYXJkLlRlbnNvclNoYXBlUHJvdG9CCuI/BxIFc2hhcGVSBXNoYXBlEjcKBWR0eXBlGAMgASgOMhUudGVuc29yYm9hcmQuRGF0Y
  VR5cGVCCuI/BxIFZHR5cGVSBWR0eXBlEkAKB21pbmltdW0YBCABKAsyGC50ZW5zb3Jib2FyZC5UZW5zb3JQcm90b0IM4j8JEgdta
  W5pbXVtUgdtaW5pbXVtEkAKB21heGltdW0YBSABKAsyGC50ZW5zb3Jib2FyZC5UZW5zb3JQcm90b0IM4j8JEgdtYXhpbXVtUgdtY
  XhpbXVtIr4HCg1UeXBlU3BlY1Byb3RvEmQKD3R5cGVfc3BlY19jbGFzcxgBIAEoDjIoLnRlbnNvcmJvYXJkLlR5cGVTcGVjUHJvd
  G8uVHlwZVNwZWNDbGFzc0IS4j8PEg10eXBlU3BlY0NsYXNzUg10eXBlU3BlY0NsYXNzEksKCnR5cGVfc3RhdGUYAiABKAsyHC50Z
  W5zb3Jib2FyZC5TdHJ1Y3R1cmVkVmFsdWVCDuI/CxIJdHlwZVN0YXRlUgl0eXBlU3RhdGUSRwoUdHlwZV9zcGVjX2NsYXNzX25hb
  WUYAyABKAlCFuI/ExIRdHlwZVNwZWNDbGFzc05hbWVSEXR5cGVTcGVjQ2xhc3NOYW1lEkYKE251bV9mbGF0X2NvbXBvbmVudHMYB
  CABKAVCFuI/ExIRbnVtRmxhdENvbXBvbmVudHNSEW51bUZsYXRDb21wb25lbnRzIugECg1UeXBlU3BlY0NsYXNzEhkKB1VOS05PV
  04QABoM4j8JEgdVTktOT1dOEi8KElNQQVJTRV9URU5TT1JfU1BFQxABGhfiPxQSElNQQVJTRV9URU5TT1JfU1BFQxIxChNJTkRFW
  EVEX1NMSUNFU19TUEVDEAIaGOI/FRITSU5ERVhFRF9TTElDRVNfU1BFQxIvChJSQUdHRURfVEVOU09SX1NQRUMQAxoX4j8UEhJSQ
  UdHRURfVEVOU09SX1NQRUMSLQoRVEVOU09SX0FSUkFZX1NQRUMQBBoW4j8TEhFURU5TT1JfQVJSQVlfU1BFQxItChFEQVRBX0RBV
  EFTRVRfU1BFQxAFGhbiPxMSEURBVEFfREFUQVNFVF9TUEVDEi8KEkRBVEFfSVRFUkFUT1JfU1BFQxAGGhfiPxQSEkRBVEFfSVRFU
  kFUT1JfU1BFQxIlCg1PUFRJT05BTF9TUEVDEAcaEuI/DxINT1BUSU9OQUxfU1BFQxIrChBQRVJfUkVQTElDQV9TUEVDEAgaFeI/E
  hIQUEVSX1JFUExJQ0FfU1BFQxIlCg1WQVJJQUJMRV9TUEVDEAkaEuI/DxINVkFSSUFCTEVfU1BFQxIvChJST1dfUEFSVElUSU9OX
  1NQRUMQChoX4j8UEhJST1dfUEFSVElUSU9OX1NQRUMSMwoUUkVHSVNURVJFRF9UWVBFX1NQRUMQDBoZ4j8WEhRSRUdJU1RFUkVEX
  1RZUEVfU1BFQxIxChNFWFRFTlNJT05fVFlQRV9TUEVDEA0aGOI/FRITRVhURU5TSU9OX1RZUEVfU1BFQyIECAsQC0JXWlVnaXRod
  WIuY29tL3RlbnNvcmZsb3cvdGVuc29yZmxvdy90ZW5zb3JmbG93L2dvL2NvcmUvcHJvdG9idWYvZm9yX2NvcmVfcHJvdG9zX2dvX
  3Byb3RvYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      org.tensorflow.framework.tensor.TensorProtoCompanion.javaDescriptor,
      org.tensorflow.framework.tensor_shape.TensorShapeProtoCompanion.javaDescriptor,
      org.tensorflow.framework.types.TypesProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}