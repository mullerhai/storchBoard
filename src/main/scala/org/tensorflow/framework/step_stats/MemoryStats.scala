// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.step_stats

/** For memory tracking.
  */
@SerialVersionUID(0L)
final case class MemoryStats(
    tempMemorySize: _root_.scala.Long = 0L,
    persistentMemorySize: _root_.scala.Long = 0L,
    persistentTensorAllocIds: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    @scala.deprecated(message="Marked as deprecated in proto file", "") deviceTempMemorySize: _root_.scala.Long = 0L,
    @scala.deprecated(message="Marked as deprecated in proto file", "") devicePersistentMemorySize: _root_.scala.Long = 0L,
    @scala.deprecated(message="Marked as deprecated in proto file", "") devicePersistentTensorAllocIds: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MemoryStats] {
    private[this] def persistentTensorAllocIdsSerializedSize = {
      if (__persistentTensorAllocIdsSerializedSizeField == 0) __persistentTensorAllocIdsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        persistentTensorAllocIds.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __persistentTensorAllocIdsSerializedSizeField
    }
    @transient private[this] var __persistentTensorAllocIdsSerializedSizeField: _root_.scala.Int = 0
    private[this] def devicePersistentTensorAllocIdsSerializedSize = {
      if (__devicePersistentTensorAllocIdsSerializedSizeField == 0) __devicePersistentTensorAllocIdsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        devicePersistentTensorAllocIds.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __devicePersistentTensorAllocIdsSerializedSizeField
    }
    @transient private[this] var __devicePersistentTensorAllocIdsSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = tempMemorySize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(1, __value)
        }
      };
      
      {
        val __value = persistentMemorySize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      if (persistentTensorAllocIds.nonEmpty) {
        val __localsize = persistentTensorAllocIdsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      
      {
        val __value = deviceTempMemorySize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = devicePersistentMemorySize
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      if (devicePersistentTensorAllocIds.nonEmpty) {
        val __localsize = devicePersistentTensorAllocIdsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = tempMemorySize
        if (__v != 0L) {
          _output__.writeInt64(1, __v)
        }
      };
      {
        val __v = deviceTempMemorySize
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = persistentMemorySize
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = devicePersistentMemorySize
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      if (persistentTensorAllocIds.nonEmpty) {
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(persistentTensorAllocIdsSerializedSize)
        persistentTensorAllocIds.foreach(_output__.writeInt64NoTag)
      };
      if (devicePersistentTensorAllocIds.nonEmpty) {
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(devicePersistentTensorAllocIdsSerializedSize)
        devicePersistentTensorAllocIds.foreach(_output__.writeInt64NoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def withTempMemorySize(__v: _root_.scala.Long): MemoryStats = copy(tempMemorySize = __v)
    def withPersistentMemorySize(__v: _root_.scala.Long): MemoryStats = copy(persistentMemorySize = __v)
    def clearPersistentTensorAllocIds = copy(persistentTensorAllocIds = _root_.scala.Seq.empty)
    def addPersistentTensorAllocIds(__vs: _root_.scala.Long *): MemoryStats = addAllPersistentTensorAllocIds(__vs)
    def addAllPersistentTensorAllocIds(__vs: Iterable[_root_.scala.Long]): MemoryStats = copy(persistentTensorAllocIds = persistentTensorAllocIds ++ __vs)
    def withPersistentTensorAllocIds(__v: _root_.scala.Seq[_root_.scala.Long]): MemoryStats = copy(persistentTensorAllocIds = __v)
    def withDeviceTempMemorySize(__v: _root_.scala.Long): MemoryStats = copy(deviceTempMemorySize = __v)
    def withDevicePersistentMemorySize(__v: _root_.scala.Long): MemoryStats = copy(devicePersistentMemorySize = __v)
    def clearDevicePersistentTensorAllocIds = copy(devicePersistentTensorAllocIds = _root_.scala.Seq.empty)
    def addDevicePersistentTensorAllocIds(__vs: _root_.scala.Long *): MemoryStats = addAllDevicePersistentTensorAllocIds(__vs)
    def addAllDevicePersistentTensorAllocIds(__vs: Iterable[_root_.scala.Long]): MemoryStats = copy(devicePersistentTensorAllocIds = devicePersistentTensorAllocIds ++ __vs)
    def withDevicePersistentTensorAllocIds(__v: _root_.scala.Seq[_root_.scala.Long]): MemoryStats = copy(devicePersistentTensorAllocIds = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = tempMemorySize
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = persistentMemorySize
          if (__t != 0L) __t else null
        }
        case 5 => persistentTensorAllocIds
        case 2 => {
          val __t = deviceTempMemorySize
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = devicePersistentMemorySize
          if (__t != 0L) __t else null
        }
        case 6 => devicePersistentTensorAllocIds
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(tempMemorySize)
        case 3 => _root_.scalapb.descriptors.PLong(persistentMemorySize)
        case 5 => _root_.scalapb.descriptors.PRepeated(persistentTensorAllocIds.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 2 => _root_.scalapb.descriptors.PLong(deviceTempMemorySize)
        case 4 => _root_.scalapb.descriptors.PLong(devicePersistentMemorySize)
        case 6 => _root_.scalapb.descriptors.PRepeated(devicePersistentTensorAllocIds.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: org.tensorflow.framework.step_stats.MemoryStats.type = org.tensorflow.framework.step_stats.MemoryStats
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.MemoryStats])
}

object MemoryStats extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.step_stats.MemoryStats] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.step_stats.MemoryStats] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.step_stats.MemoryStats = {
    var __tempMemorySize: _root_.scala.Long = 0L
    var __persistentMemorySize: _root_.scala.Long = 0L
    val __persistentTensorAllocIds: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    var __deviceTempMemorySize: _root_.scala.Long = 0L
    var __devicePersistentMemorySize: _root_.scala.Long = 0L
    val __devicePersistentTensorAllocIds: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __tempMemorySize = _input__.readInt64()
        case 24 =>
          __persistentMemorySize = _input__.readInt64()
        case 40 =>
          __persistentTensorAllocIds += _input__.readInt64()
        case 42 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __persistentTensorAllocIds += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 16 =>
          __deviceTempMemorySize = _input__.readInt64()
        case 32 =>
          __devicePersistentMemorySize = _input__.readInt64()
        case 48 =>
          __devicePersistentTensorAllocIds += _input__.readInt64()
        case 50 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __devicePersistentTensorAllocIds += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.step_stats.MemoryStats(
        tempMemorySize = __tempMemorySize,
        persistentMemorySize = __persistentMemorySize,
        persistentTensorAllocIds = __persistentTensorAllocIds.result(),
        deviceTempMemorySize = __deviceTempMemorySize,
        devicePersistentMemorySize = __devicePersistentMemorySize,
        devicePersistentTensorAllocIds = __devicePersistentTensorAllocIds.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.step_stats.MemoryStats] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.step_stats.MemoryStats(
        tempMemorySize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        persistentMemorySize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        persistentTensorAllocIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        deviceTempMemorySize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        devicePersistentMemorySize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        devicePersistentTensorAllocIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.step_stats.StepStatsProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.step_stats.StepStatsProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.step_stats.MemoryStats(
    tempMemorySize = 0L,
    persistentMemorySize = 0L,
    persistentTensorAllocIds = _root_.scala.Seq.empty,
    deviceTempMemorySize = 0L,
    devicePersistentMemorySize = 0L,
    devicePersistentTensorAllocIds = _root_.scala.Seq.empty
  )
  implicit class MemoryStatsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.step_stats.MemoryStats]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.step_stats.MemoryStats](_l) {
    def tempMemorySize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.tempMemorySize)((c_, f_) => c_.copy(tempMemorySize = f_))
    def persistentMemorySize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.persistentMemorySize)((c_, f_) => c_.copy(persistentMemorySize = f_))
    def persistentTensorAllocIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.persistentTensorAllocIds)((c_, f_) => c_.copy(persistentTensorAllocIds = f_))
    def deviceTempMemorySize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.deviceTempMemorySize)((c_, f_) => c_.copy(deviceTempMemorySize = f_))
    def devicePersistentMemorySize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.devicePersistentMemorySize)((c_, f_) => c_.copy(devicePersistentMemorySize = f_))
    def devicePersistentTensorAllocIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.devicePersistentTensorAllocIds)((c_, f_) => c_.copy(devicePersistentTensorAllocIds = f_))
  }
  final val TEMP_MEMORY_SIZE_FIELD_NUMBER = 1
  final val PERSISTENT_MEMORY_SIZE_FIELD_NUMBER = 3
  final val PERSISTENT_TENSOR_ALLOC_IDS_FIELD_NUMBER = 5
  final val DEVICE_TEMP_MEMORY_SIZE_FIELD_NUMBER = 2
  final val DEVICE_PERSISTENT_MEMORY_SIZE_FIELD_NUMBER = 4
  final val DEVICE_PERSISTENT_TENSOR_ALLOC_IDS_FIELD_NUMBER = 6
  def of(
    tempMemorySize: _root_.scala.Long,
    persistentMemorySize: _root_.scala.Long,
    persistentTensorAllocIds: _root_.scala.Seq[_root_.scala.Long],
    deviceTempMemorySize: _root_.scala.Long,
    devicePersistentMemorySize: _root_.scala.Long,
    devicePersistentTensorAllocIds: _root_.scala.Seq[_root_.scala.Long]
  ): _root_.org.tensorflow.framework.step_stats.MemoryStats = _root_.org.tensorflow.framework.step_stats.MemoryStats(
    tempMemorySize,
    persistentMemorySize,
    persistentTensorAllocIds,
    deviceTempMemorySize,
    devicePersistentMemorySize,
    devicePersistentTensorAllocIds
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.MemoryStats])
}
