// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.variable

/** Protocol buffer representing a Variable.
  *
  * @param variableName
  *   Name of the variable tensor.
  * @param initialValueName
  *   Name of the tensor holding the variable's initial value.
  * @param initializerName
  *   Name of the initializer op.
  * @param snapshotName
  *   Name of the snapshot tensor.
  * @param saveSliceInfoDef
  *   Support for saving variables as slices of a larger variable.
  * @param isResource
  *   Whether to represent this as a ResourceVariable.
  * @param trainable
  *   Whether this variable should be trained.
  * @param synchronization
  *   Indicates when a distributed variable will be synced.
  * @param aggregation
  *   Indicates how a distributed variable will be aggregated.
  */
@SerialVersionUID(0L)
final case class VariableDef(
    variableName: _root_.scala.Predef.String = "",
    initialValueName: _root_.scala.Predef.String = "",
    initializerName: _root_.scala.Predef.String = "",
    snapshotName: _root_.scala.Predef.String = "",
    saveSliceInfoDef: _root_.scala.Option[org.tensorflow.framework.variable.SaveSliceInfoDef] = _root_.scala.None,
    isResource: _root_.scala.Boolean = false,
    trainable: _root_.scala.Boolean = false,
    synchronization: org.tensorflow.framework.variable.VariableSynchronization = org.tensorflow.framework.variable.VariableSynchronization.VARIABLE_SYNCHRONIZATION_AUTO,
    aggregation: org.tensorflow.framework.variable.VariableAggregation = org.tensorflow.framework.variable.VariableAggregation.VARIABLE_AGGREGATION_NONE,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[VariableDef] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = variableName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = initialValueName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = initializerName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = snapshotName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      if (saveSliceInfoDef.isDefined) {
        val __value = saveSliceInfoDef.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = isResource
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      
      {
        val __value = trainable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      
      {
        val __value = synchronization.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(8, __value)
        }
      };
      
      {
        val __value = aggregation.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = variableName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = initializerName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = snapshotName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      saveSliceInfoDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = isResource
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = initialValueName
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = trainable
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      {
        val __v = synchronization.value
        if (__v != 0) {
          _output__.writeEnum(8, __v)
        }
      };
      {
        val __v = aggregation.value
        if (__v != 0) {
          _output__.writeEnum(9, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withVariableName(__v: _root_.scala.Predef.String): VariableDef = copy(variableName = __v)
    def withInitialValueName(__v: _root_.scala.Predef.String): VariableDef = copy(initialValueName = __v)
    def withInitializerName(__v: _root_.scala.Predef.String): VariableDef = copy(initializerName = __v)
    def withSnapshotName(__v: _root_.scala.Predef.String): VariableDef = copy(snapshotName = __v)
    def getSaveSliceInfoDef: org.tensorflow.framework.variable.SaveSliceInfoDef = saveSliceInfoDef.getOrElse(org.tensorflow.framework.variable.SaveSliceInfoDef.defaultInstance)
    def clearSaveSliceInfoDef: VariableDef = copy(saveSliceInfoDef = _root_.scala.None)
    def withSaveSliceInfoDef(__v: org.tensorflow.framework.variable.SaveSliceInfoDef): VariableDef = copy(saveSliceInfoDef = Option(__v))
    def withIsResource(__v: _root_.scala.Boolean): VariableDef = copy(isResource = __v)
    def withTrainable(__v: _root_.scala.Boolean): VariableDef = copy(trainable = __v)
    def withSynchronization(__v: org.tensorflow.framework.variable.VariableSynchronization): VariableDef = copy(synchronization = __v)
    def withAggregation(__v: org.tensorflow.framework.variable.VariableAggregation): VariableDef = copy(aggregation = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = variableName
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = initialValueName
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = initializerName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = snapshotName
          if (__t != "") __t else null
        }
        case 4 => saveSliceInfoDef.orNull
        case 5 => {
          val __t = isResource
          if (__t != false) __t else null
        }
        case 7 => {
          val __t = trainable
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = synchronization.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 9 => {
          val __t = aggregation.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(variableName)
        case 6 => _root_.scalapb.descriptors.PString(initialValueName)
        case 2 => _root_.scalapb.descriptors.PString(initializerName)
        case 3 => _root_.scalapb.descriptors.PString(snapshotName)
        case 4 => saveSliceInfoDef.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PBoolean(isResource)
        case 7 => _root_.scalapb.descriptors.PBoolean(trainable)
        case 8 => _root_.scalapb.descriptors.PEnum(synchronization.scalaValueDescriptor)
        case 9 => _root_.scalapb.descriptors.PEnum(aggregation.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: org.tensorflow.framework.variable.VariableDef.type = org.tensorflow.framework.variable.VariableDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.VariableDef])
}

object VariableDef extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.variable.VariableDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.variable.VariableDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.variable.VariableDef = {
    var __variableName: _root_.scala.Predef.String = ""
    var __initialValueName: _root_.scala.Predef.String = ""
    var __initializerName: _root_.scala.Predef.String = ""
    var __snapshotName: _root_.scala.Predef.String = ""
    var __saveSliceInfoDef: _root_.scala.Option[org.tensorflow.framework.variable.SaveSliceInfoDef] = _root_.scala.None
    var __isResource: _root_.scala.Boolean = false
    var __trainable: _root_.scala.Boolean = false
    var __synchronization: org.tensorflow.framework.variable.VariableSynchronization = org.tensorflow.framework.variable.VariableSynchronization.VARIABLE_SYNCHRONIZATION_AUTO
    var __aggregation: org.tensorflow.framework.variable.VariableAggregation = org.tensorflow.framework.variable.VariableAggregation.VARIABLE_AGGREGATION_NONE
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __variableName = _input__.readStringRequireUtf8()
        case 50 =>
          __initialValueName = _input__.readStringRequireUtf8()
        case 18 =>
          __initializerName = _input__.readStringRequireUtf8()
        case 26 =>
          __snapshotName = _input__.readStringRequireUtf8()
        case 34 =>
          __saveSliceInfoDef = _root_.scala.Option(__saveSliceInfoDef.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.variable.SaveSliceInfoDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 40 =>
          __isResource = _input__.readBool()
        case 56 =>
          __trainable = _input__.readBool()
        case 64 =>
          __synchronization = org.tensorflow.framework.variable.VariableSynchronization.fromValue(_input__.readEnum())
        case 72 =>
          __aggregation = org.tensorflow.framework.variable.VariableAggregation.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.variable.VariableDef(
        variableName = __variableName,
        initialValueName = __initialValueName,
        initializerName = __initializerName,
        snapshotName = __snapshotName,
        saveSliceInfoDef = __saveSliceInfoDef,
        isResource = __isResource,
        trainable = __trainable,
        synchronization = __synchronization,
        aggregation = __aggregation,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.variable.VariableDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.variable.VariableDef(
        variableName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        initialValueName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        initializerName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        snapshotName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        saveSliceInfoDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.variable.SaveSliceInfoDef]]),
        isResource = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        trainable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        synchronization = org.tensorflow.framework.variable.VariableSynchronization.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(org.tensorflow.framework.variable.VariableSynchronization.VARIABLE_SYNCHRONIZATION_AUTO.scalaValueDescriptor).number),
        aggregation = org.tensorflow.framework.variable.VariableAggregation.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(org.tensorflow.framework.variable.VariableAggregation.VARIABLE_AGGREGATION_NONE.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.variable.VariableProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.variable.VariableProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = org.tensorflow.framework.variable.SaveSliceInfoDef
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 8 => org.tensorflow.framework.variable.VariableSynchronization
      case 9 => org.tensorflow.framework.variable.VariableAggregation
    }
  }
  lazy val defaultInstance = org.tensorflow.framework.variable.VariableDef(
    variableName = "",
    initialValueName = "",
    initializerName = "",
    snapshotName = "",
    saveSliceInfoDef = _root_.scala.None,
    isResource = false,
    trainable = false,
    synchronization = org.tensorflow.framework.variable.VariableSynchronization.VARIABLE_SYNCHRONIZATION_AUTO,
    aggregation = org.tensorflow.framework.variable.VariableAggregation.VARIABLE_AGGREGATION_NONE
  )
  implicit class VariableDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.variable.VariableDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.variable.VariableDef](_l) {
    def variableName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.variableName)((c_, f_) => c_.copy(variableName = f_))
    def initialValueName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.initialValueName)((c_, f_) => c_.copy(initialValueName = f_))
    def initializerName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.initializerName)((c_, f_) => c_.copy(initializerName = f_))
    def snapshotName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.snapshotName)((c_, f_) => c_.copy(snapshotName = f_))
    def saveSliceInfoDef: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.variable.SaveSliceInfoDef] = field(_.getSaveSliceInfoDef)((c_, f_) => c_.copy(saveSliceInfoDef = _root_.scala.Option(f_)))
    def optionalSaveSliceInfoDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.variable.SaveSliceInfoDef]] = field(_.saveSliceInfoDef)((c_, f_) => c_.copy(saveSliceInfoDef = f_))
    def isResource: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isResource)((c_, f_) => c_.copy(isResource = f_))
    def trainable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.trainable)((c_, f_) => c_.copy(trainable = f_))
    def synchronization: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.variable.VariableSynchronization] = field(_.synchronization)((c_, f_) => c_.copy(synchronization = f_))
    def aggregation: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.variable.VariableAggregation] = field(_.aggregation)((c_, f_) => c_.copy(aggregation = f_))
  }
  final val VARIABLE_NAME_FIELD_NUMBER = 1
  final val INITIAL_VALUE_NAME_FIELD_NUMBER = 6
  final val INITIALIZER_NAME_FIELD_NUMBER = 2
  final val SNAPSHOT_NAME_FIELD_NUMBER = 3
  final val SAVE_SLICE_INFO_DEF_FIELD_NUMBER = 4
  final val IS_RESOURCE_FIELD_NUMBER = 5
  final val TRAINABLE_FIELD_NUMBER = 7
  final val SYNCHRONIZATION_FIELD_NUMBER = 8
  final val AGGREGATION_FIELD_NUMBER = 9
  def of(
    variableName: _root_.scala.Predef.String,
    initialValueName: _root_.scala.Predef.String,
    initializerName: _root_.scala.Predef.String,
    snapshotName: _root_.scala.Predef.String,
    saveSliceInfoDef: _root_.scala.Option[org.tensorflow.framework.variable.SaveSliceInfoDef],
    isResource: _root_.scala.Boolean,
    trainable: _root_.scala.Boolean,
    synchronization: org.tensorflow.framework.variable.VariableSynchronization,
    aggregation: org.tensorflow.framework.variable.VariableAggregation
  ): _root_.org.tensorflow.framework.variable.VariableDef = _root_.org.tensorflow.framework.variable.VariableDef(
    variableName,
    initialValueName,
    initializerName,
    snapshotName,
    saveSliceInfoDef,
    isResource,
    trainable,
    synchronization,
    aggregation
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.VariableDef])
}
