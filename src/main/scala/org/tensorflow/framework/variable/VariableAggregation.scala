// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.variable

/** Indicates how a distributed variable will be aggregated.
  */
sealed abstract class VariableAggregation(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = org.tensorflow.framework.variable.VariableAggregation
  type RecognizedType = org.tensorflow.framework.variable.VariableAggregation.Recognized
  def isVariableAggregationNone: _root_.scala.Boolean = false
  def isVariableAggregationSum: _root_.scala.Boolean = false
  def isVariableAggregationMean: _root_.scala.Boolean = false
  def isVariableAggregationOnlyFirstReplica: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[VariableAggregation] = org.tensorflow.framework.variable.VariableAggregation
  final def asRecognized: _root_.scala.Option[org.tensorflow.framework.variable.VariableAggregation.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[org.tensorflow.framework.variable.VariableAggregation.Recognized])
}

object VariableAggregation extends _root_.scalapb.GeneratedEnumCompanion[VariableAggregation] {
  sealed trait Recognized extends VariableAggregation
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[VariableAggregation] = this
  
  /** `NONE`: This is the default, giving an error if you use a
    * variable-update operation with multiple replicas.
    */
  @SerialVersionUID(0L)
  case object VARIABLE_AGGREGATION_NONE extends VariableAggregation(0) with VariableAggregation.Recognized {
    val index = 0
    val name = "VARIABLE_AGGREGATION_NONE"
    override def isVariableAggregationNone: _root_.scala.Boolean = true
  }
  
  /** `SUM`: Add the updates across replicas.
    */
  @SerialVersionUID(0L)
  case object VARIABLE_AGGREGATION_SUM extends VariableAggregation(1) with VariableAggregation.Recognized {
    val index = 1
    val name = "VARIABLE_AGGREGATION_SUM"
    override def isVariableAggregationSum: _root_.scala.Boolean = true
  }
  
  /** `MEAN`: Take the arithmetic mean ("average") of the updates across
    * replicas.
    */
  @SerialVersionUID(0L)
  case object VARIABLE_AGGREGATION_MEAN extends VariableAggregation(2) with VariableAggregation.Recognized {
    val index = 2
    val name = "VARIABLE_AGGREGATION_MEAN"
    override def isVariableAggregationMean: _root_.scala.Boolean = true
  }
  
  /** `ONLY_FIRST_REPLICA`: This is for when every replica is performing the same
    * update, but we only want to perform the update once. Used, e.g., for the
    * global step counter.
    */
  @SerialVersionUID(0L)
  case object VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA extends VariableAggregation(3) with VariableAggregation.Recognized {
    val index = 3
    val name = "VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA"
    override def isVariableAggregationOnlyFirstReplica: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends VariableAggregation(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(VARIABLE_AGGREGATION_NONE, VARIABLE_AGGREGATION_SUM, VARIABLE_AGGREGATION_MEAN, VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA)
  def fromValue(__value: _root_.scala.Int): VariableAggregation = __value match {
    case 0 => VARIABLE_AGGREGATION_NONE
    case 1 => VARIABLE_AGGREGATION_SUM
    case 2 => VARIABLE_AGGREGATION_MEAN
    case 3 => VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = org.tensorflow.framework.variable.VariableProto.javaDescriptor.getEnumTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = org.tensorflow.framework.variable.VariableProto.scalaDescriptor.enums(1)
}