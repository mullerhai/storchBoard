// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.variable

/** @param fullName
  *   Name of the full variable of which this is a slice.
  * @param fullShape
  *   Shape of the full variable.
  * @param varOffset
  *   Offset of this variable into the full variable.
  * @param varShape
  *   Shape of this variable.
  */
@SerialVersionUID(0L)
final case class SaveSliceInfoDef(
    fullName: _root_.scala.Predef.String = "",
    fullShape: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    varOffset: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    varShape: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SaveSliceInfoDef] {
    private[this] def fullShapeSerializedSize = {
      if (__fullShapeSerializedSizeField == 0) __fullShapeSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        fullShape.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __fullShapeSerializedSizeField
    }
    @transient private[this] var __fullShapeSerializedSizeField: _root_.scala.Int = 0
    private[this] def varOffsetSerializedSize = {
      if (__varOffsetSerializedSizeField == 0) __varOffsetSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        varOffset.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __varOffsetSerializedSizeField
    }
    @transient private[this] var __varOffsetSerializedSizeField: _root_.scala.Int = 0
    private[this] def varShapeSerializedSize = {
      if (__varShapeSerializedSizeField == 0) __varShapeSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        varShape.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt64SizeNoTag(__i))
        __s
      }
      __varShapeSerializedSizeField
    }
    @transient private[this] var __varShapeSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = fullName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (fullShape.nonEmpty) {
        val __localsize = fullShapeSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (varOffset.nonEmpty) {
        val __localsize = varOffsetSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (varShape.nonEmpty) {
        val __localsize = varShapeSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = fullName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      if (fullShape.nonEmpty) {
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(fullShapeSerializedSize)
        fullShape.foreach(_output__.writeInt64NoTag)
      };
      if (varOffset.nonEmpty) {
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(varOffsetSerializedSize)
        varOffset.foreach(_output__.writeInt64NoTag)
      };
      if (varShape.nonEmpty) {
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(varShapeSerializedSize)
        varShape.foreach(_output__.writeInt64NoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def withFullName(__v: _root_.scala.Predef.String): SaveSliceInfoDef = copy(fullName = __v)
    def clearFullShape = copy(fullShape = _root_.scala.Seq.empty)
    def addFullShape(__vs: _root_.scala.Long *): SaveSliceInfoDef = addAllFullShape(__vs)
    def addAllFullShape(__vs: Iterable[_root_.scala.Long]): SaveSliceInfoDef = copy(fullShape = fullShape ++ __vs)
    def withFullShape(__v: _root_.scala.Seq[_root_.scala.Long]): SaveSliceInfoDef = copy(fullShape = __v)
    def clearVarOffset = copy(varOffset = _root_.scala.Seq.empty)
    def addVarOffset(__vs: _root_.scala.Long *): SaveSliceInfoDef = addAllVarOffset(__vs)
    def addAllVarOffset(__vs: Iterable[_root_.scala.Long]): SaveSliceInfoDef = copy(varOffset = varOffset ++ __vs)
    def withVarOffset(__v: _root_.scala.Seq[_root_.scala.Long]): SaveSliceInfoDef = copy(varOffset = __v)
    def clearVarShape = copy(varShape = _root_.scala.Seq.empty)
    def addVarShape(__vs: _root_.scala.Long *): SaveSliceInfoDef = addAllVarShape(__vs)
    def addAllVarShape(__vs: Iterable[_root_.scala.Long]): SaveSliceInfoDef = copy(varShape = varShape ++ __vs)
    def withVarShape(__v: _root_.scala.Seq[_root_.scala.Long]): SaveSliceInfoDef = copy(varShape = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = fullName
          if (__t != "") __t else null
        }
        case 2 => fullShape
        case 3 => varOffset
        case 4 => varShape
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(fullName)
        case 2 => _root_.scalapb.descriptors.PRepeated(fullShape.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(varOffset.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(varShape.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: org.tensorflow.framework.variable.SaveSliceInfoDef.type = org.tensorflow.framework.variable.SaveSliceInfoDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.SaveSliceInfoDef])
}

object SaveSliceInfoDef extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.variable.SaveSliceInfoDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.variable.SaveSliceInfoDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.variable.SaveSliceInfoDef = {
    var __fullName: _root_.scala.Predef.String = ""
    val __fullShape: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __varOffset: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    val __varShape: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __fullName = _input__.readStringRequireUtf8()
        case 16 =>
          __fullShape += _input__.readInt64()
        case 18 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __fullShape += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 24 =>
          __varOffset += _input__.readInt64()
        case 26 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __varOffset += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case 32 =>
          __varShape += _input__.readInt64()
        case 34 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __varShape += _input__.readInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.variable.SaveSliceInfoDef(
        fullName = __fullName,
        fullShape = __fullShape.result(),
        varOffset = __varOffset.result(),
        varShape = __varShape.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.variable.SaveSliceInfoDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.variable.SaveSliceInfoDef(
        fullName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        fullShape = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        varOffset = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty),
        varShape = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.variable.VariableProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.variable.VariableProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.variable.SaveSliceInfoDef(
    fullName = "",
    fullShape = _root_.scala.Seq.empty,
    varOffset = _root_.scala.Seq.empty,
    varShape = _root_.scala.Seq.empty
  )
  implicit class SaveSliceInfoDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.variable.SaveSliceInfoDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.variable.SaveSliceInfoDef](_l) {
    def fullName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fullName)((c_, f_) => c_.copy(fullName = f_))
    def fullShape: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.fullShape)((c_, f_) => c_.copy(fullShape = f_))
    def varOffset: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.varOffset)((c_, f_) => c_.copy(varOffset = f_))
    def varShape: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.varShape)((c_, f_) => c_.copy(varShape = f_))
  }
  final val FULL_NAME_FIELD_NUMBER = 1
  final val FULL_SHAPE_FIELD_NUMBER = 2
  final val VAR_OFFSET_FIELD_NUMBER = 3
  final val VAR_SHAPE_FIELD_NUMBER = 4
  def of(
    fullName: _root_.scala.Predef.String,
    fullShape: _root_.scala.Seq[_root_.scala.Long],
    varOffset: _root_.scala.Seq[_root_.scala.Long],
    varShape: _root_.scala.Seq[_root_.scala.Long]
  ): _root_.org.tensorflow.framework.variable.SaveSliceInfoDef = _root_.org.tensorflow.framework.variable.SaveSliceInfoDef(
    fullName,
    fullShape,
    varOffset,
    varShape
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.SaveSliceInfoDef])
}
