// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.debug

/** @param host
  *   The host name on which a source code file is located.
  * @param filePath
  *   Path to the source code file.
  * @param lastModified
  *   The timestamp at which the source code file is last modified.
  * @param bytes
  *   Byte size of the file.
  * @param lines
  *   Line-by-line content of the source code file.
  */
@SerialVersionUID(0L)
final case class DebuggedSourceFile(
    host: _root_.scala.Predef.String = "",
    filePath: _root_.scala.Predef.String = "",
    lastModified: _root_.scala.Long = 0L,
    bytes: _root_.scala.Long = 0L,
    lines: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DebuggedSourceFile] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = host
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = filePath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = lastModified
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = bytes
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      lines.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = host
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = filePath
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = lastModified
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = bytes
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      lines.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withHost(__v: _root_.scala.Predef.String): DebuggedSourceFile = copy(host = __v)
    def withFilePath(__v: _root_.scala.Predef.String): DebuggedSourceFile = copy(filePath = __v)
    def withLastModified(__v: _root_.scala.Long): DebuggedSourceFile = copy(lastModified = __v)
    def withBytes(__v: _root_.scala.Long): DebuggedSourceFile = copy(bytes = __v)
    def clearLines = copy(lines = _root_.scala.Seq.empty)
    def addLines(__vs: _root_.scala.Predef.String *): DebuggedSourceFile = addAllLines(__vs)
    def addAllLines(__vs: Iterable[_root_.scala.Predef.String]): DebuggedSourceFile = copy(lines = lines ++ __vs)
    def withLines(__v: _root_.scala.Seq[_root_.scala.Predef.String]): DebuggedSourceFile = copy(lines = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = host
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = filePath
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = lastModified
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = bytes
          if (__t != 0L) __t else null
        }
        case 5 => lines
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(host)
        case 2 => _root_.scalapb.descriptors.PString(filePath)
        case 3 => _root_.scalapb.descriptors.PLong(lastModified)
        case 4 => _root_.scalapb.descriptors.PLong(bytes)
        case 5 => _root_.scalapb.descriptors.PRepeated(lines.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: org.tensorflow.framework.debug.DebuggedSourceFile.type = org.tensorflow.framework.debug.DebuggedSourceFile
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.DebuggedSourceFile])
}

object DebuggedSourceFile extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.debug.DebuggedSourceFile] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.debug.DebuggedSourceFile] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.debug.DebuggedSourceFile = {
    var __host: _root_.scala.Predef.String = ""
    var __filePath: _root_.scala.Predef.String = ""
    var __lastModified: _root_.scala.Long = 0L
    var __bytes: _root_.scala.Long = 0L
    val __lines: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __host = _input__.readStringRequireUtf8()
        case 18 =>
          __filePath = _input__.readStringRequireUtf8()
        case 24 =>
          __lastModified = _input__.readInt64()
        case 32 =>
          __bytes = _input__.readInt64()
        case 42 =>
          __lines += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.debug.DebuggedSourceFile(
        host = __host,
        filePath = __filePath,
        lastModified = __lastModified,
        bytes = __bytes,
        lines = __lines.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.debug.DebuggedSourceFile] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.debug.DebuggedSourceFile(
        host = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        filePath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        lastModified = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        bytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        lines = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.debug.DebugProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.debug.DebugProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.debug.DebuggedSourceFile(
    host = "",
    filePath = "",
    lastModified = 0L,
    bytes = 0L,
    lines = _root_.scala.Seq.empty
  )
  implicit class DebuggedSourceFileLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.debug.DebuggedSourceFile]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.debug.DebuggedSourceFile](_l) {
    def host: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.host)((c_, f_) => c_.copy(host = f_))
    def filePath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.filePath)((c_, f_) => c_.copy(filePath = f_))
    def lastModified: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.lastModified)((c_, f_) => c_.copy(lastModified = f_))
    def bytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.bytes)((c_, f_) => c_.copy(bytes = f_))
    def lines: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.lines)((c_, f_) => c_.copy(lines = f_))
  }
  final val HOST_FIELD_NUMBER = 1
  final val FILE_PATH_FIELD_NUMBER = 2
  final val LAST_MODIFIED_FIELD_NUMBER = 3
  final val BYTES_FIELD_NUMBER = 4
  final val LINES_FIELD_NUMBER = 5
  def of(
    host: _root_.scala.Predef.String,
    filePath: _root_.scala.Predef.String,
    lastModified: _root_.scala.Long,
    bytes: _root_.scala.Long,
    lines: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.org.tensorflow.framework.debug.DebuggedSourceFile = _root_.org.tensorflow.framework.debug.DebuggedSourceFile(
    host,
    filePath,
    lastModified,
    bytes,
    lines
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.DebuggedSourceFile])
}
