// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!

package org.tensorflow.framework.function

/** A function can be instantiated when the runtime can bind every attr
  * with a value. When a GraphDef has a call to a function, it must
  * have binding for every attr defined in the signature.
  *
  * TODO(zhifengc):
  *   * device spec, etc.
  *
  * @param signature
  *   The definition of the function's name, arguments, return values,
  *   attrs etc.
  * @param attr
  *   Attributes specific to this function definition.
  * @param resourceArgUniqueId
  *   Unique IDs for each resource argument, used to track aliasing resources. If
  *   Argument A and Argument B alias each other, then
  *   resource_arg_unique_ids[A.index] == resource_arg_unique_ids[B.index].
  *  
  *   If this field is empty, none of the arguments could alias; otherwise, every
  *   resource argument should have an entry in this field.
  *  
  *   When instantiated, the unique IDs will be attached to the _Arg nodes'
  *   "_resource_arg_unique_id" attribute.
  * @param nodeDef
  *   By convention, "op" in node_def is resolved by consulting with a
  *   user-defined library first. If not resolved, "func" is assumed to
  *   be a builtin op.
  * @param ret
  *   A mapping from the output arg names from `signature` to the
  *   outputs from `node_def` that should be returned by the function.
  * @param controlRet
  *   A mapping from control output names from `signature` to node names in
  *   `node_def` which should be control outputs of this function.
  */
@SerialVersionUID(0L)
final case class FunctionDef(
    signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef] = _root_.scala.None,
    attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.collection.immutable.Map.empty,
    argAttr: _root_.scala.collection.immutable.Map[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs] = _root_.scala.collection.immutable.Map.empty,
    resourceArgUniqueId: _root_.scala.collection.immutable.Map[_root_.scala.Int, _root_.scala.Int] = _root_.scala.collection.immutable.Map.empty,
    nodeDef: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef] = _root_.scala.Seq.empty,
    ret: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    controlRet: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String] = _root_.scala.collection.immutable.Map.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FunctionDef] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (signature.isDefined) {
        val __value = signature.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      attr.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      argAttr.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      resourceArgUniqueId.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      nodeDef.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      ret.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      controlRet.foreach { __item =>
        val __value = org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      signature.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      nodeDef.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      ret.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(__v)
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      attr.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(__v)
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      controlRet.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toBase(__v)
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      argAttr.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toBase(__v)
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      resourceArgUniqueId.foreach { __v =>
        val __m = org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toBase(__v)
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getSignature: org.tensorflow.framework.op_def.OpDef = signature.getOrElse(org.tensorflow.framework.op_def.OpDef.defaultInstance)
    def clearSignature: FunctionDef = copy(signature = _root_.scala.None)
    def withSignature(__v: org.tensorflow.framework.op_def.OpDef): FunctionDef = copy(signature = Option(__v))
    def clearAttr = copy(attr = _root_.scala.collection.immutable.Map.empty)
    def addAttr(__vs: (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue) *): FunctionDef = addAllAttr(__vs)
    def addAllAttr(__vs: Iterable[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]): FunctionDef = copy(attr = attr ++ __vs)
    def withAttr(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]): FunctionDef = copy(attr = __v)
    def clearArgAttr = copy(argAttr = _root_.scala.collection.immutable.Map.empty)
    def addArgAttr(__vs: (_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs) *): FunctionDef = addAllArgAttr(__vs)
    def addAllArgAttr(__vs: Iterable[(_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs)]): FunctionDef = copy(argAttr = argAttr ++ __vs)
    def withArgAttr(__v: _root_.scala.collection.immutable.Map[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs]): FunctionDef = copy(argAttr = __v)
    def clearResourceArgUniqueId = copy(resourceArgUniqueId = _root_.scala.collection.immutable.Map.empty)
    def addResourceArgUniqueId(__vs: (_root_.scala.Int, _root_.scala.Int) *): FunctionDef = addAllResourceArgUniqueId(__vs)
    def addAllResourceArgUniqueId(__vs: Iterable[(_root_.scala.Int, _root_.scala.Int)]): FunctionDef = copy(resourceArgUniqueId = resourceArgUniqueId ++ __vs)
    def withResourceArgUniqueId(__v: _root_.scala.collection.immutable.Map[_root_.scala.Int, _root_.scala.Int]): FunctionDef = copy(resourceArgUniqueId = __v)
    def clearNodeDef = copy(nodeDef = _root_.scala.Seq.empty)
    def addNodeDef(__vs: org.tensorflow.framework.node_def.NodeDef *): FunctionDef = addAllNodeDef(__vs)
    def addAllNodeDef(__vs: Iterable[org.tensorflow.framework.node_def.NodeDef]): FunctionDef = copy(nodeDef = nodeDef ++ __vs)
    def withNodeDef(__v: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]): FunctionDef = copy(nodeDef = __v)
    def clearRet = copy(ret = _root_.scala.collection.immutable.Map.empty)
    def addRet(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): FunctionDef = addAllRet(__vs)
    def addAllRet(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): FunctionDef = copy(ret = ret ++ __vs)
    def withRet(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): FunctionDef = copy(ret = __v)
    def clearControlRet = copy(controlRet = _root_.scala.collection.immutable.Map.empty)
    def addControlRet(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): FunctionDef = addAllControlRet(__vs)
    def addAllControlRet(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): FunctionDef = copy(controlRet = controlRet ++ __vs)
    def withControlRet(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): FunctionDef = copy(controlRet = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => signature.orNull
        case 5 => attr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(_)).toSeq
        case 7 => argAttr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toBase(_)).toSeq
        case 8 => resourceArgUniqueId.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toBase(_)).toSeq
        case 3 => nodeDef
        case 4 => ret.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(_)).toSeq
        case 6 => controlRet.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => signature.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PRepeated(attr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toBase(_).toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PRepeated(argAttr.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toBase(_).toPMessage).toVector)
        case 8 => _root_.scalapb.descriptors.PRepeated(resourceArgUniqueId.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toBase(_).toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(nodeDef.iterator.map(_.toPMessage).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(ret.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toBase(_).toPMessage).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(controlRet.iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: org.tensorflow.framework.function.FunctionDef.type = org.tensorflow.framework.function.FunctionDef
    // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef])
}

object FunctionDef extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef = {
    var __signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef] = _root_.scala.None
    val __attr: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]
    val __argAttr: _root_.scala.collection.mutable.Builder[(_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs), _root_.scala.collection.immutable.Map[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs]
    val __resourceArgUniqueId: _root_.scala.collection.mutable.Builder[(_root_.scala.Int, _root_.scala.Int), _root_.scala.collection.immutable.Map[_root_.scala.Int, _root_.scala.Int]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Int, _root_.scala.Int]
    val __nodeDef: _root_.scala.collection.immutable.VectorBuilder[org.tensorflow.framework.node_def.NodeDef] = new _root_.scala.collection.immutable.VectorBuilder[org.tensorflow.framework.node_def.NodeDef]
    val __ret: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    val __controlRet: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __signature = _root_.scala.Option(__signature.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.op_def.OpDef](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __attr += org.tensorflow.framework.function.FunctionDef._typemapper_attr.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.AttrEntry](_input__))
        case 58 =>
          __argAttr += org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry](_input__))
        case 66 =>
          __resourceArgUniqueId += org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry](_input__))
        case 26 =>
          __nodeDef += _root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.node_def.NodeDef](_input__)
        case 34 =>
          __ret += org.tensorflow.framework.function.FunctionDef._typemapper_ret.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.RetEntry](_input__))
        case 50 =>
          __controlRet += org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.ControlRetEntry](_input__))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    org.tensorflow.framework.function.FunctionDef(
        signature = __signature,
        attr = __attr.result(),
        argAttr = __argAttr.result(),
        resourceArgUniqueId = __resourceArgUniqueId.result(),
        nodeDef = __nodeDef.result(),
        ret = __ret.result(),
        controlRet = __controlRet.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      org.tensorflow.framework.function.FunctionDef(
        signature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.op_def.OpDef]]),
        attr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.AttrEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_attr.toCustom(_)).toMap,
        argAttr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_argAttr.toCustom(_)).toMap,
        resourceArgUniqueId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_resourceArgUniqueId.toCustom(_)).toMap,
        nodeDef = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]]).getOrElse(_root_.scala.Seq.empty),
        ret = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.RetEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_ret.toCustom(_)).toMap,
        controlRet = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.ControlRetEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef._typemapper_controlRet.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
    var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = org.tensorflow.framework.op_def.OpDef
      case 5 => __out = org.tensorflow.framework.function.FunctionDef.AttrEntry
      case 7 => __out = org.tensorflow.framework.function.FunctionDef.ArgAttrEntry
      case 8 => __out = org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry
      case 3 => __out = org.tensorflow.framework.node_def.NodeDef
      case 4 => __out = org.tensorflow.framework.function.FunctionDef.RetEntry
      case 6 => __out = org.tensorflow.framework.function.FunctionDef.ControlRetEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
      _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry,
      _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs,
      _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrEntry,
      _root_.org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry,
      _root_.org.tensorflow.framework.function.FunctionDef.RetEntry,
      _root_.org.tensorflow.framework.function.FunctionDef.ControlRetEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
  lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef(
    signature = _root_.scala.None,
    attr = _root_.scala.collection.immutable.Map.empty,
    argAttr = _root_.scala.collection.immutable.Map.empty,
    resourceArgUniqueId = _root_.scala.collection.immutable.Map.empty,
    nodeDef = _root_.scala.Seq.empty,
    ret = _root_.scala.collection.immutable.Map.empty,
    controlRet = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class AttrEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AttrEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): AttrEntry = copy(key = __v)
      def getValue: org.tensorflow.framework.attr_value.AttrValue = value.getOrElse(org.tensorflow.framework.attr_value.AttrValue.defaultInstance)
      def clearValue: AttrEntry = copy(value = _root_.scala.None)
      def withValue(__v: org.tensorflow.framework.attr_value.AttrValue): AttrEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.AttrEntry.type = org.tensorflow.framework.function.FunctionDef.AttrEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.AttrEntry])
  }
  
  object AttrEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.AttrEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.AttrEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.AttrEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.attr_value.AttrValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.AttrEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.AttrEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.AttrEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = org.tensorflow.framework.attr_value.AttrValue
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.AttrEntry(
      key = "",
      value = _root_.scala.None
    )
    implicit class AttrEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.AttrEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.AttrEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)](__m => (__m.key, __m.getValue))(__p => org.tensorflow.framework.function.FunctionDef.AttrEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]
    ): _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry = _root_.org.tensorflow.framework.function.FunctionDef.AttrEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.AttrEntry])
  }
  
  /** Attributes for function arguments. These attributes are the same set of
    * valid attributes as to _Arg nodes.
    */
  @SerialVersionUID(0L)
  final case class ArgAttrs(
      attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.collection.immutable.Map.empty,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ArgAttrs] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        attr.foreach { __item =>
          val __value = org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toBase(__item)
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        attr.foreach { __v =>
          val __m = org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toBase(__v)
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def clearAttr = copy(attr = _root_.scala.collection.immutable.Map.empty)
      def addAttr(__vs: (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue) *): ArgAttrs = addAllAttr(__vs)
      def addAllAttr(__vs: Iterable[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]): ArgAttrs = copy(attr = attr ++ __vs)
      def withAttr(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]): ArgAttrs = copy(attr = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => attr.iterator.map(org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toBase(_)).toSeq
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PRepeated(attr.iterator.map(org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toBase(_).toPMessage).toVector)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.ArgAttrs.type = org.tensorflow.framework.function.FunctionDef.ArgAttrs
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.ArgAttrs])
  }
  
  object ArgAttrs extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrs] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrs] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.ArgAttrs = {
      val __attr: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __attr += org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toCustom(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry](_input__))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.ArgAttrs(
          attr = __attr.result(),
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.ArgAttrs] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.ArgAttrs(
          attr = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(org.tensorflow.framework.function.FunctionDef.ArgAttrs._typemapper_attr.toCustom(_)).toMap
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(1)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(1)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
      (__number: @_root_.scala.unchecked) match {
        case 1 => __out = org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] =
      Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]](
        _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry
      )
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.ArgAttrs(
      attr = _root_.scala.collection.immutable.Map.empty
    )
    @SerialVersionUID(0L)
    final case class AttrEntry(
        key: _root_.scala.Predef.String = "",
        value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None,
        unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
        ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AttrEntry] {
        @transient
        private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
        private[this] def __computeSerializedSize(): _root_.scala.Int = {
          var __size = 0
          
          {
            val __value = key
            if (!__value.isEmpty) {
              __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
            }
          };
          if (value.isDefined) {
            val __value = value.get
            __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
          };
          __size += unknownFields.serializedSize
          __size
        }
        override def serializedSize: _root_.scala.Int = {
          var __size = __serializedSizeMemoized
          if (__size == 0) {
            __size = __computeSerializedSize() + 1
            __serializedSizeMemoized = __size
          }
          __size - 1
          
        }
        def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
          {
            val __v = key
            if (!__v.isEmpty) {
              _output__.writeString(1, __v)
            }
          };
          value.foreach { __v =>
            val __m = __v
            _output__.writeTag(2, 2)
            _output__.writeUInt32NoTag(__m.serializedSize)
            __m.writeTo(_output__)
          };
          unknownFields.writeTo(_output__)
        }
        def withKey(__v: _root_.scala.Predef.String): AttrEntry = copy(key = __v)
        def getValue: org.tensorflow.framework.attr_value.AttrValue = value.getOrElse(org.tensorflow.framework.attr_value.AttrValue.defaultInstance)
        def clearValue: AttrEntry = copy(value = _root_.scala.None)
        def withValue(__v: org.tensorflow.framework.attr_value.AttrValue): AttrEntry = copy(value = Option(__v))
        def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
        def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
        def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
          (__fieldNumber: @_root_.scala.unchecked) match {
            case 1 => {
              val __t = key
              if (__t != "") __t else null
            }
            case 2 => value.orNull
          }
        }
        def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
          _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
          (__field.number: @_root_.scala.unchecked) match {
            case 1 => _root_.scalapb.descriptors.PString(key)
            case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
          }
        }
        def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
        def companion: org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry.type = org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry
        // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.ArgAttrs.AttrEntry])
    }
    
    object AttrEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry] {
      implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry] = this
      def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry = {
        var __key: _root_.scala.Predef.String = ""
        var __value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue] = _root_.scala.None
        var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
        var _done__ = false
        while (!_done__) {
          val _tag__ = _input__.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __key = _input__.readStringRequireUtf8()
            case 18 =>
              __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.attr_value.AttrValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
            case tag =>
              if (_unknownFields__ == null) {
                _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
              }
              _unknownFields__.parseField(tag, _input__)
          }
        }
        org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry(
            key = __key,
            value = __value,
            unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
        )
      }
      implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry] = _root_.scalapb.descriptors.Reads{
        case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
          _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
          org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry(
            key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
            value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]])
          )
        case _ => throw new RuntimeException("Expected PMessage")
      }
      def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.ArgAttrs.javaDescriptor.getNestedTypes().get(0)
      def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.ArgAttrs.scalaDescriptor.nestedMessages(0)
      def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
        var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
        (__number: @_root_.scala.unchecked) match {
          case 2 => __out = org.tensorflow.framework.attr_value.AttrValue
        }
        __out
      }
      lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
      def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
      lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry(
        key = "",
        value = _root_.scala.None
      )
      implicit class AttrEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry](_l) {
        def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
        def value: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.attr_value.AttrValue] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
        def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val KEY_FIELD_NUMBER = 1
      final val VALUE_FIELD_NUMBER = 2
      @transient
      implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] =
        _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)](__m => (__m.key, __m.getValue))(__p => org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry(__p._1, Some(__p._2)))
      def of(
        key: _root_.scala.Predef.String,
        value: _root_.scala.Option[org.tensorflow.framework.attr_value.AttrValue]
      ): _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry = _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry(
        key,
        value
      )
      // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.ArgAttrs.AttrEntry])
    }
    
    implicit class ArgAttrsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrs]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrs](_l) {
      def attr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = field(_.attr)((c_, f_) => c_.copy(attr = f_))
    }
    final val ATTR_FIELD_NUMBER = 1
    @transient
    private[function] val _typemapper_attr: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrs.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]]
    def of(
      attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]
    ): _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs = _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrs(
      attr
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.ArgAttrs])
  }
  
  @SerialVersionUID(0L)
  final case class ArgAttrEntry(
      key: _root_.scala.Int = 0,
      value: _root_.scala.Option[org.tensorflow.framework.function.FunctionDef.ArgAttrs] = _root_.scala.None,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ArgAttrEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
          }
        };
        if (value.isDefined) {
          val __value = value.get
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (__v != 0) {
            _output__.writeUInt32(1, __v)
          }
        };
        value.foreach { __v =>
          val __m = __v
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__m.serializedSize)
          __m.writeTo(_output__)
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Int): ArgAttrEntry = copy(key = __v)
      def getValue: org.tensorflow.framework.function.FunctionDef.ArgAttrs = value.getOrElse(org.tensorflow.framework.function.FunctionDef.ArgAttrs.defaultInstance)
      def clearValue: ArgAttrEntry = copy(value = _root_.scala.None)
      def withValue(__v: org.tensorflow.framework.function.FunctionDef.ArgAttrs): ArgAttrEntry = copy(value = Option(__v))
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != 0) __t else null
          }
          case 2 => value.orNull
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PInt(key)
          case 2 => value.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.ArgAttrEntry.type = org.tensorflow.framework.function.FunctionDef.ArgAttrEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.ArgAttrEntry])
  }
  
  object ArgAttrEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.ArgAttrEntry = {
      var __key: _root_.scala.Int = 0
      var __value: _root_.scala.Option[org.tensorflow.framework.function.FunctionDef.ArgAttrs] = _root_.scala.None
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __key = _input__.readUInt32()
          case 18 =>
            __value = _root_.scala.Option(__value.fold(_root_.scalapb.LiteParser.readMessage[org.tensorflow.framework.function.FunctionDef.ArgAttrs](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.ArgAttrEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.ArgAttrEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[org.tensorflow.framework.function.FunctionDef.ArgAttrs]])
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(2)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(2)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= {
      var __out: _root_.scalapb.GeneratedMessageCompanion[?]= null
      (__number: @_root_.scala.unchecked) match {
        case 2 => __out = org.tensorflow.framework.function.FunctionDef.ArgAttrs
      }
      __out
    }
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.ArgAttrEntry(
      key = 0,
      value = _root_.scala.None
    )
    implicit class ArgAttrEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ArgAttrs] = field(_.getValue)((c_, f_) => c_.copy(value = _root_.scala.Option(f_)))
      def optionalValue: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.function.FunctionDef.ArgAttrs]] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry, (_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry, (_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs)](__m => (__m.key, __m.getValue))(__p => org.tensorflow.framework.function.FunctionDef.ArgAttrEntry(__p._1, Some(__p._2)))
    def of(
      key: _root_.scala.Int,
      value: _root_.scala.Option[org.tensorflow.framework.function.FunctionDef.ArgAttrs]
    ): _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrEntry = _root_.org.tensorflow.framework.function.FunctionDef.ArgAttrEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.ArgAttrEntry])
  }
  
  @SerialVersionUID(0L)
  final case class ResourceArgUniqueIdEntry(
      key: _root_.scala.Int = 0,
      value: _root_.scala.Int = 0,
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ResourceArgUniqueIdEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
          }
        };
        
        {
          val __value = value
          if (__value != 0) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (__v != 0) {
            _output__.writeUInt32(1, __v)
          }
        };
        {
          val __v = value
          if (__v != 0) {
            _output__.writeUInt32(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Int): ResourceArgUniqueIdEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Int): ResourceArgUniqueIdEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != 0) __t else null
          }
          case 2 => {
            val __t = value
            if (__t != 0) __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PInt(key)
          case 2 => _root_.scalapb.descriptors.PInt(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry.type = org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.ResourceArgUniqueIdEntry])
  }
  
  object ResourceArgUniqueIdEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry = {
      var __key: _root_.scala.Int = 0
      var __value: _root_.scala.Int = 0
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __key = _input__.readUInt32()
          case 16 =>
            __value = _input__.readUInt32()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0)
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(3)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(3)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry(
      key = 0,
      value = 0
    )
    implicit class ResourceArgUniqueIdEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry, (_root_.scala.Int, _root_.scala.Int)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry, (_root_.scala.Int, _root_.scala.Int)](__m => (__m.key, __m.value))(__p => org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Int,
      value: _root_.scala.Int
    ): _root_.org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry = _root_.org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.ResourceArgUniqueIdEntry])
  }
  
  @SerialVersionUID(0L)
  final case class RetEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RetEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): RetEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): RetEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.RetEntry.type = org.tensorflow.framework.function.FunctionDef.RetEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.RetEntry])
  }
  
  object RetEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.RetEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.RetEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.RetEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.RetEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.RetEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.RetEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(4)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(4)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.RetEntry(
      key = "",
      value = ""
    )
    implicit class RetEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.RetEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.RetEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => org.tensorflow.framework.function.FunctionDef.RetEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.org.tensorflow.framework.function.FunctionDef.RetEntry = _root_.org.tensorflow.framework.function.FunctionDef.RetEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.RetEntry])
  }
  
  @SerialVersionUID(0L)
  final case class ControlRetEntry(
      key: _root_.scala.Predef.String = "",
      value: _root_.scala.Predef.String = "",
      unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ControlRetEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size += unknownFields.serializedSize
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
        unknownFields.writeTo(_output__)
      }
      def withKey(__v: _root_.scala.Predef.String): ControlRetEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): ControlRetEntry = copy(value = __v)
      def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
      def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
      def companion: org.tensorflow.framework.function.FunctionDef.ControlRetEntry.type = org.tensorflow.framework.function.FunctionDef.ControlRetEntry
      // @@protoc_insertion_point(GeneratedMessage[tensorboard.FunctionDef.ControlRetEntry])
  }
  
  object ControlRetEntry extends scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ControlRetEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[org.tensorflow.framework.function.FunctionDef.ControlRetEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): org.tensorflow.framework.function.FunctionDef.ControlRetEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      org.tensorflow.framework.function.FunctionDef.ControlRetEntry(
          key = __key,
          value = __value,
          unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[org.tensorflow.framework.function.FunctionDef.ControlRetEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        org.tensorflow.framework.function.FunctionDef.ControlRetEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.javaDescriptor.getNestedTypes().get(5)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = org.tensorflow.framework.function.FunctionDef.scalaDescriptor.nestedMessages(5)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[?]= throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[? <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[?]= throw new MatchError(__fieldNumber)
    lazy val defaultInstance = org.tensorflow.framework.function.FunctionDef.ControlRetEntry(
      key = "",
      value = ""
    )
    implicit class ControlRetEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef.ControlRetEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef.ControlRetEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ControlRetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ControlRetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => org.tensorflow.framework.function.FunctionDef.ControlRetEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.org.tensorflow.framework.function.FunctionDef.ControlRetEntry = _root_.org.tensorflow.framework.function.FunctionDef.ControlRetEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef.ControlRetEntry])
  }
  
  implicit class FunctionDefLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.function.FunctionDef]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, org.tensorflow.framework.function.FunctionDef](_l) {
    def signature: _root_.scalapb.lenses.Lens[UpperPB, org.tensorflow.framework.op_def.OpDef] = field(_.getSignature)((c_, f_) => c_.copy(signature = _root_.scala.Option(f_)))
    def optionalSignature: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[org.tensorflow.framework.op_def.OpDef]] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def attr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue]] = field(_.attr)((c_, f_) => c_.copy(attr = f_))
    def argAttr: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs]] = field(_.argAttr)((c_, f_) => c_.copy(argAttr = f_))
    def resourceArgUniqueId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Int, _root_.scala.Int]] = field(_.resourceArgUniqueId)((c_, f_) => c_.copy(resourceArgUniqueId = f_))
    def nodeDef: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef]] = field(_.nodeDef)((c_, f_) => c_.copy(nodeDef = f_))
    def ret: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.ret)((c_, f_) => c_.copy(ret = f_))
    def controlRet: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.controlRet)((c_, f_) => c_.copy(controlRet = f_))
  }
  final val SIGNATURE_FIELD_NUMBER = 1
  final val ATTR_FIELD_NUMBER = 5
  final val ARG_ATTR_FIELD_NUMBER = 7
  final val RESOURCE_ARG_UNIQUE_ID_FIELD_NUMBER = 8
  final val NODE_DEF_FIELD_NUMBER = 3
  final val RET_FIELD_NUMBER = 4
  final val CONTROL_RET_FIELD_NUMBER = 6
  @transient
  private[function] val _typemapper_attr: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.AttrEntry, (_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue)]]
  @transient
  private[function] val _typemapper_argAttr: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry, (_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ArgAttrEntry, (_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs)]]
  @transient
  private[function] val _typemapper_resourceArgUniqueId: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry, (_root_.scala.Int, _root_.scala.Int)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ResourceArgUniqueIdEntry, (_root_.scala.Int, _root_.scala.Int)]]
  @transient
  private[function] val _typemapper_ret: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.RetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  @transient
  private[function] val _typemapper_controlRet: _root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ControlRetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[org.tensorflow.framework.function.FunctionDef.ControlRetEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    signature: _root_.scala.Option[org.tensorflow.framework.op_def.OpDef],
    attr: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, org.tensorflow.framework.attr_value.AttrValue],
    argAttr: _root_.scala.collection.immutable.Map[_root_.scala.Int, org.tensorflow.framework.function.FunctionDef.ArgAttrs],
    resourceArgUniqueId: _root_.scala.collection.immutable.Map[_root_.scala.Int, _root_.scala.Int],
    nodeDef: _root_.scala.Seq[org.tensorflow.framework.node_def.NodeDef],
    ret: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String],
    controlRet: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
  ): _root_.org.tensorflow.framework.function.FunctionDef = _root_.org.tensorflow.framework.function.FunctionDef(
    signature,
    attr,
    argAttr,
    resourceArgUniqueId,
    nodeDef,
    ret,
    controlRet
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tensorboard.FunctionDef])
}
